bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	flags.process_closure_primitives  =  flags.process_closure_primitives;	      	compilable	  [FE]  AssertionFailedError  	8	1	replace
2	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives;	      	compilable	  [FE]  AssertionFailedError  	8	1	replace
3	[BUG]  [BUGGY]  wLevel.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  wLevel.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	wLevel.setDebugOptionsForCompilationLevel(options);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
4	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives(options);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives(options);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
5	[BUG]  [BUGGY]  flags.process_closure_primitives(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  flags.process_closure_primitives(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(options);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
6	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives();  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
7	[BUG]  [BUGGY]  options.closurePass  =  flags.closure_pass;  [CE]  cannot  find  symbol  closure_pass  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  flags.closure_pass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.closure_pass;	  options.closurePass    =   "   ";    	non-compiled	[CE]  cannot  find  symbol  closure_pass	13	None	replace
8	[BUG]  [BUGGY]  options.closurePass  =  flags.closurePass;  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  flags.closurePass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.closurePass;	  options.closurePass    =   "   ";    	non-compiled	[CE]  cannot  find  symbol  closurePass	13	None	replace
9	[BUG]  [BUGGY]  options.closurePass  = "n ";  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  = "n ";  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  = "n ";	  options.closurePass    =   "   ";    	non-compiled	[CE]  incompatible  types	13	None	replace
10	[BUG]  [BUGGY]  options.closurePass  =  'n';  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  'n';  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n';	  options.closurePass    =   "   ";    	non-compiled	[CE]  incompatible  types	13	None	replace
11	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  1;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  +  1;	  options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
12	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.debug);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.debug);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.debug);	  options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  ';'  expected	4	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
14	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
15	[BUG]  [BUGGY]  options.closurePass  |=!flags.test_closure_primitives;  [CE]  cannot  find  symbol  test_closure_primitives  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.test_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.test_closure_primitives;	  options.closurePass    |=!flags.prototype_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  test_closure_primitives	6	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  options.closurePass  |=  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=    false;    options.closurePass  |=  false;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
17	[BUG]  [BUGGY]  options.closurePass  |=  false;  options.closurePass  |=  false;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  options.closurePass  |=  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    options.closurePass  |=  false;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
19	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
20	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.closurePass  |=  false)  {  options.closurePass  |=  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.closurePass  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.closurePass  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	11	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
22	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
23	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }	  	non-compiled	[CE]  ')'  expected	11	None	add
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	21	add
25	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	21	add
26	[BUG]  [BUGGY]  Options.closurePass  =  true;  [CE]  cannot  find  symbol  Options  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Options.closurePass  =  true;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  true;	  Options.closurePass    =    false;    	non-compiled	[CE]  cannot  find  symbol  Options	9	None	replace
27	[BUG]  [BUGGY]  Option.closurePass  =  true;  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Option.closurePass  =  true;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  true;	  Options.closurePass    =    false;    	non-compiled	[CE]  cannot  find  symbol  closurePass	9	None	replace
28	[BUG]  [BUGGY]  Options.closurePass  =  null;  [CE]  cannot  find  symbol  Options  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Options.closurePass  =  null;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  null;	  Options.closurePass    =    false;    	non-compiled	[CE]  cannot  find  symbol  Options	9	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  true;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  |=  true;	  options.closurePass    |=    false;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
30	[BUG]  [BUGGY]  options.closurePass  |=  true;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  true;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;	  options.closurePass    |=    false;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
31	[BUG]  [BUGGY]  options.closurePass  |=  0;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  0;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  0;	  options.closurePass    |=    false;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	12	None	replace
32	[BUG]  [BUGGY]  options.closurePass  |=  1;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  1;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  1;	  options.closurePass    |=    false;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	12	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  |=  flags.process_closure_primitives;	  options.closurePass    |=    false;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
34	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives;	  options.closurePass    |=    false;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
35	[BUG]  [BUGGY]  options.closurePass  =  0;  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  0;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  0;	  options.closurePass    =    false;    	non-compiled	[CE]  incompatible  types	2	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
37	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
38	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    Options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  Options	3	None	add
39	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  OptionPass  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    OptionPass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  OptionPass	3	None	add
40	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  |=!flags.process_closure_primitives;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    |=!flags.process_closure_primitives;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
41	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);  [CE]  cannot  find  symbol  process_closure_primitives  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	5	None	replace
42	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level);  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
43	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.process_closure_primitives);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.process_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
44	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);  [CE]  cannot  find  symbol  protocol_closure_primitives  [FE]                  AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  protocol_closure_primitives	5	None	replace
45	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_closure_primitives);  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]                    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	5	None	replace
46	[BUG]  [BUGGY]      wLevel.setDebugOptionsForWarningLevel(options);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      wLevel.setDebugOptionsForWarningLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        wLevel.setDebugOptionsForWarningLevel(options);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    =    false;    options.closurePass  =  false;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
48	[BUG]  [BUGGY]  options.closurePass  =  false;  options.closurePass  =  false;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    options.closurePass  =  false;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
49	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  if(flags.closurePass)  {  options.closurePass  =  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    if(flags.closurePass)  {  options.closurePass  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	1	None	add
50	[BUG]  [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives)  {  options.closurePass  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives)  {  options.closurePass  =  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    ||  flags.process_closure_primitives)  {  options.closurePass  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
52	[BUG]  [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    ||  flags.process_closure_primitives  ||  flags.closurePass)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
53	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	1	None	add
54	[BUG]  [BUGGY]  options.closurePass  =  flags.closure_primitives;  [CE]  cannot  find  symbol  closure_primitives  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  flags.closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.closure_primitives;	  options.closurePass    =    null;    	non-compiled	[CE]  cannot  find  symbol  closure_primitives	10	None	replace
55	[BUG]  [BUGGY]  options.closurePass  =  wLevel;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  wLevel;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel;	  options.closurePass    =    null;    	non-compiled	[CE]  incompatible  types	10	None	replace
56	[BUG]  [BUGGY]  options.closurePass  =  flags.closurepass;  [CE]  cannot  find  symbol  closurepass  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  flags.closurepass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.closurepass;	  options.closurePass    =    null;    	non-compiled	[CE]  cannot  find  symbol  closurepass	10	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	        level.setDebugOptionsForCompilationLevel(options);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
58	[BUG]  [BUGGY]      level.setDebugOptionsForCompilationLevel(options);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        level.setDebugOptionsForCompilationLevel(options);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
59	[BUG]  [BUGGY]      logging_level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  logging_level  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      logging_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        logging_level.setDebugOptionsForCompilationLevel(options);	  	non-compiled	[CE]  cannot  find  symbol  logging_level	7	None	add
60	[BUG]  [BUGGY]      logging_level  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  logging_level  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      logging_level  =  flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        logging_level  =  flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  logging_level	7	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      initOptionsFromFlags(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	        initOptionsFromFlags(options);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
62	[BUG]  [BUGGY]      initOptionsFromFlags(options);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      initOptionsFromFlags(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        initOptionsFromFlags(options);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
63	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	1	None	add
64	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	1	None	add
65	[BUG]  [BUGGY]  options.closurePass  =  false;  Options.closurePass  =  false;  [CE]  cannot  find  symbol  Options  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  Options.closurePass  =  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    Options.closurePass  =  false;	  	non-compiled	[CE]  cannot  find  symbol  Options	1	None	add
66	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  >=  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  >=  false)  {  options.closurePass  =  false;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    =    false;    if(flags.closurePass  >=  false)  {  options.closurePass  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  closurePass	1	None	add
67	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_pass;  [CE]  cannot  find  symbol  process_closure_pass  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_pass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_pass;	  options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  process_closure_pass	4	None	replace
68	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_primitives);  [CE]  cannot  find  symbol  closure_primitives  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  closure_primitives	5	None	replace
69	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_pass);  [CE]  cannot  find  symbol  closure_pass  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_pass);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.closure_pass);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  closure_pass	5	None	replace
70	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
71	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
73	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
74	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  Solutions  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    Solutions.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  Solutions	3	None	add
75	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  solutions.closurePass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  solutions  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  solutions.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  solutions	3	None	add
76	[BUG]  [BUGGY]  options.closurePass  |=  null;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  null;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  null;	  options.closurePass    |=    false;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	12	None	replace
77	[BUG]  [BUGGY]  options.closurePass  =  closure_pass;  [CE]  cannot  find  symbol  closure_pass  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  closure_pass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  closure_pass;	  options.closurePass    =    null;    	non-compiled	[CE]  cannot  find  symbol  closure_pass	10	None	replace
78	[BUG]  [BUGGY]  options.closurePass  =  password;  [CE]  cannot  find  symbol  password  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  password;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  password;	  options.closurePass    =    null;    	non-compiled	[CE]  cannot  find  symbol  password	10	None	replace
79	[BUG]  [BUGGY]  options.closurePass  =   "/ ";  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =   "/ ";  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =   "/ ";	  options.closurePass    =   "   ";    	non-compiled	[CE]  incompatible  types	13	None	replace
80	[BUG]  [BUGGY]  options.closurePass  =' "';  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =' "';  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =' "';	  options.closurePass    =   "   ";    	non-compiled	[CE]  incompatible  types	13	None	replace
81	[BUG]  [BUGGY]  options.closurePass  |=  false;  Options.closurePass  |=  false;  [CE]  cannot  find  symbol  Options  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  Options.closurePass  |=  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    Options.closurePass  |=  false;	  	non-compiled	[CE]  cannot  find  symbol  Options	11	None	add
82	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    if(flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
83	[BUG]  [BUGGY]  options.closurePass  |=!flags.factory_closure_primitives;  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.factory_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.factory_closure_primitives;	  options.closurePass    |=!flags.prototype_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	6	None	replace
84	[BUG]  [BUGGY]  Options.closurePass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]                AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.prototype_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  Options	6	None	replace
85	[BUG]  [BUGGY]  options.closurePass  |=!flags.source_closure_primitives;  [CE]  cannot  find  symbol  source_closure_primitives  [FE]                  AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.source_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.source_closure_primitives;	  options.closurePass    |=!flags.prototype_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  source_closure_primitives	6	None	replace
86	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);  [CE]  constructor  CompilerOptions  in  class  CompilerOptions  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);	  options.closurePass    =    null;    	non-compiled	[CE]  constructor  CompilerOptions  in  class  CompilerOptions  cannot  be  applied  to  given  types;	10	None	replace
87	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);	  options.closurePass    =    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
88	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  option  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives;    option.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  option	3	None	add
89	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
90	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]              AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	5	None	replace
91	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);  [CE]  cannot  find  symbol  statement_closure_primitives  [FE]                AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);	  options.closurePass    |=    wLevel.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  statement_closure_primitives	5	None	replace
92	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);	      	non-compiled	[CE]  incompatible  types	8	None	replace
93	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
94	[BUG]  [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  OptionHandler  is  abstract;  cannot  be  instantiated  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  	non-compiled	[CE]  OptionHandler  is  abstract;  cannot  be  instantiated	11	None	add
95	[BUG]  [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;	  	non-compiled	[CE]  incompatible  types	11	None	add
96	[BUG]  [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  OptionHandler  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=  false;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    false;    OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  	non-compiled	[CE]  OptionHandler  is  abstract;  cannot  be  instantiated	11	None	add
97	[BUG]  [BUGGY]      Flags  flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]      Flags  flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	        Flags  flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
98	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;  [CE]  cannot  find  symbol  process_closure_pass  [FE]    AssertionFailedError    [CONTEXT]    if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {    [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;  [BUGGY]    }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;	  options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  process_closure_pass	4	None	replace
