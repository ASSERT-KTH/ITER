bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
2	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
3	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
4	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
5	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
6	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	  	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
7	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
8	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
9	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
10	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
11	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
12	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	initOptionsFromFlags(options);  	non-compiled	[CE]  <identifier>  expected	62	None	replace
