bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.closurePass  =  true;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  flags.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  flags.process_closure_primitives  =  true;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  =  true;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  flags.process_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  flags.process_closure_primitives  =  false;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  =  false;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  options.process_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.process_closure_primitives  =  false;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.process_closure_primitives  =  false;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  Injectables.checkState(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  Injectables.checkState(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  options.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.setOptionsForWarningLevel(options);  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setOptionsForWarningLevel(options);	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  options.applyToOptions(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.applyToOptions(options);  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.applyToOptions(options);	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.closurePass  =  false;  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  wLevel.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  wLevel.setOptionsForWarningLevel(options);  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	wLevel.setOptionsForWarningLevel(options);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsForFlags(options);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsForFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsForFlags(options);  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.applyToOptions(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsPass(options);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }    [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsPass(options);  }  [BUGGY]    return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsPass(options);  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
