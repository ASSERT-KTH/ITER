bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
2	[BUG]  [BUGGY]  wLevel.applyToOptions(options);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  wLevel.applyToOptions(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	wLevel.applyToOptions(options);	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
3	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
4	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  flags.process_closure_primitives  =  false;  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
5	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  options.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.process_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.process_closure_primitives  =  true;	  options.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  Options.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.process_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.process_closure_primitives  =  true;	  options.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.process_closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
9	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.closure_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
10	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closurePass;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closurePass;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.closurePass;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
11	[BUG]  [BUGGY]  options.closurePass  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
12	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.process_closure_primits;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.process_closure_primits;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.process_closure_primits;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
13	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	15	None	replace
15	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	15	None	replace
16	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)||  wLevel.isEnabled(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)||  wLevel.isEnabled(flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)||  wLevel.isEnabled(flags.process_closure_primitives);	  options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)?  wLevel.isEnabled(flags.process_closure_primitives):  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)?  wLevel.isEnabled(flags.process_closure_primitives):  null;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  |=  wLevel.isEnabled(flags.process_closure_primitives)?  wLevel.isEnabled(flags.process_closure_primitives):  null;	  options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
23	[BUG]  [BUGGY]  if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
24	[BUG]  [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
25	[BUG]  [BUGGY]  options.setOptionsForWarningLevel(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setOptionsForWarningLevel(flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setOptionsForWarningLevel(flags.process_closure_primitives);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
26	[BUG]  [BUGGY]  options.setOptionsForWarningLevel(flags.warning_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setOptionsForWarningLevel(flags.warning_level);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setOptionsForWarningLevel(flags.warning_level);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
27	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	  initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
29	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
30	[BUG]  [BUGGY]  if(flags.method_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.method_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.method_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
31	[BUG]  [BUGGY]  if(flags.method_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.method_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.method_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
32	[BUG]  [BUGGY]  Options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.closurePass  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
33	[BUG]  [BUGGY]  Option  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Option  options.closurePass  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Option  options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
34	[BUG]  [BUGGY]  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
36	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
37	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
38	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
39	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
40	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
41	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
42	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
43	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(!wLevel.isSupported())  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(!wLevel.isSupported())  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(!wLevel.isSupported())  {  initOptionsFromFlags(options);  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
44	[BUG]  [BUGGY]  s.process_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  s.process_closure_primitives  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	s.process_closure_primitives  =  false;	  if(flags.process_closure_primitives    ||    options.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
45	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primit)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primit)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.process_closure_primit)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
46	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primit)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primit)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.closure_primit)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
47	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primit)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primit)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.method_closure_primit)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
48	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [Delete]  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [Delete]  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [Delete]	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
49	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
50	[BUG]  [BUGGY]  initOptionsForFlags(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsForFlags(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsForFlags(options);	  if(flags.process_closure_primitives)    {    initOptionsForFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
51	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsForFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsForFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsForFlags(options);  }	  if(flags.process_closure_primitives)    {    initOptionsForFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
52	[BUG]  [BUGGY]  s.initOptionsForFlags(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  s.initOptionsForFlags(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	s.initOptionsForFlags(options);	  if(flags.process_closure_primitives)    {    initOptionsForFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
53	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  if(flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
58	[BUG]  [BUGGY]  if(!flags.error)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.error)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.error)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  if(!flags.warning_level)  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.warning_level)  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.warning_level)  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  true	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	14	None	replace
62	[BUG]  [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  s.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  s.process_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	s.process_closure_primitives  =  true;	  flags.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
65	[BUG]  [BUGGY]  flags.prototype_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.prototype_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.prototype_closure_primitives  =  true;	  flags.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
66	[BUG]  [BUGGY]  OptionFailedError  wLevel  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  wLevel  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  wLevel  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  Options.closurePass  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.closurePass  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.closurePass  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
68	[BUG]  [BUGGY]  Options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.closurePass  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
69	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  e  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
70	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
71	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
72	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
73	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
79	[BUG]  [BUGGY]  Integer  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Integer  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Integer  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
80	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
81	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
82	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
83	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives();  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  e  =  flags.process_closure_primitives();	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
84	[BUG]  [BUGGY]  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  options.closurePass  =  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  =  null;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  null;	  options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
87	[BUG]  [BUGGY]  options.closurePass  = " ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  = " ";  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  = " ";	  options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
88	[BUG]  [BUGGY]  initOptionsPass(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsPass(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsPass(options);	  if(flags.process_closure_primitives)    {    initOptionsPass(options);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
89	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsPass(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsPass(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsPass(options);  }	  if(flags.process_closure_primitives)    {    initOptionsPass(options);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
90	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives);	  if(flags.process_closure_primitives)    {    initOptionsPass(options);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
91	[BUG]  [BUGGY]  options.closurePass  =  t;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  =  t;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  t;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
92	[BUG]  [BUGGY]  options.closurePass  =  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.closurePass  =  flags.closure_pass;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.closurePass  =  flags.closure_pass;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
93	[BUG]  [BUGGY]  Options.closurePass  =  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.closurePass  =  flags.closure_pass;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.closurePass  =  flags.closure_pass;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
94	[BUG]  [BUGGY]  Options  options  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options  options  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options  options  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
95	[BUG]  [BUGGY]  if(flags.prototype_warning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.prototype_warning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.prototype_warning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
96	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
97	[BUG]  [BUGGY]  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  if(options.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(options.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(options.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    options.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
99	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives  ||  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    options.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
100	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
102	[BUG]  [BUGGY]  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
104	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
105	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.process_closure_	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
106	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives);  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
107	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  return  options;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  return  options;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  return  options;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
108	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  &&!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives  &&!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives  &&!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(!flags.process_closure_primitives    ||!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
109	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
110	[BUG]  [BUGGY]  Injectables.checkState(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
111	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
112	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
113	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
114	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
115	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
116	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  options.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  options.applyToOptions(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  options.applyToOptions(options);  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
118	[BUG]  [BUGGY]  injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	injectables.checkState(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
119	[BUG]  [BUGGY]  Injectables.checkState(flags.closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.closure_primitives)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
120	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
121	[BUG]  [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
122	[BUG]  [BUGGY]  forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
123	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
124	[BUG]  [BUGGY]  if(!flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
125	[BUG]  [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
126	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
127	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
128	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.clo	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
129	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
130	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
131	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
132	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Flags  flags  =  flags.process_closure_primitives;	  flags.process_closure_primitives    =    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
133	[BUG]  [BUGGY]  flags.prototype_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.prototype_closure_primitives  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.prototype_closure_primitives  =  false;	  flags.process_closure_primitives    =    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  flags.process_closure_primitives  |=  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.process_closure_primitives  |=  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives  |=  false;	  flags.process_closure_primitives    =    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
136	[BUG]  [BUGGY]  if(!flags.closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
137	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
138	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
139	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
140	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
141	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
142	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
143	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
144	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.formatting)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
145	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ==  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
146	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ==  false)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ==  false)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ==  false)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
147	[BUG]  [BUGGY]  formattingOption.applyToOptions(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  formattingOption.applyToOptions(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	formattingOption.applyToOptions(options);	  flags.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
148	[BUG]  [BUGGY]  Injectables.checkState(!flags.closure_pass)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(!flags.closure_pass)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(!flags.closure_pass)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
149	[BUG]  [BUGGY]  Injectables.checkState(flags.closure_pass  ==  0)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.closure_pass  ==  0)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.closure_pass  ==  0)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
150	[BUG]  [BUGGY]  Injectables.checkState(flags.closure_pass)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.closure_pass)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.closure_pass)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
151	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  initOptionsPass(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  initOptionsPass(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives)  {  initOptionsPass(options);  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
152	[BUG]  [BUGGY]  InitOptionsPass(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  InitOptionsPass(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	InitOptionsPass(options);	  if(flags.process_closure_primitives)    {    initOptionsPass(options);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
153	[BUG]  [BUGGY]  Integer  options  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Integer  options  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Integer  options  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    initOptionsPass(options);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
154	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >=  null)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
155	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  return  options;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  return  options;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  return  options;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
156	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
157	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
158	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
159	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
160	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
161	[BUG]  [BUGGY]  FormattingOption  warning_level  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  FormattingOption  warning_level  =  flags.warning_level;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	FormattingOption  warning_level  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
162	[BUG]  [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
163	[BUG]  [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
164	[BUG]  [BUGGY]  Option  options.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Option  options.process_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Option  options.process_closure_primitives  =  true;	  options.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {  initOptionsForFlags(options);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {  initOptionsForFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {  initOptionsForFlags(options);  }	  if(flags.process_closure_primitives)    {    initOptionsForFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
166	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
167	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
168	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
169	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
170	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  t  :  flags.process_closure_primitives)  {  options.closurePass  =  t;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
171	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  flags.pass)  {  options.closurePass  =  t;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  t  :  flags.pass)  {  options.closurePass  =  t;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  t  :  flags.pass)  {  options.closurePass  =  t;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
172	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  flags.closure_primitives)  {  options.closurePass  =  t;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  t  :  flags.closure_primitives)  {  options.closurePass  =  t;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  t  :  flags.closure_primitives)  {  options.closurePass  =  t;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
173	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  flags.prototype_closure)  {  options.closurePass  =  t;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  t  :  flags.prototype_closure)  {  options.closurePass  =  t;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  t  :  flags.prototype_closure)  {  options.closurePass  =  t;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
174	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	  initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  Integer  options  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Integer  options  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Integer  options  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
176	[BUG]  [BUGGY]  if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
177	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
178	[BUG]  [BUGGY]  if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives!=  null)  {  if(wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
179	[BUG]  [BUGGY]  Flags  flags.process_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Flags  flags.process_closure_primitives  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Flags  flags.process_closure_primitives  =  false;	  flags.process_closure_primitives    =    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
180	[BUG]  [BUGGY]  if(flags.errors)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.errors)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.errors)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.errors)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.errors)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.errors)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
181	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formatOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
182	[BUG]  [BUGGY]  options.setFormattingOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setFormattingOptionsForWarningLevel(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setFormattingOptionsForWarningLevel(options);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
183	[BUG]  [BUGGY]  options.setFormattingOption(formattingOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setFormattingOption(formattingOption);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setFormattingOption(formattingOption);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
184	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
185	[BUG]  [BUGGY]  if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives!=  null)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
186	[BUG]  [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
187	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
188	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closure  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closure  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closure	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
189	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
190	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
191	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
192	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
193	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
194	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.warning_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.warning_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.warning_primitives;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
195	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.warning_level;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.warning_level;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.warning_level;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
196	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closure_pass;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(Iterator  <  Warning>  it  =  flags.closure_pass;  it.hasNext();)  {  options.closurePass  =  it.next();  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(Iterator  <  Warning>  it  =  flags.closure_pass;  it.hasNext();)  {  options.closurePass  =  it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    flags.process_closure_primitives;    it.hasNext();)    {    options.closurePass    =    it.next();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
197	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
198	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit!=  return  options;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit!=  return  options;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit!=  return  options;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
199	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.formatting)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
200	[BUG]  [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
201	[BUG]  [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.setOptionsForWarningLevel(options);  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
202	[BUG]  [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.applyToOptions(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(options!=  null)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  wLevel.applyToOptions(options);  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
203	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
204	[BUG]  [BUGGY]  if(!flags.process_closure_pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_pass  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
205	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
206	[BUG]  [BUGGY]  option.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  option.closurePass  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	option.closurePass  =  true;	  options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
207	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
208	[BUG]  [BUGGY]  if(flags.process_closure_primitives!=  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives!=  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives!=  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
209	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ==  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ==  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ==  null)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
210	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
211	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
212	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||!options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||!options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||!options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  options.process_closure_primitives  =  false;  }	  if(flags.process_closure_primitives    ||    options.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    options.process_closure_primitives    =    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
213	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
214	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
215	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
216	[BUG]  [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	14	None	replace
217	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
218	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.test_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.test_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.test_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
219	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.prototype_closure)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
220	[BUG]  [BUGGY]  if(flags.pass  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.pass  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.pass  >  0)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
221	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
222	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
223	[BUG]  [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
224	[BUG]  [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
225	[BUG]  [BUGGY]  if(!flags.closurePass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.closurePass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.closurePass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
226	[BUG]  [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_pass)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_pass)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_pass)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
227	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
228	[BUG]  [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(wLevel.isSupported())  {  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(wLevel.isSupported())  {  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
229	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  &&  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  &&  options.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  if(flags.process_closure_primitives    ||    options.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
230	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  flags.process_closure_primitives  =  true;  }	  initOptionsFromFlags(options);    }    else    {    flags.process_closure_primitives    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
231	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.formatting)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.formatting)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
232	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
233	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
234	[BUG]  [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(WarningOption  warning_level,  flags.process_closure_primitives);	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
235	[BUG]  [BUGGY]  Option  options  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Option  options  =  flags.process_closure_primitives;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Option  options  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
236	[BUG]  [BUGGY]  Option  options  =  flags.process_closure_primitives(options);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Option  options  =  flags.process_closure_primitives(options);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Option  options  =  flags.process_closure_primitives(options);	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
237	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
238	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.setOptionsForWarningLevel(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass	  options.setOptionsForWarningLevel(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
239	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
240	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
241	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
242	[BUG]  [BUGGY]  options.setWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.setWarningLevel(wLevel);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.setWarningLevel(wLevel);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
243	[BUG]  [BUGGY]  options.addWarning(wLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  options.addWarning(wLevel,  wLevel);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	options.addWarning(wLevel,  wLevel);	  options.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
244	[BUG]  [BUGGY]  Options  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options  options.closurePass  =  false;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options  options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
245	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primit	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
246	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit ")  {  return  options;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit ")  {  return  options;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primit ")  {  return  options;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
247	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitties)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitties)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  for(AssertionFailedError  e  :  flags.process_closure_primitties)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primit    	non-compiled	[CE]  <identifier>  expected	52	None	replace
248	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
249	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options    	non-compiled	[CE]  <identifier>  expected	21	None	replace
250	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.use_only_custom_externs)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
251	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
252	[BUG]  [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(WarningOption  warning_level,  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
253	[BUG]  [BUGGY]  forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
254	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closure  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closure  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closure	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    	non-compiled	[CE]  <identifier>  expected	22	None	replace
255	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
256	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives();  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives();  options.closurePass  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	OptionFailedError  e  =  flags.process_closure_primitives();  options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
257	[BUG]  [BUGGY]  if(flags.applyToOptions(options))  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.applyToOptions(options))  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.applyToOptions(options))  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
258	[BUG]  [BUGGY]  Options  options  =  flags.closurePass;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options  options  =  flags.closurePass;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options  options  =  flags.closurePass;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
259	[BUG]  [BUGGY]  Options  options.closurePass  =  t;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options  options.closurePass  =  t;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options  options.closurePass  =  t;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
260	[BUG]  [BUGGY]  Options.closurePass  =  t;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Options.closurePass  =  t;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Options.closurePass  =  t;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    t    :    flags.process_closure_primitives)    {    options.closurePass    =    t;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
261	[BUG]  [BUGGY]  forcePass(wLevel,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  forcePass(wLevel,  flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	forcePass(wLevel,  flags.process_closure_primitives);	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
262	[BUG]  [BUGGY]  Flags  flags  =  new  Flags(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Flags  flags  =  new  Flags(flags.process_closure_primitives);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Flags  flags  =  new  Flags(flags.process_closure_primitives);	  flags.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
263	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives  ||  wLevel.isSupported())  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
264	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
265	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
266	[BUG]  [BUGGY]  wLevel.setFormattingOption(formattingOption);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  wLevel.setFormattingOption(formattingOption);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	wLevel.setFormattingOption(formattingOption);	  wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
267	[BUG]  [BUGGY]  if(!flags.forWarning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.forWarning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.forWarning)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
268	[BUG]  [BUGGY]  if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
269	[BUG]  [BUGGY]  if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.warning_level  &&  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass	  if(!flags.warning_level)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
270	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
271	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  for(AssertionFailedError  e  :  flags.process_closure_pass)  {  initOptionsFromFlags(options);  }	  options.applyToOptions(options);    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_    	non-compiled	[CE]  <identifier>  expected	53	None	replace
272	[BUG]  [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  }	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
273	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
274	[BUG]  [BUGGY]  if(flags.formatting)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.formatting)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.formatting)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
275	[BUG]  [BUGGY]  Injectables.checkState(wLevel.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(wLevel.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(wLevel.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
276	[BUG]  [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  Injectables.checkState(flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	Injectables.checkState(flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  Injectables.checkState(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
277	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    initOptionsForFlags(options);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
278	[BUG]  [BUGGY]  if(!flags.print_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.print_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.print_pass)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(!flags.process_closure_pass)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
279	[BUG]  [BUGGY]  option.process_closure_primitives  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  option.process_closure_primitives  =  true;  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	option.process_closure_primitives  =  true;	  options.process_closure_primitives    =    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
280	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
281	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  options.applyToOptions(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  options.applyToOptions(options);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
282	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  }	  initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.method_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
283	[BUG]  [BUGGY]  if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
284	[BUG]  [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_pass)  {  initOptionsFromFlags(options);  }  else  {  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  initOptionsFromFlags(options);    }    else    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
285	[BUG]  [BUGGY]  if(!flags.process_closure_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_externs)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.process_closure_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_externs)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.process_closure_externs)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_externs)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
286	[BUG]  [BUGGY]  if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(!flags.warning_level)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  formattingOption  :  flags.process_closure_primitives)  {  options.closurePass  =  true	  if(!flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    formattingOption    :    flags.process_closure_primitives)    {    options.closurePass    =    true    	non-compiled	[CE]  <identifier>  expected	2	None	replace
287	[BUG]  [BUGGY]  flags.process_closure_primitives(flags);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  flags.process_closure_primitives(flags);  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	flags.process_closure_primitives(flags);	  flags.process_closure_primitives    =    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
288	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo  [BUGGY]      return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  options.clo	  if(wLevel.isSupported())    {    if(flags.process_closure_primitives)    {    initOptionsFromFlags(options);    }    else    {    for(FormattingOption    wLevel    :    flags.process_closure_primitives)    {    options.clo    	non-compiled	[CE]  <identifier>  expected	24	None	replace
