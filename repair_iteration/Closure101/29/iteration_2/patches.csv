bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  =  flags.warning_level;	  for(FormattingOption    wLevel    :    flags.warning_level)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
2	[BUG]  [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  level.setDebugOptionsForWarningLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  level.setDebugOptionsForWarningLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  =  flags.warning_level;  level.setDebugOptionsForWarningLevel(options);	  for(FormattingOption    wLevel    :    flags.warning_level)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
3	[BUG]  [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  warning_level  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
4	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
5	[BUG]  [BUGGY]  options.closurePass  =  true;  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  options.closurePass  =  true;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	options.closurePass  =  true;	  for(FormattingOption    wLevel    :    flags.warning_level)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
6	[BUG]  [BUGGY]  if(flags.compute_closure_primitives  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closure_primitives  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closure_primitives  ||  flags.compute_closure_primitives)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	39	None	replace
7	[BUG]  [BUGGY]  if(flags.prototype_closure_primitives  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.prototype_closure_primitives  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.prototype_closure_primitives  ||  flags.compute_closure_primitives)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	39	None	replace
8	[BUG]  [BUGGY]  if(flags.compute_closure_primitives  ||  flags.complete_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closure_primitives  ||  flags.complete_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closure_primitives  ||  flags.complete_closure_primitives)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	39	None	replace
9	[BUG]  [BUGGY]  if(factory.pass!=  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass!=  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass!=  0  ||  flags.process_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	94	None	replace
10	[BUG]  [BUGGY]  if(flags.pass!=  0  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass!=  0  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass!=  0  ||  flags.prototype_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	94	None	replace
11	[BUG]  [BUGGY]  if(flags.closurePass!=  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass!=  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass!=  0  ||  flags.process_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	94	None	replace
12	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
13	[BUG]  [BUGGY]  level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
14	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
15	[BUG]  [BUGGY]  for(FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
16	[BUG]  [BUGGY]  ||!flags.use_only_custom_externs)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  ||  flags.use_only_custom_externs)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||  flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.process_closure_primits)  {  [CE]  cannot  find  symbol  process_closure_primits  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.process_closure_primits)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs    ||    flags.process_closure_primits)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primits	79	None	replace
19	[BUG]  [BUGGY]  if(use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  use_only_custom_externs  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs    ||    flags.process_closure_primits)    {    	non-compiled	[CE]  cannot  find  symbol  use_only_custom_externs	79	None	replace
20	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.factory_closure_primitives)  {	  if(factory_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	44	None	replace
21	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	72	None	replace
22	[BUG]  [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	72	None	replace
23	[BUG]  [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
24	[BUG]  [BUGGY]  tehnicăFor(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  tehnicăFor(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	tehnicăFor(FormattingOption  logging_level  :  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	72	None	replace
25	[BUG]  [BUGGY]  if(factory.closure_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	58	None	replace
26	[BUG]  [BUGGY]  if(options.closure_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  closure_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	58	None	replace
27	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	71	None	replace
28	[BUG]  [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  }	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	71	None	replace
29	[BUG]  [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  =  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options);	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  ';'  expected	71	None	replace
30	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||!process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	92	None	replace
31	[BUG]  [BUGGY]  if(factory.pass  ==  0  ||!factory.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass  ==  0  ||!factory.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass  ==  0  ||!factory.process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	92	None	replace
32	[BUG]  [BUGGY]  if(options.pass  ==  0  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ==  0  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ==  0  ||!flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	92	None	replace
33	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||!factory.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||!factory.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||!factory.process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	92	None	replace
34	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.error_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.error_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.error_level)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
35	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.compute_phase_ordering)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.compute_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.compute_phase_ordering)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
36	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.compiler_pass  ||  flags.warning_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.compiler_pass  ||  flags.warning_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.compiler_pass  ||  flags.warning_level)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
37	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  compiler_phase_ordering)  {  [CE]  cannot  find  symbol  compiler_phase_ordering  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  compiler_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  compiler_phase_ordering)  {	  if(compiler_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compiler_phase_ordering	45	None	replace
38	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  compute_phase_ordering)  {  [CE]  cannot  find  symbol  compute_phase_ordering  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  compute_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  compute_phase_ordering)  {	  if(compiler_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_phase_ordering	45	None	replace
39	[BUG]  [BUGGY]  if(compiler_phase_ordering  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  compiler_phase_ordering  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compiler_phase_ordering  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compiler_phase_ordering  ||  flags.prototype_closure_primitives)  {	  if(compiler_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compiler_phase_ordering	45	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.use_only_custom_externs  ||  flags.debug)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	89	1	replace
41	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.debug)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.debug)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	89	1	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compute_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.use_only_custom_externs  ||  flags.compute_phase_ordering)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	89	1	replace
43	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compute_phase_ordering)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compute_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.compute_phase_ordering)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	89	1	replace
44	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compiler)  {  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.compiler)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  compiler	89	None	replace
45	[BUG]  [BUGGY]  if(!process_closure_primitives  ||!flags.pass  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!process_closure_primitives  ||!flags.pass  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!process_closure_primitives  ||!flags.pass  ||!process_closure_primitives)  {	  if(!flags.pass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	91	None	replace
46	[BUG]  [BUGGY]  if(!factory_pass  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!factory_pass  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!factory_pass  ||!process_closure_primitives)  {	  if(!flags.pass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	91	None	replace
47	[BUG]  [BUGGY]  if(!options.pass  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!options.pass  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!options.pass  ||!process_closure_primitives)  {	  if(!flags.pass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	91	None	replace
48	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  if(!flags.use_only_custom_externs  &&!flags.debug)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  if(!flags.use_only_custom_externs  &&!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&!flags.debug)    {    if(!flags.use_only_custom_externs  &&!flags.debug)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
49	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  If(!flags.use_only_custom_externs  &&!flags.debug)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  If(!flags.use_only_custom_externs  &&!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&!flags.debug)    {    If(!flags.use_only_custom_externs  &&!flags.debug)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
50	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  ||!flags.use_only_custom_externs  &&!flags.debug)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  ||!flags.use_only_custom_externs  &&!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&!flags.debug)    {    ||!flags.use_only_custom_externs  &&!flags.debug)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
51	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  for(!flags.use_only_custom_externs  &&!flags.debug)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  for(!flags.use_only_custom_externs  &&!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&!flags.debug)    {    for(!flags.use_only_custom_externs  &&!flags.debug)  {	  	non-compiled	[CE]  not  a  statement	83	None	add
52	[BUG]  [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
53	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
54	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
55	[BUG]  [BUGGY]  for(FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
56	[BUG]  [BUGGY]  if(!flags.closure_primitives)  {  [CE]  cannot  find  symbol  closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closure_primitives)  {	  if(!flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_primitives	69	None	replace
57	[BUG]  [BUGGY]  if(!flags.closure_pass)  {  [CE]  cannot  find  symbol  closure_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closure_pass)  {	  if(!flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	69	None	replace
58	[BUG]  [BUGGY]  if(!flags.closure_pass_graph)  {  [CE]  cannot  find  symbol  closure_pass_graph  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closure_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closure_pass_graph)  {	  if(!flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass_graph	69	None	replace
59	[BUG]  [BUGGY]  if(!flags.closurePass  ||!factory.process_closure_primitives)  {  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||!factory.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||!factory.process_closure_primitives)  {	  if(!flags.closurePass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	67	None	replace
60	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||!flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||!flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.process_closure_primitives  ||!flags.closurePass)  {	  if(!flags.closurePass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	67	None	replace
61	[BUG]  [BUGGY]  if(flags.pass  ||  flags.closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.closure_primitives)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
62	[BUG]  [BUGGY]  if(flags.pass  ||  flags.property_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.property_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.property_closure_primitives)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
63	[BUG]  [BUGGY]  if(flags.pass  ||  flags.compute_phase_ordering)  {  [CE]  cannot  find  symbol  pass  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.compute_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.compute_phase_ordering)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
65	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
66	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.closurePass)  {	  if(flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	26	None	replace
67	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&!flags.closurePass)  {	  if(!flags.use_only_custom_externs    &&!flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	84	None	replace
68	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.reset)  {  [CE]  cannot  find  symbol  reset  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.reset)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&!flags.reset)  {	  if(!flags.use_only_custom_externs    &&!flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  reset	84	None	replace
69	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
70	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    If(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
71	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  for(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  for(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    for(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	15	None	add
72	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    if(flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
73	[BUG]  [BUGGY]  AssertionFailedError  <=!flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <=!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <=!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    AssertionFailedError    <=!flags.use_only_custom_externs)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError  <!flags.use_only_custom_externs)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    AssertionFailedError    <=!flags.use_only_custom_externs)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
75	[BUG]  [BUGGY]  AnsertionFailedError  <=!flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AnsertionFailedError  <=!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AnsertionFailedError  <=!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    AssertionFailedError    <=!flags.use_only_custom_externs)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
76	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
77	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  If(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  If(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
78	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  AssertionFailedError  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  AssertionFailedError  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    AssertionFailedError  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
79	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
80	[BUG]  [BUGGY]  if(factory.closurePass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.closurePass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.closurePass  ||  flags.process_closure_primitives)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	57	None	replace
81	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	57	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass  ||  flags.process_closure_primitives)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	57	1	replace
83	[BUG]  [BUGGY]  if(options.closurePass  ||  flags.process_closure_primitives)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ||  flags.process_closure_primitives)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	57	1	replace
84	[BUG]  [BUGGY]  if(!flags.closure_pass  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  closure_pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closure_pass  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closure_pass  ||!process_closure_primitives)  {	  if(!flags.closure_pass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	68	None	replace
85	[BUG]  [BUGGY]  if(process_ast  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  process_ast  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_ast  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_ast  ||  flags.process_closure_primitives)  {	  if(factory_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_ast	70	None	replace
86	[BUG]  [BUGGY]  if(format_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  format_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(format_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(format_pass  ||  flags.process_closure_primitives)  {	  if(factory_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  format_pass	70	None	replace
87	[BUG]  [BUGGY]  if(options.closurePass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	90	None	replace
88	[BUG]  [BUGGY]  if(factory.closurePass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.closurePass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.closurePass  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  factory	90	None	replace
89	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.closureStandard)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.closureStandard)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.closureStandard)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	90	None	replace
90	[BUG]  [BUGGY]  if(factory.pass  ==  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass  ==  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass  ==  0  ||  flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	61	None	replace
91	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||  flags.prototype_closure_primitives)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	61	None	replace
92	[BUG]  [BUGGY]  if(process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	61	None	replace
93	[BUG]  [BUGGY]  if(options.pass  ==  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ==  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ==  0  ||  flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	61	None	replace
94	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
95	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  If(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  If(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    If(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
96	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primits  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primits  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    if(flags.process_closure_primits  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
97	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  ||  flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  ||  flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    ||  flags.process_closure_primitives  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
98	[BUG]  [BUGGY]  if(compute_phase_ordering  &&  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  compute_phase_ordering  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compute_phase_ordering  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compute_phase_ordering  &&  flags.process_closure_primitives)  {	  if(compute_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_phase_ordering	95	None	replace
99	[BUG]  [BUGGY]  if(compute_phase_ordering  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  compute_phase_ordering  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compute_phase_ordering  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compute_phase_ordering  ||  flags.prototype_closure_primitives)  {	  if(compute_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_phase_ordering	95	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
101	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.process_closure_primitives  ||!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
103	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
104	[BUG]  [BUGGY]  if(factory_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	32	None	replace
105	[BUG]  [BUGGY]  if(compiler_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  compiler_phase_ordering  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compiler_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compiler_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compiler_phase_ordering	32	None	replace
106	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.pass  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.pass  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.pass  ||  flags.prototype_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	32	None	replace
107	[BUG]  [BUGGY]  if(debug_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  debug_phase_ordering  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(debug_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(debug_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  debug_phase_ordering	32	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
109	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
110	[BUG]  [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  cannot  find  symbol  closurePass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	29	None	replace
111	[BUG]  [BUGGY]  if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  cannot  find  symbol  user_only_custom_externs  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  user_only_custom_externs	29	None	replace
112	[BUG]  [BUGGY]  if(flags.pass  ||  flags.computePass)  {  [CE]  cannot  find  symbol  pass  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.computePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.computePass)  {	  if(flags.pass    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	54	None	replace
113	[BUG]  [BUGGY]  if(options.pass  ||  flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ||  flags.pass)  {	  if(flags.pass    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	54	None	replace
114	[BUG]  [BUGGY]  for(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    for(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
115	[BUG]  [BUGGY]  For(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  For(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	For(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    for(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
116	[BUG]  [BUGGY]  FormattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    for(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
117	[BUG]  [BUGGY]  For(formattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  For(formattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	For(formattingOption.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    for(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
118	[BUG]  [BUGGY]  if(factory.process_closure_primitives  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.process_closure_primitives  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.process_closure_primitives  ||  flags.compute_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	36	None	replace
119	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.prototype_compute_closure_primitives)  {  [CE]  cannot  find  symbol  prototype_compute_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.prototype_compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.prototype_compute_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  prototype_compute_closure_primitives	36	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.process_closure_primitives  ||  flags.print_pass_graph)  {	  if(flags.process_closure_primitives    ||    flags.compute_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	36	1	replace
121	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.print_pass_graph)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.print_pass_graph)  {	  if(flags.process_closure_primitives    ||    flags.compute_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	36	1	replace
122	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.closePass)  {  [CE]  cannot  find  symbol  closePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.closePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.closePass)  {	  if(!flags.use_only_custom_externs    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closePass	19	None	replace
123	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.version)  {  [CE]  cannot  find  symbol  version  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.version)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.version)  {	  if(!flags.use_only_custom_externs    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  version	19	None	replace
124	[BUG]  [BUGGY]  level.setDebugOptionsForWarningLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setDebugOptionsForWarningLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setDebugOptionsForWarningLevel(options);	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
125	[BUG]  [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
126	[BUG]  [BUGGY]  forceDebugOptionsForWarningLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  forceDebugOptionsForWarningLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	forceDebugOptionsForWarningLevel(options);	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
127	[BUG]  [BUGGY]  if(!factory_closure_primitives  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!factory_closure_primitives  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!factory_closure_primitives  ||!process_closure_primitives)  {	  if(!flags.closurePass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	48	None	replace
128	[BUG]  [BUGGY]  if(!process_closure_primitives  ||!flags.closurePass)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!process_closure_primitives  ||!flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!process_closure_primitives  ||!flags.closurePass)  {	  if(!flags.closurePass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	48	None	replace
129	[BUG]  [BUGGY]  if(!factory_closure_tree  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_tree  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!factory_closure_tree  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!factory_closure_tree  ||!process_closure_primitives)  {	  if(!flags.closurePass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_tree	48	None	replace
130	[BUG]  [BUGGY]  for(!flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
131	[BUG]  [BUGGY]  For(!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  For(!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	For(!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
132	[BUG]  [BUGGY]  FormattingOption.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
133	[BUG]  [BUGGY]  FormattingOption  wLevel  =  flags.use_only_custom_externs;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  =  flags.use_only_custom_externs;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  =  flags.use_only_custom_externs;	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
134	[BUG]  [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);	  for(FormattingOption    wLevel    :    flags.warning_level)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
135	[BUG]  [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
136	[BUG]  [BUGGY]  if(!flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  used_only_custom_externs  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.used_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  used_only_custom_externs	42	None	replace
137	[BUG]  [BUGGY]  if(flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  used_only_custom_externs  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.used_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.used_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  used_only_custom_externs	42	None	replace
138	[BUG]  [BUGGY]  if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  used_only_custom_externs  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.used_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  used_only_custom_externs	42	None	replace
139	[BUG]  [BUGGY]  if(!flags.pass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  pass  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||  flags.closurePass)  {	  if(!flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	56	None	replace
140	[BUG]  [BUGGY]  if(!flags.pass  ||  flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||  flags.pass)  {	  if(!flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	56	None	replace
141	[BUG]  [BUGGY]  if(!flags.pass  ||  flags.debug)  {  [CE]  cannot  find  symbol  pass  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||  flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||  flags.debug)  {	  if(!flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	56	None	replace
142	[BUG]  [BUGGY]  if(flags.process_closure_primits  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_primits  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primits  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primits  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    if(flags.process_closure_primits    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primits	11	None	replace
143	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primits)  {  [CE]  cannot  find  symbol  process_closure_primits  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_primits)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    if(flags.process_closure_primits    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primits	11	None	replace
144	[BUG]  [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  	21	None	replace
145	[BUG]  [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  warning_level  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
146	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.closure_pass)  {  [CE]  cannot  find  symbol  closure_pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.closure_pass)  {	  if(factory_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	81	None	replace
147	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  if(flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  if(flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    if(flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
148	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  If(flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  If(flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    If(flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
149	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  for(flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  for(flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    for(flags.use_only_custom_externs)  {	  	non-compiled	[CE]  not  a  statement	25	None	add
150	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  ||  flags.use_only_custom_externs)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    ||  flags.use_only_custom_externs)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
151	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  &&  flags.closurePass)  {	  if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	16	None	replace
152	[BUG]  [BUGGY]  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||    flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
153	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||    flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
154	[BUG]  [BUGGY]  &&  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  &&  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	&&  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||    flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
155	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.error)  {  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.error)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.error)  {	  if(flags.closurePass    ||    flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	53	None	replace
156	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.closure_primitives)  {  [CE]  cannot  find  symbol  closure_primitives  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.closure_primitives)  {	  if(flags.closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_primitives	38	None	replace
157	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.applyToOptions(options);  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.applyToOptions(options);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    logging_level.applyToOptions(options);    }    	non-compiled	[CE]  	75	None	replace
158	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level).applyToOptions(options);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level).applyToOptions(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level).applyToOptions(options);	  for(FormattingOption    logging_level    :    flags.logging_level)    {    logging_level.applyToOptions(options);    }    	non-compiled	[CE]  	75	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.print_pass_graph  &&  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
160	[BUG]  [BUGGY]  if(flags.print_pass_graph  &&  flags.process_closure_primitives)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph  &&  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass  ||  flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
162	[BUG]  [BUGGY]  if(options.closurePass  ||  flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ||  flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
163	[BUG]  [BUGGY]  if(flags.pass_graph  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass_graph  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass_graph  ||  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass_graph	47	None	replace
164	[BUG]  [BUGGY]  if(flags.compiler  ||  flags.pass)  {  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compiler  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compiler  ||  flags.pass)  {	  if(flags.pass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  compiler	76	None	replace
165	[BUG]  [BUGGY]  if(factory.pass  ||  flags.compiler)  {  [CE]  cannot  find  symbol  factory  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass  ||  flags.compiler)  {	  if(flags.pass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  factory	76	None	replace
166	[BUG]  [BUGGY]  if(options.pass  ||  flags.compiler)  {  [CE]  cannot  find  symbol  pass  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ||  flags.compiler)  {	  if(flags.pass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  pass	76	None	replace
167	[BUG]  [BUGGY]  AssertionFailedError  <=!flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <=!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <=!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
168	[BUG]  [BUGGY]  AssertionFailedError  <=!flags.method_closure_primitives)  {  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <=!flags.method_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <=!flags.method_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
169	[BUG]  [BUGGY]  AssertionFailedError  <!flags.process_closure_primitives)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
170	[BUG]  [BUGGY]  AssertionFailedError  <=!factory.process_closure_primitives)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AssertionFailedError  <=!factory.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AssertionFailedError  <=!factory.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
171	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
172	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  If(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  If(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    If(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
173	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(!flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
174	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(!flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
175	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
176	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  If(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  If(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    If(flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
177	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  AssertionFailedError  flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  AssertionFailedError  flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    AssertionFailedError  flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
178	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  flags.process_closure_primits)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    if(flags.print_pass_graph  ||  flags.process_closure_primits)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
179	[BUG]  [BUGGY]  for(!flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    for(!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
180	[BUG]  [BUGGY]  For(!flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  For(!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	For(!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    for(!flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
181	[BUG]  [BUGGY]  FormattingOption.process_closure_primitives)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    for(!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
182	[BUG]  [BUGGY]  for(!factory.process_closure_primitives)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!factory.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!factory.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    for(!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
183	[BUG]  [BUGGY]  if(factory.pass  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass  ||  flags.prototype_closure_primitives)  {	  if(factory.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	33	None	replace
184	[BUG]  [BUGGY]  if(wLevel  ||  flags.process_closure_primitives)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(wLevel  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(wLevel  ||  flags.process_closure_primitives)  {	  if(factory.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	33	None	replace
185	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForCompilationLevel(options);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForCompilationLevel(options);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    logging_level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	73	None	replace
186	[BUG]  [BUGGY]  If(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
187	[BUG]  [BUGGY]  If(flags.closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
188	[BUG]  [BUGGY]  If(flags.closurePass  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.closurePass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.closurePass  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
189	[BUG]  [BUGGY]  for(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
190	[BUG]  [BUGGY]  For(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  For(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	For(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
191	[BUG]  [BUGGY]  FormattingOption.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
192	[BUG]  [BUGGY]  for(!flags.use_only_custom_externs  ||  flags.method_closure_primitives)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.use_only_custom_externs  ||  flags.method_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.use_only_custom_externs  ||  flags.method_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
193	[BUG]  [BUGGY]  ||!flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
194	[BUG]  [BUGGY]  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||  flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.prototype_closure_primitives)  {	  if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	18	None	replace
196	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.pass)  {	  if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	18	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
198	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  &&!flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
200	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.use_only_custom_externs)  {	  if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	compilable	  [FE]  AssertionFailedError  	31	1	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass  ==  false)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
202	[BUG]  [BUGGY]  if(options.closurePass  ==  false)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ==  false)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass!=  false)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
204	[BUG]  [BUGGY]  if(options.closurePass!=  false)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass!=  false)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
205	[BUG]  [BUGGY]  if(options.closurePass  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  >  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  >  0)  {	  if(options.closurePass)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	50	None	replace
206	[BUG]  [BUGGY]  if(flags.closurePass  ==  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ==  false)  {	  if(!flags.use_only_custom_externs)    {    if(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	5	None	replace
207	[BUG]  [BUGGY]  if(flags.compiler  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compiler  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compiler  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  compiler	82	None	replace
208	[BUG]  [BUGGY]  if(factory.closurePass  ||  flags.compiler)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.closurePass  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.closurePass  ||  flags.compiler)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  factory	82	None	replace
209	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.version)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.version)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.version)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	82	None	replace
210	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
211	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  If(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  If(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    If(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
212	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(flags.used_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
213	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(flags.user_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
214	[BUG]  [BUGGY]  if(factory.combine_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.combine_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.combine_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.combine_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	97	None	replace
215	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.combine_closure_primitives)  {  [CE]  cannot  find  symbol  combine_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.combine_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.combine_closure_primitives)  {	  if(flags.combine_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  combine_closure_primitives	97	None	replace
216	[BUG]  [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options,  logging_level);  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options,  logging_level);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  :  flags.logging_level)  {  level.setDebugOptionsForCompilationLevel(options,  logging_level);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  	74	None	replace
217	[BUG]  [BUGGY]  for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
218	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
219	[BUG]  [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  if(!flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
220	[BUG]  [BUGGY]  for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  :  flags.formatting)  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
221	[BUG]  [BUGGY]  initOptionsFromFlags(options,  flags);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  initOptionsFromFlags(options,  flags);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	initOptionsFromFlags(options,  flags);	  initOptionsFromFlags(options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
222	[BUG]  [BUGGY]  initOptionsFromFlags(options,  wLevel);  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  initOptionsFromFlags(options,  wLevel);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	initOptionsFromFlags(options,  wLevel);	  initOptionsFromFlags(options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
223	[BUG]  [BUGGY]  initOptionsFromFlags(options,  flags.warning_level);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  initOptionsFromFlags(options,  flags.warning_level);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	initOptionsFromFlags(options,  flags.warning_level);	  initOptionsFromFlags(options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
224	[BUG]  [BUGGY]  if(compute_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compute_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compute_closure_primitives  ||  flags.process_closure_primitives)  {	  if(factory.compute_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	37	None	replace
225	[BUG]  [BUGGY]  if(factory.compute_closure_primitives  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.compute_closure_primitives  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.compute_closure_primitives  ||  flags.prototype_closure_primitives)  {	  if(factory.compute_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	37	None	replace
226	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.compute_closure_primitives)  {	  if(factory.compute_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	37	None	replace
227	[BUG]  [BUGGY]  if(flags.pass  ||  this.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  this.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  this.process_closure_primitives)  {	  if(this.process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	96	None	replace
228	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(this.process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	96	None	replace
229	[BUG]  [BUGGY]  if(options.closurePass)  {  if(options.closurePass)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  if(options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    if(options.closurePass)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
230	[BUG]  [BUGGY]  if(options.closurePass)  {  If(options.closurePass)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  If(options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    If(options.closurePass)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
231	[BUG]  [BUGGY]  if(options.closurePass)  {  for(options.closurePass)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  for(options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    for(options.closurePass)  {	  	non-compiled	[CE]  not  a  statement	49	None	add
232	[BUG]  [BUGGY]  if(options.closurePass)  {  AssertionFailedError  =  flags.error;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  AssertionFailedError  =  flags.error;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    AssertionFailedError  =  flags.error;	  	non-compiled	[CE]  ';'  expected	49	None	add
233	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.pass)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.pass)  {	  if(options.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	35	None	replace
234	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||!flags.closurePass)  {	  if(!flags.use_only_custom_externs    ||!flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	65	None	replace
235	[BUG]  [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.debug)  {  [CE]  cannot  find  symbol  closurePass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||!flags.use_only_custom_externs  ||!flags.debug)  {	  if(!flags.use_only_custom_externs    ||!flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	65	None	replace
236	[BUG]  [BUGGY]  ||!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  ||!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	||!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
237	[BUG]  [BUGGY]  &&!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  &&!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	&&!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
238	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.closurePass)  {	  if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	14	None	replace
239	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.pass)  {	  if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	14	None	replace
240	[BUG]  [BUGGY]  If(!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    If(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
241	[BUG]  [BUGGY]  If(!flags.closurePass)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.closurePass)  {	  if(!flags.use_only_custom_externs)    {    If(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
242	[BUG]  [BUGGY]  if(factory.compute_closure_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.compute_closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.compute_closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.compute_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	80	None	replace
243	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.compute_closure_pass)  {  [CE]  cannot  find  symbol  compute_closure_pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.compute_closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.compute_closure_pass)  {	  if(flags.compute_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_pass	80	None	replace
244	[BUG]  [BUGGY]  if(flags.combine_closure_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  combine_closure_pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.combine_closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.combine_closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.compute_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  combine_closure_pass	80	None	replace
245	[BUG]  [BUGGY]  If(!flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    If(!flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
246	[BUG]  [BUGGY]  if(options.pass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  pass  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ||  flags.closurePass)  {	  if(flags.pass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	55	None	replace
247	[BUG]  [BUGGY]  if(factory.pass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  factory  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory.pass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory.pass  ||  flags.closurePass)  {	  if(flags.pass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  factory	55	None	replace
248	[BUG]  [BUGGY]  if(wLevel.pass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  pass  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(wLevel.pass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(wLevel.pass  ||  flags.closurePass)  {	  if(flags.pass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	55	None	replace
249	[BUG]  [BUGGY]  if(flags.closurePass  ==  0)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ==  0)  {	  if(flags.pass    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	93	None	replace
250	[BUG]  [BUGGY]  if(options.pass  ==  0)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass  ==  0)  {	  if(flags.pass    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pass	93	None	replace
251	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||  flags.pass  ==  0)  {  [CE]  cannot  find  symbol  pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||  flags.pass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||  flags.pass  ==  0)  {	  if(flags.pass    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pass	93	None	replace
252	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||  flags.closurePass  ==  0)  {  [CE]  cannot  find  symbol  pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||  flags.closurePass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||  flags.closurePass  ==  0)  {	  if(flags.pass    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  pass	93	None	replace
253	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  if(!flags.use_only_custom_externs  ||!flags.debug)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  if(!flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.debug)    {    if(!flags.use_only_custom_externs  ||!flags.debug)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
254	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  If(!flags.use_only_custom_externs  ||!flags.debug)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  If(!flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.debug)    {    If(!flags.use_only_custom_externs  ||!flags.debug)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
255	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  ||!flags.use_only_custom_externs  ||!flags.debug)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  ||!flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.debug)    {    ||!flags.use_only_custom_externs  ||!flags.debug)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
256	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  for(!flags.use_only_custom_externs  ||!flags.debug)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  for(!flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.debug)    {    for(!flags.use_only_custom_externs  ||!flags.debug)  {	  	non-compiled	[CE]  not  a  statement	64	None	add
257	[BUG]  [BUGGY]  if(!flags.warning_level)  {  [CE]  bad  operand  type  WarningLevel  for  unary  operator  '!'  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.warning_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.warning_level)  {	  if(!flags.closurePass)    {    	non-compiled	[CE]  bad  operand  type  WarningLevel  for  unary  operator  '!'	27	None	replace
258	[BUG]  [BUGGY]  if(!flags.closurePass  ||  flags.warning_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||  flags.warning_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||  flags.warning_level)  {	  if(!flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
259	[BUG]  [BUGGY]  if(!flags.closurePass  ||  flags.debug)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||  flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||  flags.debug)  {	  if(!flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
260	[BUG]  [BUGGY]  if(!factory.closurePass)  {  [CE]  cannot  find  symbol  factory  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!factory.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!factory.closurePass)  {	  if(!flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  factory	27	None	replace
261	[BUG]  [BUGGY]  if(wLevel.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(wLevel.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(wLevel.closurePass)  {	  if(formattingOption.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	52	None	replace
262	[BUG]  [BUGGY]  If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
263	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
264	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
265	[BUG]  [BUGGY]  If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
266	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
267	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    if(!flags.used_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
268	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	13	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  true)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass!=  true)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
270	[BUG]  [BUGGY]  if(options.closurePass!=  true)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  true)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass!=  true)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ==  true)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass  ==  true)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
272	[BUG]  [BUGGY]  if(options.closurePass  ==  true)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ==  true)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ==  true)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
273	[BUG]  [BUGGY]  if(options.closurePass  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  >=  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  >=  false)  {	  if(options.closurePass)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	50	None	replace
274	[BUG]  [BUGGY]  AnsertionFailedError  <=!flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  AnsertionFailedError  <=!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	AnsertionFailedError  <=!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
275	[BUG]  [BUGGY]  assertionFailedError  <=!flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  assertionFailedError  <=!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	assertionFailedError  <=!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    AssertionFailedError    <=!flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
276	[BUG]  [BUGGY]  if(flags.pass  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.compute_closure_primitives)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
277	[BUG]  [BUGGY]  if(flags.pass  ||  flags.compiler_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.compiler_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.compiler_closure_primitives)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
278	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {	  if(flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	16	None	replace
279	[BUG]  [BUGGY]  if(flags.pass  ==  0  &&  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  &&  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	60	None	replace
280	[BUG]  [BUGGY]  if(flags.compute_closure_primitives  ||  flags.property_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closure_primitives  ||  flags.property_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closure_primitives  ||  flags.property_closure_primitives)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	39	None	replace
281	[BUG]  [BUGGY]  if(flags.compute_closure_primitives  ||  flags.type_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closure_primitives  ||  flags.type_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closure_primitives  ||  flags.type_closure_primitives)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	39	None	replace
282	[BUG]  [BUGGY]  If(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    If(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
283	[BUG]  [BUGGY]  if(!flags.pass  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||!flags.process_closure_primitives)  {	  if(!flags.closure_pass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	68	None	replace
284	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||!flags.closure_pass)  {  [CE]  cannot  find  symbol  closure_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.process_closure_primitives  ||!flags.closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.process_closure_primitives  ||!flags.closure_pass)  {	  if(!flags.closure_pass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	68	None	replace
285	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.process_closure_ordering)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.process_closure_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.process_closure_ordering)  {	  if(compute_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	95	None	replace
286	[BUG]  [BUGGY]  if(!flags.compute_closure_pass)  {  ||!flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.compute_closure_pass)  {  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.compute_closure_pass)  {  ||!flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
287	[BUG]  [BUGGY]  if(this.flags.pass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  pass  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(this.flags.pass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(this.flags.pass  ||  flags.closurePass)  {	  if(flags.pass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	55	None	replace
288	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  for(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  for(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    for(flags.print_pass_graph  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	46	None	add
289	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  for(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  for(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    for(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	59	None	add
290	[BUG]  [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  Integer>  level  =  options.closurePass;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  Integer>  level  =  options.closurePass;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    AssertionFailedError  <  Integer>  level  =  options.closurePass;	  	non-compiled	[CE]  ';'  expected	49	None	add
291	[BUG]  [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  CompilationLevel>  level  =  options.closurePass;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  CompilationLevel>  level  =  options.closurePass;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    AssertionFailedError  <  CompilationLevel>  level  =  options.closurePass;	  	non-compiled	[CE]  ';'  expected	49	None	add
292	[BUG]  [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  WarningLevel>  options  =  flags.closurePass;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  AssertionFailedError  <  WarningLevel>  options  =  flags.closurePass;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    AssertionFailedError  <  WarningLevel>  options  =  flags.closurePass;	  	non-compiled	[CE]  ';'  expected	49	None	add
293	[BUG]  [BUGGY]  if(flags.closurePass!=  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass!=  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass!=  false)  {	  if(!flags.use_only_custom_externs)    {    if(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	5	None	replace
294	[BUG]  [BUGGY]  if(flags.print_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  print_pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass  ||  flags.process_closure_primitives)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  print_pass	47	None	replace
295	[BUG]  [BUGGY]  if(flags.pass!=  0)  {  [CE]  cannot  find  symbol  pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass!=  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass!=  0)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	1	None	replace
296	[BUG]  [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
297	[BUG]  [BUGGY]  level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  level.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  level.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  level.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
298	[BUG]  [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
299	[BUG]  [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setReportOptionsForCompilationLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setReportOptionsForCompilationLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  logging_level  :  flags.logging_level)  {  level.setReportOptionsForCompilationLevel(options);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
300	[BUG]  [BUGGY]  if(process_closure_primitives  ==  0  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ==  0  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ==  0  ||!flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	92	None	replace
301	[BUG]  [BUGGY]  if(factory_pass  ==  0  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_pass  ==  0  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_pass  ==  0  ||!flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	92	None	replace
302	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.type)  {  [CE]  cannot  find  symbol  type  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.type)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.type)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  type	89	None	replace
303	[BUG]  [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  :  flags.warning_level)  {  level.setDebugOptionsForWarningLevel(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  	20	None	replace
304	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  if(!flags.use_only_custom_externs  ||! "flags.debug)  {  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.debug)  {  if(!flags.use_only_custom_externs  ||! "flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.debug)    {    if(!flags.use_only_custom_externs  ||! "flags.debug)  {	  	non-compiled	[CE]  unclosed  string  literal	64	None	add
305	[BUG]  [BUGGY]  if(flags.compute_closurePass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closurePass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closurePass  ||  flags.process_closure_primitives)  {	  if(flags.compute_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closurePass	80	None	replace
306	[BUG]  [BUGGY]  if(debug_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  debug_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(debug_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(debug_pass  ||  flags.process_closure_primitives)  {	  if(factory.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  debug_pass	33	None	replace
307	[BUG]  [BUGGY]  if(factory  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory  ||  flags.process_closure_primitives)  {	  if(factory.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory	33	None	replace
308	[BUG]  [BUGGY]  assertionFailedError  <=!flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  assertionFailedError  <=!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	assertionFailedError  <=!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    AssertionFailedError    <=!flags.use_only_custom_externs)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
309	[BUG]  [BUGGY]  if(flags.closurepass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  closurepass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurepass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurepass  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurepass	90	None	replace
310	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.closurepass)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.closurepass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.closurepass)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	90	None	replace
311	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.compute_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	19	None	replace
312	[BUG]  [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.applyToOptions(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  level.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  logging_level  :  flags.logging_level)  {  level.applyToOptions(options);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    logging_level.applyToOptions(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
313	[BUG]  [BUGGY]  if(flags.closurepass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  closurepass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurepass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurepass  ||  flags.process_closure_primitives)  {	  if(flags.closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurepass	58	None	replace
314	[BUG]  [BUGGY]  if(flags.closure_pass  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  closure_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closure_pass  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closure_pass  ||  flags.prototype_closure_primitives)  {	  if(flags.closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	58	None	replace
315	[BUG]  [BUGGY]  if(factory_pass!=  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_pass!=  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_pass!=  0  ||  flags.process_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	94	None	replace
316	[BUG]  [BUGGY]  if(this.process_closure_primitives!=  0  ||  flags.pass!=  0)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(this.process_closure_primitives!=  0  ||  flags.pass!=  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(this.process_closure_primitives!=  0  ||  flags.pass!=  0)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	94	None	replace
317	[BUG]  [BUGGY]  if(!process_closure_primitives  ||!flags.pass)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!process_closure_primitives  ||!flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!process_closure_primitives  ||!flags.pass)  {	  if(!flags.pass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	91	None	replace
318	[BUG]  [BUGGY]  if(flags.closePass  ==  0)  {  [CE]  cannot  find  symbol  closePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closePass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closePass  ==  0)  {	  if(flags.pass    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  closePass	93	None	replace
319	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.computeState())  {  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.computeState())  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.computeState())  {	  if(flags.closurePass    ||    flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	53	None	replace
320	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  for(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  for(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    for(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  not  a  statement	30	None	add
321	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
322	[BUG]  [BUGGY]  if(factory_pass  ==  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_pass  ==  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_pass  ==  0  ||  flags.process_closure_primitives)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	61	None	replace
323	[BUG]  [BUGGY]  if(this.process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(this.process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(this.process_closure_primitives  ==  0  ||  flags.pass  ==  0)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	61	None	replace
324	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  true;  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  true;  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
325	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.closure_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.closure_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.closure_level)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
326	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.logging_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.logging_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.logging_level)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
327	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.compiler_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.compiler_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.compiler_level)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
328	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {  [CE]  cannot  find  symbol  process_closure_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.process_closure_pass)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    if(flags.process_closure_primitives    ||    flags.process_closure_primits)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_pass	12	None	replace
329	[BUG]  [BUGGY]  if(flags.externs  ||  flags.process_closure_primitives)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.externs  ||  flags.process_closure_primitives)  {	  if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	18	None	replace
330	[BUG]  [BUGGY]  for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
331	[BUG]  [BUGGY]  for(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(!flags.use_only_custom_externs  ||!flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
332	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  for(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  for(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	17	None	add
333	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  AssertionFailedError  <=  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  AssertionFailedError  <=  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    AssertionFailedError  <=  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  	non-compiled	[CE]  not  a  statement	17	None	add
334	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_closure_pass)  {  [CE]  cannot  find  symbol  factory_closure_pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.factory_closure_pass)  {	  if(factory_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_pass	81	None	replace
335	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.process_closure_pass)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.process_closure_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.process_closure_pass)  {	  if(factory_closure_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	81	None	replace
336	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(!flags.use_only_Custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
337	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  if(!flags.use_only_Custom_externs  &&!flags.debug)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.debug)  {  if(!flags.use_only_Custom_externs  &&!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&!flags.debug)    {    if(!flags.use_only_Custom_externs  &&!flags.debug)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
338	[BUG]  [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  wLevel.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
339	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_pass)  {  [CE]  cannot  find  symbol  factory_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.factory_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.factory_pass)  {	  if(factory_pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	70	None	replace
340	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.closurePass  ==  false)  {	  if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	14	None	replace
341	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  false)  {  [CE]  cannot  find  symbol  closure_pass  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  false)  {	  if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	14	None	replace
342	[BUG]  [BUGGY]  if(factory_phase_ordering  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_phase_ordering  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_phase_ordering  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_phase_ordering  ||  flags.process_closure_primitives)  {	  if(compiler_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_phase_ordering	45	None	replace
343	[BUG]  [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  	22	None	replace
344	[BUG]  [BUGGY]  if(!flags.print_pass  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  print_pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.print_pass  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.print_pass  ||!flags.process_closure_primitives)  {	  if(!flags.closurePass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  print_pass	67	None	replace
345	[BUG]  [BUGGY]  if(!flags.source_closure_pass  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  source_closure_pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.source_closure_pass  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.source_closure_pass  ||!flags.process_closure_primitives)  {	  if(!flags.closurePass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  source_closure_pass	67	None	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.debug)  {	  if(!flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
347	[BUG]  [BUGGY]  if(!flags.debug)  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug)  {	  if(!flags.pass)    {    	compilable	  [FE]  AssertionFailedError  	56	1	replace
348	[BUG]  [BUGGY]  if(!flags.pass  ||!flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||!flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||!flags.pass)  {	  if(!flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	56	None	replace
349	[BUG]  [BUGGY]  if(factory_pass_graph  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass_graph  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_pass_graph  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_pass_graph  ||  flags.process_closure_primitives)  {	  if(factory_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass_graph	44	None	replace
350	[BUG]  [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
351	[BUG]  [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.debug)  {  level.setDebugOptionsForWarningLevel(options);  for  (FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
352	[BUG]  [BUGGY]  if(factory_compute_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_compute_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_compute_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_compute_closure_primitives  ||  flags.process_closure_primitives)  {	  if(factory.compute_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_compute_closure_primitives	37	None	replace
353	[BUG]  [BUGGY]  &&!flags.use_only_custom_externs)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  &&!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	&&!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
354	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  if(!flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs  &&  Flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
355	[BUG]  [BUGGY]  if(errors.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  errors  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(errors.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(errors.pass  ||  flags.process_closure_primitives)  {	  if(options.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  errors	35	None	replace
356	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	57	None	replace
357	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.prototype_closure_primitives)  {  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.prototype_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.prototype_closure_primitives)  {	  if(flags.closurePass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	57	None	replace
358	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.pass)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.pass)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	82	None	replace
359	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.prototypeFlag)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.prototypeFlag)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.prototypeFlag)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	82	None	replace
360	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.type)  {  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.type)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.type)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	82	None	replace
361	[BUG]  [BUGGY]  If(flags.process_closure_primitives  ||  flags.process_closure_primits)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.process_closure_primitives  ||  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.process_closure_primitives  ||  flags.process_closure_primits)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
362	[BUG]  [BUGGY]  if(!flags.debug  &&  options.closurePass!=  false)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug  &&  options.closurePass!=  false)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug  &&  options.closurePass!=  false)  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
363	[BUG]  [BUGGY]  if(!flags.debug  &&  options.closurePass!=  null)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug  &&  options.closurePass!=  null)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug  &&  options.closurePass!=  null)  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
364	[BUG]  [BUGGY]  FormattingOption.createOptionsFromFlags(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption.createOptionsFromFlags(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption.createOptionsFromFlags(options);	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
365	[BUG]  [BUGGY]  if(factory_closure_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_closure_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_closure_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_pass	32	None	replace
366	[BUG]  [BUGGY]  if(factory_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_pass	32	None	replace
367	[BUG]  [BUGGY]  if(!flags.closurePass  ||!flags.warning_level)  {  [CE]  cannot  find  symbol  closurePass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||!flags.warning_level)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||!flags.warning_level)  {	  if(!flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.use_only_custom_externs  ||!flags.debug)  {	  if(!flags.use_only_custom_externs    ||!flags.debug)    {    	compilable	  [FE]  AssertionFailedError  	65	1	replace
369	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.debug)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.debug)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||!flags.debug)  {	  if(!flags.use_only_custom_externs    ||!flags.debug)    {    	compilable	  [FE]  AssertionFailedError  	65	1	replace
370	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  AssertionFailedError  <=  flags.use_only_custom_externs;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  AssertionFailedError  <=  flags.use_only_custom_externs;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    AssertionFailedError  <=  flags.use_only_custom_externs;	  	non-compiled	[CE]  not  a  statement	25	None	add
371	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass!=  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass!=  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.closurePass!=  false)  {	  if(flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	26	None	replace
372	[BUG]  [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  logging_level  =  flags.logging_level)  {  level.setOptionsForCompilationLevel(options);	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
373	[BUG]  [BUGGY]  if(flags.combine_closure_primitives  ||  flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  combine_closure_primitives  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.combine_closure_primitives  ||  flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.combine_closure_primitives  ||  flags.compute_closure_primitives)  {	  if(flags.combine_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  combine_closure_primitives	97	None	replace
374	[BUG]  [BUGGY]  if(flags.combine_closure_primitives  ||  flags.source_closure_primitives)  {  [CE]  cannot  find  symbol  combine_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.combine_closure_primitives  ||  flags.source_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.combine_closure_primitives  ||  flags.source_closure_primitives)  {	  if(flags.combine_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  combine_closure_primitives	97	None	replace
375	[BUG]  [BUGGY]  if(!flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||  flags.process_closure_primitives)  {	  if(!flags.process_closure_primitives)    {    if(!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	1	None	replace
376	[BUG]  [BUGGY]  If(flags.process_closure_pass  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.process_closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.process_closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
377	[BUG]  [BUGGY]  If(flags.print_pass_graph  ||  flags.print_pass_graph)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  If(flags.print_pass_graph  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	If(flags.print_pass_graph  ||  flags.print_pass_graph)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    If(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(flags.print_pass_graph  ||  flags.print_pass_graph)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
379	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.print_pass_graph)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph  ||  flags.print_pass_graph)  {	  if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	47	1	replace
380	[BUG]  [BUGGY]  if(flags.process_closure_pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  process_closure_pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_pass  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    if(flags.process_closure_primits    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_pass	11	None	replace
381	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closure_primitives)  {  [CE]  cannot  find  symbol  closure_primitives  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.closure_primitives)  {	  if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_primitives	18	None	replace
382	[BUG]  [BUGGY]  if(options.closurePass  ||  flags.compiler)  {  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass  ||  flags.compiler)  {	  if(flags.closurePass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  compiler	82	None	replace
383	[BUG]  [BUGGY]  if(flags.pass  ==  1)  {  [CE]  cannot  find  symbol  pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  1)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  1)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	9	None	replace
384	[BUG]  [BUGGY]  if(!factory_closure_level  ||!process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_level  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!factory_closure_level  ||!process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!factory_closure_level  ||!process_closure_primitives)  {	  if(!flags.pass    ||!process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_level	91	None	replace
385	[BUG]  [BUGGY]  if(this.flags.pass  ||  flags.compiler)  {  [CE]  cannot  find  symbol  pass  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(this.flags.pass  ||  flags.compiler)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(this.flags.pass  ||  flags.compiler)  {	  if(flags.pass    ||    flags.compiler)    {    	non-compiled	[CE]  cannot  find  symbol  pass	76	None	replace
386	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.pass)  {  [CE]  cannot  find  symbol  pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&!flags.pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&!flags.pass)  {	  if(!flags.use_only_custom_externs    &&!flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  pass	84	None	replace
387	[BUG]  [BUGGY]  FormattingOption  flags  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  flags  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  flags  =  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
388	[BUG]  [BUGGY]  FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.use_only_custom_externs;  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.use_only_custom_externs;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.use_only_custom_externs;	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    for(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
389	[BUG]  [BUGGY]  if(compute_phase_ordering  ||  flags.closure_primitives)  {  [CE]  cannot  find  symbol  compute_phase_ordering  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compute_phase_ordering  ||  flags.closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compute_phase_ordering  ||  flags.closure_primitives)  {	  if(compute_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_phase_ordering	95	None	replace
390	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.process_closure_primitives)  {  ||  flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    ||    flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
391	[BUG]  [BUGGY]  if(process_closure_primitives  ||  flags.pass  ==  0)  {  [CE]  cannot  find  symbol  process_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(process_closure_primitives  ||  flags.pass  ==  0)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(process_closure_primitives  ||  flags.pass  ==  0)  {	  if(flags.pass    ==    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	61	None	replace
392	[BUG]  [BUGGY]  level  =  flags.warning_level;  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level  =  flags.warning_level;  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level  =  flags.warning_level;  for(FormattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    for    (FormattingOption    :    flags.formatting)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
393	[BUG]  [BUGGY]  level.setDebugOptionsForCompilationLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setDebugOptionsForCompilationLevel(options);	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setDebugOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
394	[BUG]  [BUGGY]  if(flags.pass  ||  flags.type_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  flags.type_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  flags.type_closure_primitives)  {	  if(flags.pass    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	34	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(!flags.use_only_custom_externs  ||  flags.print_pass_graph)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
396	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.print_pass_graph)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.print_pass_graph)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.print_pass_graph)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
397	[BUG]  [BUGGY]  if(flags.use_only_custom_externs)  {  AssertionFailedError  wLevel  =  flags.use_only_custom_externs;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs)  {  AssertionFailedError  wLevel  =  flags.use_only_custom_externs;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs)    {    AssertionFailedError  wLevel  =  flags.use_only_custom_externs;	  	non-compiled	[CE]  ';'  expected	25	None	add
398	[BUG]  [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  Flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.print_pass_graph  ||  flags.process_closure_primitives)  {  if(flags.print_pass_graph  ||  Flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.print_pass_graph    ||    flags.process_closure_primitives)    {    if(flags.print_pass_graph  ||  Flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
399	[BUG]  [BUGGY]  if(this.flags.closurePass  ||  flags.closurePass)  {  [CE]  cannot  find  symbol  closurePass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(this.flags.closurePass  ||  flags.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(this.flags.closurePass  ||  flags.closurePass)  {	  if(flags.closurePass    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	90	None	replace
400	[BUG]  [BUGGY]  if(!flags.debug  &&!level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug  &&!level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug  &&!level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
401	[BUG]  [BUGGY]  if(!flags.debug  &&  level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug  &&  level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug  &&  level.setDebugOptionsForWarningLevel(options))  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
402	[BUG]  [BUGGY]  if(!flags.debug  &&  options.closurePass  ==  false)  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.debug  &&  options.closurePass  ==  false)  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.debug  &&  options.closurePass  ==  false)  {  level.setDebugOptionsForWarningLevel(options);  }	  if(!flags.debug)    {    level.setDebugOptionsForWarningLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
403	[BUG]  [BUGGY]  if(flags.compute_closure_primitives  ||  flags.compute_closure_primits)  {  [CE]  cannot  find  symbol  compute_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.compute_closure_primitives  ||  flags.compute_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.compute_closure_primitives  ||  flags.compute_closure_primits)  {	  if(flags.compute_closure_primitives    ||    flags.prototype_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_closure_primitives	39	None	replace
404	[BUG]  [BUGGY]  if(!flags.pass  ||!flags.compute_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||!flags.compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||!flags.compute_closure_primitives)  {	  if(!flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	69	None	replace
405	[BUG]  [BUGGY]  if(!flags.pass  ||!compute_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||!compute_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||!compute_closure_primitives)  {	  if(!flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	69	None	replace
406	[BUG]  [BUGGY]  initOptionsFromFlags(options.closurePass);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  initOptionsFromFlags(options.closurePass);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	initOptionsFromFlags(options.closurePass);	  initOptionsFromFlags(options);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
407	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.print_pass)  {  [CE]  cannot  find  symbol  print_pass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.print_pass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.print_pass)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  print_pass	89	None	replace
408	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.close)  {  [CE]  cannot  find  symbol  close  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.close)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.close)  {	  if(!flags.use_only_custom_externs    ||    flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  close	89	None	replace
409	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  1)  {  [CE]  cannot  find  symbol  closure_pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  1)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.closure_pass  ==  1)  {	  if(!flags.use_only_custom_externs    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  closure_pass	14	None	replace
410	[BUG]  [BUGGY]  if(flags.pass  ==  0  ||!factory_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ==  0  ||!factory_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ==  0  ||!factory_closure_primitives)  {	  if(flags.pass    ==    0    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	92	None	replace
411	[BUG]  [BUGGY]  FormattingOption  flags  =  flags.use_only_custom_externs;  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  flags  =  flags.use_only_custom_externs;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  flags  =  flags.use_only_custom_externs;	  if(!flags.use_only_custom_externs)    {    for(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
412	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.combineFlags)  {  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.combineFlags)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.combineFlags)  {	  if(flags.closurePass    ||    flags.warning_level)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	51	None	replace
413	[BUG]  [BUGGY]  if(wLevel.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(wLevel.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(wLevel.pass  ||  flags.process_closure_primitives)  {	  if(factory.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	33	None	replace
414	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
415	[BUG]  [BUGGY]  if(compute_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  compute_phase_ordering  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(compute_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(compute_phase_ordering  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compute_phase_ordering	32	None	replace
416	[BUG]  [BUGGY]  if(print_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  print_pass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(print_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(print_pass  ||  flags.pass  ||  flags.process_closure_primitives)  {	  if(process_closure_primitives    ||    flags.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  print_pass	32	None	replace
417	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||!flags.use_only_custom_externs)  {  if(!flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    if(!flags.USE_only_custom_externs  ||!flags.use_only_custom_externs)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
418	[BUG]  [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primitives  &&  Flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  &&  flags.process_closure_primitives)  {  if(flags.process_closure_primitives  &&  Flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    if(flags.process_closure_primitives  &&  Flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	if(options.closurePass!=  options.closurePass)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
420	[BUG]  [BUGGY]  if(options.closurePass!=  options.closurePass)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass!=  options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass!=  options.closurePass)  {	  if(options.closurePass)    {    	compilable	  [FE]  AssertionFailedError  	50	1	replace
421	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primits)  {  [CE]  cannot  find  symbol  process_closure_primits  [FE]            AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  &&  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  &&  flags.process_closure_primits)  {	  if(!flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(!flags.use_only_custom_externs    ||    flags.process_closure_primits)    {    	non-compiled	[CE]  cannot  find  symbol  process_closure_primits	79	None	replace
422	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass  ==  false)  {  [CE]  cannot  find  symbol  closurePass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.closurePass  ==  false)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs  ||  flags.closurePass  ==  false)  {	  if(flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	26	None	replace
423	[BUG]  [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs)  {  [CE]  cannot  find  symbol  closurePass  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.closurePass  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.closurePass  ||!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs)    {    if(!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	5	None	replace
424	[BUG]  [BUGGY]  if(!flags.pass  ||  options.closurePass)  {  [CE]  cannot  find  symbol  pass  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||  options.closurePass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||  options.closurePass)  {	  if(!flags.pass)    {    	non-compiled	[CE]  cannot  find  symbol  pass	56	None	replace
425	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  Flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  Flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(flags.use_only_custom_externs  ||  Flags.process_closure_primitives)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
426	[BUG]  [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  flags.process_closure_primits)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.use_only_custom_externs  ||  flags.process_closure_primitives)  {  if(flags.use_only_custom_externs  ||  flags.process_closure_primits)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.use_only_custom_externs    ||    flags.process_closure_primitives)    {    if(flags.use_only_custom_externs  ||  flags.process_closure_primits)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
427	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  flags.protocol_closure_primitives)  {  [CE]  cannot  find  symbol  protocol_closure_primitives  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  flags.protocol_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  flags.protocol_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.compute_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  protocol_closure_primitives	36	None	replace
428	[BUG]  [BUGGY]  if(options.closurePass)  {  AssertionFailedError  =  options.closurePass;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.closurePass)  {  AssertionFailedError  =  options.closurePass;  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.closurePass)    {    AssertionFailedError  =  options.closurePass;	  	non-compiled	[CE]  ';'  expected	49	None	add
429	[BUG]  [BUGGY]  FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	FormattingOption  flags  =  flags.process_closure_primitives  ||  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    for(flags.process_closure_primitives    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
430	[BUG]  [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForWarningLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForWarningLevel(options);  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  logging_level  :  flags.logging_level)  {  logging_level.setOptionsForWarningLevel(options);  }	  for(FormattingOption    logging_level    :    flags.logging_level)    {    logging_level.applyToOptions(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
431	[BUG]  [BUGGY]  if(!flags.pass  ||!flags.use_only_custom_externs)  {  [CE]  cannot  find  symbol  pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.pass  ||!flags.use_only_custom_externs)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.pass  ||!flags.use_only_custom_externs)  {	  if(!flags.use_only_custom_externs    ||!flags.use_only_custom_externs)    {    	non-compiled	[CE]  cannot  find  symbol  pass	29	None	replace
432	[BUG]  [BUGGY]  if(factory_closure_primitives!=  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(factory_closure_primitives!=  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(factory_closure_primitives!=  0  ||  flags.process_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	94	None	replace
433	[BUG]  [BUGGY]  if(options.pass!=  0  ||  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]          AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(options.pass!=  0  ||  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(options.pass!=  0  ||  flags.process_closure_primitives)  {	  if(flags.pass!=    0    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	94	None	replace
434	[BUG]  [BUGGY]  if(flags.closurePass  ||  flags.comment)  {  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.closurePass  ||  flags.comment)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.closurePass  ||  flags.comment)  {	  if(flags.closurePass    ||    flags.debug)    {    	non-compiled	[CE]  cannot  find  symbol  closurePass	53	None	replace
435	[BUG]  [BUGGY]  if(flags.pass!=  0  &&  flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]    AssertionFailedError    [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass!=  0  &&  flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass!=  0  &&  flags.process_closure_primitives)  {	  if(flags.process_closure_primitives    &&    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	60	None	replace
436	[BUG]  [BUGGY]  if(!flags.for_closure_primitives  ||!flags.process_closure_primitives)  {  [CE]  cannot  find  symbol  for_closure_primitives  [FE]        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.for_closure_primitives  ||!flags.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.for_closure_primitives  ||!flags.process_closure_primitives)  {	  if(!flags.closurePass    ||!flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  for_closure_primitives	67	None	replace
437	[BUG]  [BUGGY]  for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  false;  }  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	for(FormattingOption  wLevel  :  flags.closurePass)  {  options.closurePass  =  false;  }	  for(FormattingOption    wLevel    :    flags.warning_level)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
438	[BUG]  [BUGGY]  if(flags.pass  ||  options.process_closure_primitives)  {  [CE]  cannot  find  symbol  pass  [FE]                  AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.pass  ||  options.process_closure_primitives)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.pass  ||  options.process_closure_primitives)  {	  if(options.pass    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  pass	35	None	replace
439	[BUG]  [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.closurepass)  {  [CE]  cannot  find  symbol  closurepass  [FE]              AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(!flags.use_only_custom_externs  ||  flags.closurepass)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(!flags.use_only_custom_externs  ||  flags.closurepass)  {	  if(!flags.use_only_custom_externs    ||    flags.closurePass)    {    	non-compiled	[CE]  cannot  find  symbol  closurepass	19	None	replace
440	[BUG]  [BUGGY]  if(flags.process_closure_primitives  ||  compilation_phase_ordering)  {  [CE]  cannot  find  symbol  compilation_phase_ordering  [FE]                    AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  if(flags.process_closure_primitives  ||  compilation_phase_ordering)  {  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	if(flags.process_closure_primitives  ||  compilation_phase_ordering)  {	  if(compiler_phase_ordering    ||    flags.process_closure_primitives)    {    	non-compiled	[CE]  cannot  find  symbol  compilation_phase_ordering	45	None	replace
441	[BUG]  [BUGGY]  level.setOptionsForCompilationLevel(options);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]      level.setOptionsForCompilationLevel(options);  if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }      [BUGGY]  level.setOptionsForCompilationLevel(options);  [BUGGY]      options.closurePass  =  true;  }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	level.setOptionsForCompilationLevel(options);	  if(formattingOption!=    null)    {    for(FormattingOption    logging_level    :    flags.logging_level)    {    level.setOptionsForCompilationLevel(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
