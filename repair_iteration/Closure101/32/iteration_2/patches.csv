bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
2	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
3	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
4	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  warning_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  warning_level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
6	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
7	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
8	[BUG]  [BUGGY]  return  flags  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  &&  flags.process_closure_primitives;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  return  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  ||  flags.process_closure_primitives;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  return  flags  ||  flags.process_closure_primitives  &&  options.closurePass;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  ||  flags.process_closure_primitives  &&  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  ||  flags.process_closure_primitives  &&  options.closurePass;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  return  flags  ||  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  ||  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  ||  flags.prototype_closure_primitives;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_pass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.closure_pass);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
13	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
14	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  options.closure_pass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  options.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  options.closure_pass);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
15	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  warning_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.closure_primitives,  warning_level);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
16	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
17	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  flags.process_closure_primitives;	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
18	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  flags;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  flags;	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
19	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  flags.warning_level;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  flags.warning_level;	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
20	[BUG]  [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);	  return(options!=    null)?    0    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives,  options);	  return(options!=    null)?    0    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);	  return(options!=    null)?    0    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  return(flags!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options);	  return(options!=    null)?    0    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.closure_primitives);	  return    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  options,  wLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  options,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  options,  wLevel);	  return    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closurePass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
27	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
28	[BUG]  [BUGGY]  return(options  >=  null)?  null  :  options.options;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  >=  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  >=  null)?  null  :  options.options;	  return(options!=    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
29	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.options  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.options  ||  flags.process_closure_primitives;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
30	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.options);	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
31	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  wLevel);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
32	[BUG]  [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options.closure_primitives,  flags.compiler_closure_primitives);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
33	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.compiler_closure_primitives);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
34	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
35	[BUG]  [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
36	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningOption  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
37	[BUG]  [BUGGY]  FormattingOption  warning_level  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingOption  warning_level  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingOption  warning_level  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
38	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningOption  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningOption  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
39	[BUG]  [BUGGY]  return(options!=  null)?  this  :  options.options;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  this  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  this  :  options.options;	  return(this.options!=    null)?    this    :    options.options;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
40	[BUG]  [BUGGY]  return(this.options  ==  null)?  this  :  options.options;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  this  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  this  :  options.options;	  return(this.options!=    null)?    this    :    options.options;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
41	[BUG]  [BUGGY]  return(this.options!=  null)?  null  :  options.options;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  null  :  options.options;	  return(this.options!=    null)?    this    :    options.options;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
42	[BUG]  [BUGGY]  return(options  ==  null)?  this  :  options.options;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  this  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  this  :  options.options;	  return(this.options!=    null)?    this    :    options.options;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
43	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
44	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
45	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_error)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_error)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_error)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
46	[BUG]  [BUGGY]  AssertionFailedError  wLevel  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  AssertionFailedError  wLevel  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	AssertionFailedError  wLevel  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
47	[BUG]  [BUGGY]  FormattingError  wLevel  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingError  wLevel  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingError  wLevel  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
48	[BUG]  [BUGGY]  return(this.options  ==  null)?  this.options  :  options;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  this.options  :  options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  this.options  :  options;	  return(this.options!=    null)?    this.options    :    options;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
49	[BUG]  [BUGGY]  return(this.options!=  null)?  this.options  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  this.options  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  this.options  :  options.closurePass;	  return(this.options!=    null)?    this.options    :    options;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
50	[BUG]  [BUGGY]  return(this.options!=  null)?  this.options  :  flags;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  this.options  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  this.options  :  flags;	  return(this.options!=    null)?    this.options    :    options;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
51	[BUG]  [BUGGY]  return(this.options  ==  null)?  this.options  :  flags;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  this.options  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  this.options  :  flags;	  return(this.options!=    null)?    this.options    :    options;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
52	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
53	[BUG]  [BUGGY]  ||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  ||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
54	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
55	[BUG]  [BUGGY]  ||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  ||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	||  flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
56	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
57	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
58	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
59	[BUG]  [BUGGY]  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  options.closurePass  =  false;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	options.closurePass  =  false;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
60	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
61	[BUG]  [BUGGY]  return(flags.errors)?  this  :  flags.warning_level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  this  :  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  this  :  flags.warning_level;	  return(flags.errors)?    this    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
62	[BUG]  [BUGGY]  return(errors.errors)?  this  :  flags.errors;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(errors.errors)?  this  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(errors.errors)?  this  :  flags.errors;	  return(flags.errors)?    this    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
63	[BUG]  [BUGGY]  return(flags.errors)?  this  :  flags.errors_level;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  this  :  flags.errors_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  this  :  flags.errors_level;	  return(flags.errors)?    this    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
64	[BUG]  [BUGGY]  return  options.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.process_closure_primitives;	  return    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
65	[BUG]  [BUGGY]  return  flags.process_closure_primitives  ||  options.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  ||  options.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  ||  options.process_closure_primitives;	  return    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
66	[BUG]  [BUGGY]  return  flags.process_closure_primitives  &&  options.closurePass;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  &&  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  &&  options.closurePass;	  return    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
67	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  options.closurePass,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  options.closurePass,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  options.closurePass,  wLevel);	  return    new    CompilerOptions(flags.closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
68	[BUG]  [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options.closure_primitives,  flags.closurePass);	  return    new    CompilerOptions(flags.closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
69	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
70	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
71	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
72	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
73	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
74	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
75	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
76	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
77	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
78	[BUG]  [BUGGY]  return(this.options  ==  null?  this.options  :  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null?  this.options  :  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null?  this.options  :  options);	  return(this.options!=    null?    this.options    :    options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
79	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  options.closurePass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  this.options  :  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  this.options  :  options.closurePass);	  return(this.options!=    null?    this.options    :    options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
80	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  this.options  :  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  this.options  :  flags.process_closure_primitives);	  return(this.options!=    null?    this.options    :    options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
81	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(flags.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
82	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closurePass,  flags.warning_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closurePass,  flags.warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.closurePass,  flags.warning_level);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  options.closurePass  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  options.closurePass  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  options.closurePass  +  1;	  return(options!=    null)?    options    :    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
84	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  options.closurePass  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  options.closurePass  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  options.closurePass  +  1;	  return(options!=    null)?    options    :    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
85	[BUG]  [BUGGY]  return(options  ==  null)?  options.closurePass  :  options.closurePass  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options.closurePass  :  options.closurePass  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options.closurePass  :  options.closurePass  +  1;	  return(options!=    null)?    options    :    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
86	[BUG]  [BUGGY]  return(options!=  null)?  options  :  options.closurePass  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  options.closurePass  +  2;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  options.closurePass  +  2;	  return(options!=    null)?    options    :    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
87	[BUG]  [BUGGY]  return(flags.warning_level)?  null  :  flags.errors;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.warning_level)?  null  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.warning_level)?  null  :  flags.errors;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
88	[BUG]  [BUGGY]  return(flags.errors)?  null  :  flags.warning_level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  null  :  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  null  :  flags.warning_level;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
89	[BUG]  [BUGGY]  return(errors.errors)?  null  :  flags.errors;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(errors.errors)?  null  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(errors.errors)?  null  :  flags.errors;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
90	[BUG]  [BUGGY]  return(flags.errors)?  0  :  flags.errors;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  0  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  0  :  flags.errors;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
91	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.process_closure_primitives)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError  wLevel  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  AssertionFailedError  wLevel  =  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	AssertionFailedError  wLevel  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
93	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_level)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
94	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
95	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
96	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  this.options;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  options  :  this.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  options  :  this.options;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
97	[BUG]  [BUGGY]  return(this.options!=  null)?  options  :  flags.closurePass;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  options  :  flags.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  options  :  flags.closurePass;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
98	[BUG]  [BUGGY]  return  flags.closurePass  ||  options.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  ||  options.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  ||  options.process_closure_primitives;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  return  flags.process_closure_primitives  ||  options.closurePass;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  ||  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  ||  options.closurePass;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
100	[BUG]  [BUGGY]  return  options.closurePass  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  &&  flags.process_closure_primitives;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
101	[BUG]  [BUGGY]  return  flags.closurePass  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  ||  flags.process_closure_primitives;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
102	[BUG]  [BUGGY]  return(this.options  ==  null)?  0  :  this.options;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  0  :  this.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  0  :  this.options;	  return(this.options!=    null)?    0    :    this.options;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
103	[BUG]  [BUGGY]  return(this.options!=  null)?  1  :  this.options;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  1  :  this.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  1  :  this.options;	  return(this.options!=    null)?    0    :    this.options;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
104	[BUG]  [BUGGY]  return(this.options!=  null)?  0  :  flags.closurePass;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  0  :  flags.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  0  :  flags.closurePass;	  return(this.options!=    null)?    0    :    this.options;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
105	[BUG]  [BUGGY]  return(this.errors!=  null?  options.errors  :  flags.errors);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null?  options.errors  :  flags.errors);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null?  options.errors  :  flags.errors);	  return(this.errors!=    null?    this.errors    :    options.errors);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
106	[BUG]  [BUGGY]  return(this.errors  ==  null?  this.errors  :  options.errors);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors  ==  null?  this.errors  :  options.errors);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors  ==  null?  this.errors  :  options.errors);	  return(this.errors!=    null?    this.errors    :    options.errors);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
107	[BUG]  [BUGGY]  return(this.errors!=  null?  this.errors  :  flags.errors);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null?  this.errors  :  flags.errors);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null?  this.errors  :  flags.errors);	  return(this.errors!=    null?    this.errors    :    options.errors);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
108	[BUG]  [BUGGY]  return  options.closurePass  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  -  2;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  -  2;	  return    options.closurePass    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
109	[BUG]  [BUGGY]  return  options.closurePass  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  /  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  /  1;	  return    options.closurePass    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
110	[BUG]  [BUGGY]  return  options.closurePass  -  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  -  3;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  -  3;	  return    options.closurePass    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
111	[BUG]  [BUGGY]  return  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  null;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
112	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
113	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  null;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
114	[BUG]  [BUGGY]  return(wLevel  ==  null)?  null  :  wLevel.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel  ==  null)?  null  :  wLevel.toString();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel  ==  null)?  null  :  wLevel.toString();	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
115	[BUG]  [BUGGY]  return(wLevel!=  null)?  null  :  wLevel.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel!=  null)?  null  :  wLevel.toString();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel!=  null)?  null  :  wLevel.toString();	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
116	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
117	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
118	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
119	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  options.closurePass;	  return(options!=    null)?    0    :    options.closurePass;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
120	[BUG]  [BUGGY]  return(options.closurePass!=  null)?  0  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options.closurePass!=  null)?  0  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options.closurePass!=  null)?  0  :  options.closurePass;	  return(options!=    null)?    0    :    options.closurePass;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
121	[BUG]  [BUGGY]  return(options!=  null)?  0  :  options.closurePass  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  options.closurePass  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  options.closurePass  +  1;	  return(options!=    null)?    0    :    options.closurePass;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
122	[BUG]  [BUGGY]  return(options!=  null)?  1  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  1  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  1  :  options.closurePass;	  return(options!=    null)?    0    :    options.closurePass;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
123	[BUG]  [BUGGY]  return  this.errors  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.errors  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.errors  &&  flags.process_closure_primitives;	  return    this.errors    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
124	[BUG]  [BUGGY]  return  flags.process_closure_primitives  ||  this.errors;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  ||  this.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  ||  this.errors;	  return    this.errors    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
125	[BUG]  [BUGGY]  return  flags.errors  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.errors  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.errors  ||  flags.process_closure_primitives;	  return    this.errors    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
126	[BUG]  [BUGGY]  return  flags  ||  this.errors;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  ||  this.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  ||  this.errors;	  return    this.errors    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
127	[BUG]  [BUGGY]  return  this.errors  &  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.errors  &  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.errors  &  flags.process_closure_primitives;	  return    this.errors    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
128	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closurePass);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.closurePass);	  return    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
129	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.warning_level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.warning_level);	  return    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
130	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  wLevel.closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  wLevel.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  wLevel.closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  options.closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  options.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  options.closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
132	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.warning_level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.warning_level);	  return    new    CompilerOptions(wLevel,    flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
133	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
134	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  return(this.errors  ==  null)?  null  :  flags.errors;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors  ==  null)?  null  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors  ==  null)?  null  :  flags.errors;	  return(this.errors    ==    null)?    null    :    this.errors;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
136	[BUG]  [BUGGY]  return(this.errors  ==  null)?  null  :  flags;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors  ==  null)?  null  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors  ==  null)?  null  :  flags;	  return(this.errors    ==    null)?    null    :    this.errors;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
137	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  flags.closurePass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  flags.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  flags.closurePass;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
138	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  this.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  this.options);	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
139	[BUG]  [BUGGY]  return  new  CompilerOptions(flags);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags);	  return    new    CompilerOptions(options);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
140	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  wLevel);	  return    new    CompilerOptions(options);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
141	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags);	  return    new    CompilerOptions(options);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
142	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_pass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_pass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
143	[BUG]  [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
144	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
146	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_pass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_pass);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
147	[BUG]  [BUGGY]  return(options  ==  null)?  options.closurePass  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options.closurePass  :  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options.closurePass  :  flags.process_closure_primitives;	  return(options    ==    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
148	[BUG]  [BUGGY]  return(options  ==  null)?  options.closurePass  :  flags;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options.closurePass  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options.closurePass  :  flags;	  return(options    ==    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
149	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
150	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
151	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
152	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_level)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
153	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
154	[BUG]  [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingOption  warning_level  :  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
155	[BUG]  [BUGGY]  return  flags.prototype_closure_primitives  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.prototype_closure_primitives  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.prototype_closure_primitives  ||  flags.process_closure_primitives;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  return  flags.prototype_closure_primitives  ||  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.prototype_closure_primitives  ||  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.prototype_closure_primitives  ||  flags.prototype_closure_primitives;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
157	[BUG]  [BUGGY]  return  flags.closure_primitives;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closure_primitives;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
158	[BUG]  [BUGGY]  FormattingError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingError  e  :  flags.process_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
159	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	OptionFailedError  e  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
160	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.error_message)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.error_message)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.error_message)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
161	[BUG]  [BUGGY]  return(this.options  ==  null?  this.options  :  options.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null?  this.options  :  options.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null?  this.options  :  options.options);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
162	[BUG]  [BUGGY]  return(this.options!=  null?  options.options  :  this.options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  options.options  :  this.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  options.options  :  this.options);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
163	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  flags.closure_pass);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  this.options  :  flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  this.options  :  flags.closure_pass);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
164	[BUG]  [BUGGY]  return  options.closurePass  &&!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  &&!flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  &&!flags.process_closure_primitives;	  return    options.closurePass    ||!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
165	[BUG]  [BUGGY]  return  flags.closurePass  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  ||!flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  ||!flags.process_closure_primitives;	  return    options.closurePass    ||!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
166	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
167	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
168	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
169	[BUG]  [BUGGY]  return(this.errors!=  null)?  null  :  flags.errors;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null)?  null  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null)?  null  :  flags.errors;	  return(this.errors!=    null)?    null    :    this.errors;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
170	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_pass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
171	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_pass,  flags.warning_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_pass,  flags.warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_pass,  flags.warning_level);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
172	[BUG]  [BUGGY]  return  options.closurePass  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  +  2;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  +  2;	  return    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
173	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
174	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass,  options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_pass,  options);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  return  flags.warning_level  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level  &&  flags.process_closure_primitives;	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
176	[BUG]  [BUGGY]  return  flags.warning_level  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level  -  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level  -  1;	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
177	[BUG]  [BUGGY]  return  flags.warning_level  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level  ||  flags.process_closure_primitives;	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
178	[BUG]  [BUGGY]  return  this.warning_level;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.warning_level;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
179	[BUG]  [BUGGY]  return  compilation_level;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  compilation_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  compilation_level;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
180	[BUG]  [BUGGY]  return  flags.closurePass  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  &&  flags.process_closure_primitives;	  return    flags.closurePass;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
181	[BUG]  [BUGGY]  return  flags.closurePass  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  -  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  -  1;	  return    flags.closurePass;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
182	[BUG]  [BUGGY]  return  flags.closurePass  ||  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  ||  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  ||  flags.prototype_closure_primitives;	  return    flags.closurePass;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
183	[BUG]  [BUGGY]  return(this.errors!=  null  ||  this.errors.size()  >  0)?  this.errors  :  options.errors;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  ||  this.errors.size()  >  0)?  this.errors  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  ||  this.errors.size()  >  0)?  this.errors  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
184	[BUG]  [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  0)?  options.errors  :  flags;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  0)?  options.errors  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  &&  this.errors.size()  >  0)?  options.errors  :  flags;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
185	[BUG]  [BUGGY]  return(this.errors  ==  null  &&  this.errors.size()  >  0)?  this.errors  :  options.errors;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors  ==  null  &&  this.errors.size()  >  0)?  this.errors  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors  ==  null  &&  this.errors.size()  >  0)?  this.errors  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
186	[BUG]  [BUGGY]  return(this.errors!=  null  &&  flags.size()  >  0)?  this.errors  :  options.errors;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  &&  flags.size()  >  0)?  this.errors  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  &&  flags.size()  >  0)?  this.errors  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
187	[BUG]  [BUGGY]  return  formattingOption.closurePass;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  formattingOption.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  formattingOption.closurePass;	  return    wLevel.closurePass;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
188	[BUG]  [BUGGY]  return  wLevel.closurePass  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.closurePass  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.closurePass  ||  flags.process_closure_primitives;	  return    wLevel.closurePass;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
189	[BUG]  [BUGGY]  return  wLevel.closurePass  ||  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.closurePass  ||  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.closurePass  ||  flags.prototype_closure_primitives;	  return    wLevel.closurePass;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
190	[BUG]  [BUGGY]  return  warning_level  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  warning_level  &&  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  warning_level  &&  flags.process_closure_primitives;	  return    warning_level;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
191	[BUG]  [BUGGY]  return  warning_level  &&  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  warning_level  &&  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  warning_level  &&  flags.prototype_closure_primitives;	  return    warning_level;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
192	[BUG]  [BUGGY]  return  formattingOption.getOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  formattingOption.getOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  formattingOption.getOptionsForWarningLevel(options);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
193	[BUG]  [BUGGY]  return  flags.warning_level.getOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level.getOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level.getOptionsForWarningLevel(options);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
194	[BUG]  [BUGGY]  return  options.getOptionsForWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.getOptionsForWarningLevel(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.getOptionsForWarningLevel(wLevel);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
195	[BUG]  [BUGGY]  return  wLevel.getOptionsForWarningLevel(options,  warning_level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.getOptionsForWarningLevel(options,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.getOptionsForWarningLevel(options,  warning_level);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
196	[BUG]  [BUGGY]  return(this.options!=  null)?  null  :  flags.closurePass;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  null  :  flags.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  null  :  flags.closurePass;	  return(this.options!=    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
197	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.process_closure_primitives);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
198	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
199	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  wLevel);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
200	[BUG]  [BUGGY]  return  new  CompilerOptions(options.closure_pass,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options.closure_pass,  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options.closure_pass,  flags.process_closure_primitives);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
201	[BUG]  [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options.closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options.closure_primitives,  flags.process_closure_primitives);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
202	[BUG]  [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
203	[BUG]  [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingOption  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingOption  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
204	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.process_closure_primitives)  {  formattingOption.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
205	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  formattingOption.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_level)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_level)  {  formattingOption.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
206	[BUG]  [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  FormattingOption  wLevel  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	FormattingOption  wLevel  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
207	[BUG]  [BUGGY]  return(flags.errors)?  null  :  flags;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  null  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  null  :  flags;	  return(flags.errors)?    this    :    flags;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
208	[BUG]  [BUGGY]  return(flags.warning_level)?  this  :  flags;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.warning_level)?  this  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.warning_level)?  this  :  flags;	  return(flags.errors)?    this    :    flags;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
209	[BUG]  [BUGGY]  return  formattingOption.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  formattingOption.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  formattingOption.setOptionsForWarningLevel(options);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
210	[BUG]  [BUGGY]  return  flags.warning_level.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level.setOptionsForWarningLevel(options);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
211	[BUG]  [BUGGY]  return  options.warning_level.setOptionsForWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.warning_level.setOptionsForWarningLevel(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.warning_level.setOptionsForWarningLevel(wLevel);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
212	[BUG]  [BUGGY]  return  options.setOptionsForWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.setOptionsForWarningLevel(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.setOptionsForWarningLevel(wLevel);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
213	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
214	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
215	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
216	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
217	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  flags;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
219	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
220	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  null;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
221	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  flags;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  flags.process_closure_primitives)?  this.flags  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
222	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(options.closure_primitives);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
223	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  warning_level);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
224	[BUG]  [BUGGY]  return  formattingOption.getOptionsForWarningLevel();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  formattingOption.getOptionsForWarningLevel();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  formattingOption.getOptionsForWarningLevel();	  return    wLevel.getOptionsForWarningLevel();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
225	[BUG]  [BUGGY]  return  flags.warning_level.getOptionsForWarningLevel();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level.getOptionsForWarningLevel();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level.getOptionsForWarningLevel();	  return    wLevel.getOptionsForWarningLevel();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
226	[BUG]  [BUGGY]  return  this.warning_level.getOptionsForWarningLevel();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.warning_level.getOptionsForWarningLevel();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.warning_level.getOptionsForWarningLevel();	  return    wLevel.getOptionsForWarningLevel();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
227	[BUG]  [BUGGY]  return(methods  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(methods  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(methods  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);	  return(methods!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
228	[BUG]  [BUGGY]  return  new  CompilerOptions(compiler_level,  flags.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(compiler_level,  flags.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(compiler_level,  flags.compiler_closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.compiler_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
229	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  null  :  flags.process_closure_primitives;	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
230	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  +  1;	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
231	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  0  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  0  :  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  0  :  flags.process_closure_primitives;	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
232	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives  ||  flags.process_closure_primitives;	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
233	[BUG]  [BUGGY]  return(this.options  ==  null)?  wLevel  :  this.options;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  wLevel  :  this.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  wLevel  :  this.options;	  return(this.options!=    null)?    wLevel    :    this.options;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
234	[BUG]  [BUGGY]  return(this.options!=  null)?  this.options  :  wLevel;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  this.options  :  wLevel;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  this.options  :  wLevel;	  return(this.options!=    null)?    wLevel    :    this.options;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
235	[BUG]  [BUGGY]  return(this.options!=  null)?  wLevel  :  flags.warning_level;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  wLevel  :  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  wLevel  :  flags.warning_level;	  return(this.options!=    null)?    wLevel    :    this.options;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
236	[BUG]  [BUGGY]  return(this.options!=  null)?  flags.warning_level  :  this.options;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  flags.warning_level  :  this.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  flags.warning_level  :  this.options;	  return(this.options!=    null)?    wLevel    :    this.options;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
237	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags,  flags.closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags,  flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags,  flags.closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
238	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.warning_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.warning_level);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
239	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_pass,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_pass,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_pass,  wLevel);	  return    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
240	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.pass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
241	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
242	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(flags.closure_primitives,  options.pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
243	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.pass);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.process_closure_primitives,  options.pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
244	[BUG]  [BUGGY]  return  options.closurePass  &&  options.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  &&  options.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  &&  options.process_closure_primitives;	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
245	[BUG]  [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  options.process_closure_primitives  +  1;	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
246	[BUG]  [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  options.process_closure_primitives,  wLevel);	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
247	[BUG]  [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  ||  wLevel;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  ||  wLevel;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  options.process_closure_primitives  ||  wLevel;	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
248	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  wLevel,  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  wLevel,  level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  wLevel,  level);	  return    new    CompilerOptions(flags.closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
249	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  wLevel,  warning_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  wLevel,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  wLevel,  warning_level);	  return    new    CompilerOptions(flags.closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
250	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  warning_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  warning_level);	  return    new    CompilerOptions(flags.closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
251	[BUG]  [BUGGY]  return  options.closurePass  &&  wLevel.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  &&  wLevel.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  &&  wLevel.setOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
252	[BUG]  [BUGGY]  return  wLevel  ||  options.closurePass.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel  ||  options.closurePass.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel  ||  options.closurePass.setOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
253	[BUG]  [BUGGY]  return  options.closurePass  ||  flags.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  flags.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  flags.setOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
254	[BUG]  [BUGGY]  return  flags.closurePass  ||  wLevel.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.closurePass  ||  wLevel.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.closurePass  ||  wLevel.setOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
255	[BUG]  [BUGGY]  return  compiler_level.getOptionsForWarningLevel();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  compiler_level.getOptionsForWarningLevel();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  compiler_level.getOptionsForWarningLevel();	  return    wLevel.getOptionsForWarningLevel();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
256	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  wLevel);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
257	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
258	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.error_level)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.error_level)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.error_level)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
259	[BUG]  [BUGGY]  return  wLevel.closurePass  ||  wLevel.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.closurePass  ||  wLevel.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.closurePass  ||  wLevel.setOptionsForWarningLevel(options);	  return    wLevel.closurePass;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
260	[BUG]  [BUGGY]  return  wLevel.closurePass  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.closurePass  ||!flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.closurePass  ||!flags.process_closure_primitives;	  return    wLevel.closurePass;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
261	[BUG]  [BUGGY]  return  flags  ||  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  ||  flags.process_closure_primitives  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  ||  flags.process_closure_primitives  +  1;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
262	[BUG]  [BUGGY]  return  options.closurePass  ||  wLevel.getOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  wLevel.getOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  wLevel.getOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
263	[BUG]  [BUGGY]  return(flags.errors)?  flags  :  flags;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  flags  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  flags  :  flags;	  return(flags.errors)?    this    :    flags;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
264	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
265	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
266	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.method_closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
267	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.pass)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.pass)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.pass)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
268	[BUG]  [BUGGY]  AssertionFailedError  e  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  AssertionFailedError  e  =  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	AssertionFailedError  e  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
269	[BUG]  [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
270	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  formattingOption.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  formattingOption.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_primitives)  {  formattingOption.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    formattingOption.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
271	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  options.options;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  options.options;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
272	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  new  CompilerOptions(this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  new  CompilerOptions(this.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  new  CompilerOptions(this.options);	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
273	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  flags.closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  flags.closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  flags.closure_primitives;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
274	[BUG]  [BUGGY]  return  options.closurePass.setOptionsForWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass.setOptionsForWarningLevel(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass.setOptionsForWarningLevel(wLevel);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
275	[BUG]  [BUGGY]  return  this.flags.warning_level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.flags.warning_level;	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
276	[BUG]  [BUGGY]  return  flags.warning_level  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level  +  1;	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
277	[BUG]  [BUGGY]  return(this.errors!=  null)?  null  :  flags;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null)?  null  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null)?  null  :  flags;	  return(this.errors!=    null)?    null    :    this.errors;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
278	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel);	  return    new    CompilerOptions(options);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
279	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass;	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
280	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
281	[BUG]  [BUGGY]  return  logging_level;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  logging_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  logging_level;	  return    warning_level;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
282	[BUG]  [BUGGY]  return  warning_level  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  warning_level  -  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  warning_level  -  1;	  return    warning_level;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
283	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.pass)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.pass)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.pass)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
284	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
285	[BUG]  [BUGGY]  return  compiler_level;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  compiler_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  compiler_level;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
286	[BUG]  [BUGGY]  return  compilation_level.closurePass;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  compilation_level.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  compilation_level.closurePass;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
287	[BUG]  [BUGGY]  return(flags!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
288	[BUG]  [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningOption  warning_level  :  flags.closure_primitives)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningOption    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
289	[BUG]  [BUGGY]  return(options.closurePass!=  null)?  options  :  options.closurePass  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options.closurePass!=  null)?  options  :  options.closurePass  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options.closurePass!=  null)?  options  :  options.closurePass  +  1;	  return(options!=    null)?    options    :    options.closurePass    +    1;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
290	[BUG]  [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
291	[BUG]  [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(!  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
292	[BUG]  [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
293	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if(	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
294	[BUG]  [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(    	non-compiled	[CE]  <identifier>  expected	54	None	replace
295	[BUG]  [BUGGY]  return(this.errors!=  null?  options.errors  :  this.errors);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null?  options.errors  :  this.errors);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null?  options.errors  :  this.errors);	  return(this.errors!=    null?    this.errors    :    options.errors);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
296	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  flags.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  this.options  :  flags.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  this.options  :  flags.options);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
297	[BUG]  [BUGGY]  return(options!=  null?  this.options  :  options.options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null?  this.options  :  options.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null?  this.options  :  options.options);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
298	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_level)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
299	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  options.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  options.closurePass);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
300	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_level,  options.closurePass);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_level,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_level,  options.closurePass);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
301	[BUG]  [BUGGY]  return(this.options!=  null)?  this.options  :  flags.warning_level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  this.options  :  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  this.options  :  flags.warning_level;	  return(this.options!=    null)?    wLevel    :    this.options;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
302	[BUG]  [BUGGY]  return  wLevel  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel  ||!flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel  ||!flags.process_closure_primitives;	  return    options.closurePass    ||!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
303	[BUG]  [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  0)?  flags  :  options.errors;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  0)?  flags  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  &&  this.errors.size()  >  0)?  flags  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
304	[BUG]  [BUGGY]  return(options!=  null)?  options.closure_pass  :  options;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closure_pass  :  options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closure_pass  :  options;	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
305	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  options.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  options.toString();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  options.toString();	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
306	[BUG]  [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  e  :  flags.closure_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
307	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
308	[BUG]  [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closurePass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  options  :  new  CompilerOptions(options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  options  :  new  CompilerOptions(options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
309	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.prototype_closure)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
310	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.pass)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
311	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.error_level)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.error_level)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.error_level)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
312	[BUG]  [BUGGY]  return(flags.errors)?  null  :  flags.errors  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  null  :  flags.errors  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  null  :  flags.errors  +  1;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
313	[BUG]  [BUGGY]  return(flags.errors)?  null  :  flags.errors_level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  null  :  flags.errors_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  null  :  flags.errors_level;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
314	[BUG]  [BUGGY]  return(flags.errors)?  null  :  flags.errors,  warning_level;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  null  :  flags.errors,  warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  null  :  flags.errors,  warning_level;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
315	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  flags.options;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  flags.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  flags.options;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
316	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options  ||  flags.warning_level;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.options  ||  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.options  ||  flags.warning_level;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
317	[BUG]  [BUGGY]  return  this.flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.flags.prototype_closure_primitives;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
318	[BUG]  [BUGGY]  return  flags.prototype_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.prototype_closure_primitives  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.prototype_closure_primitives  +  1;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
319	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  logging_level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  logging_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  logging_level);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
320	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  wLevel);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
321	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  warning_level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  warning_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  options.closurePass,  warning_level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
322	[BUG]  [BUGGY]  return  new  CompilerOptions(options.compiler_closure_primitives,  flags.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options.compiler_closure_primitives,  flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options.compiler_closure_primitives,  flags.closurePass);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
323	[BUG]  [BUGGY]  return(options!=  null)?  null  :  flags.options;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  null  :  flags.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  null  :  flags.options;	  return(options!=    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
324	[BUG]  [BUGGY]  return(wLevel  ==  null)?  null  :  wLevel;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel  ==  null)?  null  :  wLevel;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel  ==  null)?  null  :  wLevel;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
325	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  null  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  null  :  options.closurePass;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
326	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.closurePass;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.closurePass;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
327	[BUG]  [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  logging_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(wLevel,  flags.closure_primitives,  logging_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(wLevel,  flags.closure_primitives,  logging_level);	  return    new    CompilerOptions(wLevel,    flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
328	[BUG]  [BUGGY]  return(flags  ==  null)?  null  :  flags;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags  ==  null)?  null  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags  ==  null)?  null  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
329	[BUG]  [BUGGY]  return(flags!=  null)?  null  :  flags;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  null  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  null  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
330	[BUG]  [BUGGY]  return(this.flags  |  flags.process_closure_primitives)?  this  :  flags;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.flags  |  flags.process_closure_primitives)?  this  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.flags  |  flags.process_closure_primitives)?  this  :  flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
331	[BUG]  [BUGGY]  return(this.flags  |  flags.process_closure_primitives)?  options.process_closure_primitives  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.flags  |  flags.process_closure_primitives)?  options.process_closure_primitives  :  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.flags  |  flags.process_closure_primitives)?  options.process_closure_primitives  :  null;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
332	[BUG]  [BUGGY]  return(flags!=  null)?  null  :  this.flags;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags!=  null)?  null  :  this.flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags!=  null)?  null  :  this.flags;	  return    this.flags;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
333	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options.closure_pass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(options.closure_pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
334	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
335	[BUG]  [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
336	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.errors)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
337	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.warning_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.warning_primitives)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
338	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.warning_primitives)  {  options.closurePass  =  false;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
339	[BUG]  [BUGGY]  return(this.options!=  null)?  0  :  flags;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  0  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  0  :  flags;	  return(this.options!=    null)?    0    :    this.options;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
340	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.process_closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
341	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
342	[BUG]  [BUGGY]  return  options.closurePass  ||  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  flags.prototype_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  flags.prototype_closure_primitives;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
343	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.closure_pass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
344	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_pass);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_pass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options.closure_pass);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
345	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
346	[BUG]  [BUGGY]  return  options.warning_level.getOptionsForWarningLevel(wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.warning_level.getOptionsForWarningLevel(wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.warning_level.getOptionsForWarningLevel(wLevel);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
347	[BUG]  [BUGGY]  return  compiler_level.getOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  compiler_level.getOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  compiler_level.getOptionsForWarningLevel(options);	  return    wLevel.getOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
348	[BUG]  [BUGGY]  return  options.closurePass  ||  options.test_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  options.test_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  options.test_closure_primitives;	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
349	[BUG]  [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  =  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  options.process_closure_primitives  =  false;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  options.process_closure_primitives  =  false;	  return    options.closurePass    ||    options.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
350	[BUG]  [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  new  CompilerOptions(flags.method_closure_primitives,  options);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
351	[BUG]  [BUGGY]  return  options.closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closure_primitives;	  return    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
352	[BUG]  [BUGGY]  return  flags.process_closure_primitives  &&  options.closurePass!=  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.process_closure_primitives  &&  options.closurePass!=  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.process_closure_primitives  &&  options.closurePass!=  null;	  return    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
353	[BUG]  [BUGGY]  return(this.options!=  null?  options  :  this.options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  options  :  this.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  options  :  this.options);	  return(this.options!=    null?    this.options    :    options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
354	[BUG]  [BUGGY]  return(options!=  null?  this.options  :  options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null?  this.options  :  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null?  this.options  :  options);	  return(this.options!=    null?    this.options    :    options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
355	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  flags.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.closure_primitives,  flags.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.closure_primitives,  flags.compiler_closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.compiler_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
356	[BUG]  [BUGGY]  return(this.options!=  null)?  options  :  flags;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  options  :  flags;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  options  :  flags;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
357	[BUG]  [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
358	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.prototype);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.prototype);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.prototype);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
359	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.compiler);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.compiler);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.compiler);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
360	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.missing);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.missing);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives,  options.missing);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.pass);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
361	[BUG]  [BUGGY]  return(flags.errors)?  this  :  flags.warnings;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  this  :  flags.warnings;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  this  :  flags.warnings;	  return(flags.errors)?    this    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
362	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.process_closure_primitives,  options);	  return    new    CompilerOptions(flags.closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
363	[BUG]  [BUGGY]  return(this.options!=  null)?  0  :  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null)?  0  :  flags.closure_pass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null)?  0  :  flags.closure_pass;	  return(this.options!=    null)?    0    :    this.options;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
364	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.closure_primitives,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.closure_primitives,  wLevel);	  return    new    CompilerOptions(flags.closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
365	[BUG]  [BUGGY]  return(methods!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(methods!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(methods!=  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);	  return(methods!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
366	[BUG]  [BUGGY]  return  options.closurePass  ||  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||  flags.process_closure_primitives  +  1;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||  flags.process_closure_primitives  +  1;	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
367	[BUG]  [BUGGY]  return  options.closurePass  ||(flags.process_closure_primitives  &&  flags.process_closure_default_externs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  options.closurePass  ||(flags.process_closure_primitives  &&  flags.process_closure_default_externs);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  options.closurePass  ||(flags.process_closure_primitives  &&  flags.process_closure_default_externs);	  return    options.closurePass    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
368	[BUG]  [BUGGY]  return(this.errors!=  null  &&  flags.errors.size()  >  0)?  this.errors  :  options.errors;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  &&  flags.errors.size()  >  0)?  this.errors  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  &&  flags.errors.size()  >  0)?  this.errors  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
369	[BUG]  [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  1)?  this.errors  :  options.errors;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null  &&  this.errors.size()  >  1)?  this.errors  :  options.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null  &&  this.errors.size()  >  1)?  this.errors  :  options.errors;	  return(this.errors!=    null    &&    this.errors.size()    >    0)?    this.errors    :    options.errors;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
370	[BUG]  [BUGGY]  return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.method_closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
371	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  wLevel.applyToOptions(options);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  wLevel.applyToOptions(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.closure_primitives)  {  wLevel.applyToOptions(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
372	[BUG]  [BUGGY]  AnsertionFailedError  wLevel  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  AnsertionFailedError  wLevel  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	AnsertionFailedError  wLevel  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.applyToOptions(options);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
373	[BUG]  [BUGGY]  return  wLevel  ||  options.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel  ||  options.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel  ||  options.setOptionsForWarningLevel(options);	  return    options.closurePass    ||    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
374	[BUG]  [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.computePass);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.computePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.computePass);	  return(options!=    null)?    0    :    new    CompilerOptions(flags.process_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
375	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  compiler);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  compiler);	  return    new    CompilerOptions(options);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
376	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  flags.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  flags.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  flags.compiler_closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.compiler_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
377	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  wLevel.compiler_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  wLevel.compiler_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  wLevel.compiler_closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.compiler_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
378	[BUG]  [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.method_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.method_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options  :  new  CompilerOptions(options,  flags.method_closure_primitives);	  return(options    ==    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
379	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(options,  flags.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
380	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(options);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.closurePass);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
381	[BUG]  [BUGGY]  return  new  CompilerOptions(compiler_level,  flags.closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(compiler_level,  flags.closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(compiler_level,  flags.closure_primitives);	  return    new    CompilerOptions(wLevel,    flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
382	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.process_closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
383	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  flags);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  flags);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass,  flags);	  return    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
384	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options,  flags);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.options,  flags);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.options,  flags);	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
385	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options,  warning_level;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  null  :  options.options,  warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  null  :  options.options,  warning_level;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
386	[BUG]  [BUGGY]  wLevel.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  wLevel.setOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	wLevel.setOptionsForWarningLevel(options);	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
387	[BUG]  [BUGGY]  for(AssertionFailedError  wLevel  :  flags.forWarningLevels)  {  wLevel.setOptionsForWarningLevel(options);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(AssertionFailedError  wLevel  :  flags.forWarningLevels)  {  wLevel.setOptionsForWarningLevel(options);  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(AssertionFailedError  wLevel  :  flags.forWarningLevels)  {  wLevel.setOptionsForWarningLevel(options);  }	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    wLevel.setOptionsForWarningLevel(options);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
388	[BUG]  [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  if(flags.process_closure_primitives)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if(!    	non-compiled	[CE]  <identifier>  expected	55	None	replace
389	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
390	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.class_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags.class_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags.class_closure_primitives,  options);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
391	[BUG]  [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	if(option!=  null)  {  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
392	[BUG]  [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(Iterator  <  Warning>  it  =  options.process_closure_primitives;  it.hasNext();)  {  CompilerOption  option  =(CompilerOption)it.next();  if  }	  if(flags.process_closure_primitives)    {    for(Iterator    <    Warning>    it    =    options.process_closure_primitives;    it.hasNext();)    {    CompilerOption    option    =(CompilerOption)it.next();    if    	non-compiled	[CE]  <identifier>  expected	56	None	replace
393	[BUG]  [BUGGY]  return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel  ==  null)?  options  :  new  CompilerOptions(flags.process_closure_primitives);	  return(flags!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
394	[BUG]  [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.method_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.method_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options  :  new  CompilerOptions(flags,  flags.method_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.method_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
395	[BUG]  [BUGGY]  return(errors!=  null)?  this  :  flags.errors;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(errors!=  null)?  this  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(errors!=  null)?  this  :  flags.errors;	  return(flags.errors)?    this    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
396	[BUG]  [BUGGY]  return(options  ==  null)?  options.closurePass  :  options.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options.closurePass  :  options.toString();  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options.closurePass  :  options.toString();	  return(options    ==    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
397	[BUG]  [BUGGY]  return(options  ==  null)?  options.closurePass  :  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  options.closurePass  :  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  options.closurePass  :  options);	  return(options    ==    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
398	[BUG]  [BUGGY]  return  wlevel;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wlevel;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wlevel;	  return    warning_level;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
399	[BUG]  [BUGGY]  return(this.options  ==  null?  options.options  :  this.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null?  options.options  :  this.options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null?  options.options  :  this.options);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
400	[BUG]  [BUGGY]  return(this.options!=  null?  this.options  :  options.options)&&(flags.process_closure_primitives  ||  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options!=  null?  this.options  :  options.options)&&(flags.process_closure_primitives  ||  flags.process_closure_primitives);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options!=  null?  this.options  :  options.options)&&(flags.process_closure_primitives  ||  flags.process_closure_primitives);	  return(this.options!=    null?    this.options    :    options.options);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
401	[BUG]  [BUGGY]  return(this.errors!=  null)?  0  :  this.errors;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.errors!=  null)?  0  :  this.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.errors!=  null)?  0  :  this.errors;	  return(this.errors!=    null)?    null    :    this.errors;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
402	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  flags.process_closure_primitives,  options.closurePass);	  return(flags.process_closure_primitives)?    this    :    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
403	[BUG]  [BUGGY]  return  flags.prototype_closure_primitives  |  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.prototype_closure_primitives  |  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.prototype_closure_primitives  |  flags.process_closure_primitives;	  return    flags.prototype_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
404	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.compilerPass);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  options.compilerPass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  options.compilerPass);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
405	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
406	[BUG]  [BUGGY]  return  flags.warning_level  +  wLevel.getOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags.warning_level  +  wLevel.getOptionsForWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags.warning_level  +  wLevel.getOptionsForWarningLevel(options);	  return    flags.warning_level;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
407	[BUG]  [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	OptionFailedError  e  =  flags.process_closure_primitives;  options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
408	[BUG]  [BUGGY]  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  options.closurePass  =  true;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	options.closurePass  =  true;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    e    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
409	[BUG]  [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options  ==  null)?  0  :  new  CompilerOptions(flags.process_closure_primitives,  options.closurePass);	  return(options!=    null)?    options    :    new    CompilerOptions(flags.process_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
410	[BUG]  [BUGGY]  return(wLevel  ==  null)?  null  :  options.options;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(wLevel  ==  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(wLevel  ==  null)?  null  :  options.options;	  return(options!=    null)?    null    :    options.options;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
411	[BUG]  [BUGGY]  return  flags  ||  flags.process_closure_primitives,  options.closurePass;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  flags  ||  flags.process_closure_primitives,  options.closurePass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  flags  ||  flags.process_closure_primitives,  options.closurePass;	  return    flags    ||    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
412	[BUG]  [BUGGY]  return  wLevel.setOptionsFromWarningLevel(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  wLevel.setOptionsFromWarningLevel(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  wLevel.setOptionsFromWarningLevel(options);	  return    wLevel.setOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
413	[BUG]  [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags,  flags.compiler_closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
414	[BUG]  [BUGGY]  return  new  CompilerOptions(options,  flags.compiler_closure_primitives,  options.closurePass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(options,  flags.compiler_closure_primitives,  options.closurePass);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(options,  flags.compiler_closure_primitives,  options.closurePass);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    options.closurePass);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
415	[BUG]  [BUGGY]  return  this.compilation_level;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.compilation_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.compilation_level;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
416	[BUG]  [BUGGY]  return  this.compiler_level;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  this.compiler_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  this.compiler_level;	  return    level;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
417	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  logging_level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  logging_level);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.compiler_closure_primitives,  wLevel,  logging_level);	  return    new    CompilerOptions(flags.compiler_closure_primitives,    wLevel);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
418	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(this.options  ==  null)?  null  :  flags.closure_pass;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(this.options  ==  null)?  null  :  flags.closure_pass;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
419	[BUG]  [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return  new  CompilerOptions(flags.process_closure_primitives,  wLevel);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return  new  CompilerOptions(flags.process_closure_primitives,  wLevel);	  return    new    CompilerOptions(wLevel,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
420	[BUG]  [BUGGY]  return(flags.process_closure_primitives  ||  options.process_closure_primitives)?  this  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives  ||  options.process_closure_primitives)?  this  :  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives  ||  options.process_closure_primitives)?  this  :  null;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
421	[BUG]  [BUGGY]  return(flags.process_closure_primitives)?  this  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.process_closure_primitives)?  this  :  null;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.process_closure_primitives)?  this  :  null;	  return    this;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
422	[BUG]  [BUGGY]  OptionFailedError  wLevel  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  OptionFailedError  wLevel  =  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	OptionFailedError  wLevel  =  flags.process_closure_primitives;	  if(flags.process_closure_primitives)    {    for(AssertionFailedError    wLevel    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
423	[BUG]  [BUGGY]  warning_level  =  flags.warning_level;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  warning_level  =  flags.warning_level;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	warning_level  =  flags.warning_level;	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
424	[BUG]  [BUGGY]  for(WarningLevel  warning_level  :  flags.formatting)  {  options.closurePass  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  for(WarningLevel  warning_level  :  flags.formatting)  {  options.closurePass  =  true;  }  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	for(WarningLevel  warning_level  :  flags.formatting)  {  options.closurePass  =  true;  }	  if(flags.process_closure_primitives)    {    for(WarningLevel    warning_level    :    flags.process_closure_primitives)    {    options.closurePass    =    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
425	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  options.initOptionsFromFlags(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  options.initOptionsFromFlags(options);  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  options.initOptionsFromFlags(options);	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
426	[BUG]  [BUGGY]  return(options!=  null)?  options.closurePass  :  options,  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(options!=  null)?  options.closurePass  :  options,  flags.process_closure_primitives;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(options!=  null)?  options.closurePass  :  options,  flags.process_closure_primitives;	  return(options!=    null)?    options.closurePass    :    options;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
427	[BUG]  [BUGGY]  return(flags.errors)?  flags.errors  :  flags.errors;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  flags.errors  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  flags.errors  :  flags.errors;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
428	[BUG]  [BUGGY]  return(flags.errors)?  wLevel  :  flags.errors;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {  options.closurePass  =  true;  }  initOptionsFromFlags(options);      [BUGGY]  return(flags.errors)?  wLevel  :  flags.errors;  [BUGGY]      }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	return(flags.errors)?  wLevel  :  flags.errors;	  return(flags.errors)?    null    :    flags.errors;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
