bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)/  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)/  1;  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND)/  1;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  2;  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND)+  2;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  3;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  3;  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND)+  3;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  2;  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND)-  2;	  int    seconds    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  time);	      int    millisecs    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND  +  1);	      int    millisecs    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND)-  1;	      int    millisecs    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  time);	      int    minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE  +  1);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  minutes  =  val.get(Calendar.MINUTE  +  1);	      int    minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  field);	      int    minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.DATE);  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.DATE);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  +  2);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  +  2);  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND  +  2);	  int    seconds    =    val.get(Calendar.SECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND  +  1);	      int    seconds    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND,  time);	      int    seconds    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.HOUR_OF_DAY);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.HOUR_OF_DAY);	      int    seconds    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND  -  1);	      int    seconds    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND  -  1);	      int    millisecs    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  1;  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  minutes  =  val.get(Calendar.MINUTE)-  1;	      int    minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  3;  [BUGGY]    if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  seconds  =  val.get(Calendar.SECOND)-  3;	  int    seconds    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)+  1;  [BUGGY]    int  seconds  =  val.get(Calendar.SECOND);  if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	int  minutes  =  val.get(Calendar.MINUTE)+  1;	      int    minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
