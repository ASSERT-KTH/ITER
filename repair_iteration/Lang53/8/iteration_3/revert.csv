projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>280000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==280000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=280000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>310000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=280000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DAY_OF_MONTH);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE),round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.YEAR);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==1000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==310000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.MONTH);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE),round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,0,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>10000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>1000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>100000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>2800000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.getTime();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MILLISECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.getCalendarFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==10000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=1000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>300000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.setTime(newDate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,this.field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,round,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==300000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>30000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==1000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=1000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.setTime(newDate(field,round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.setTime(newDate(field),round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.MONTH,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.MONTH)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.MONTH)-1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.MONTH,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DAY_OF_MONTH,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DAY_OF_MONTH)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DAY_OF_MONTH+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,field;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round-1+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round-1-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.HOUR_OF_DAY,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.HOUR_OF_DAY,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.getCalendarFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.getValues();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>1000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==100000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.MILLISECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>3100000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Calendarvalue=val.get(Calendar.SECOND,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(val,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,round,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(this.field,this.field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE),field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DAY_OF_MONTH,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MILLISECOND,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MILLISECOND+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>10000000||round==Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,round,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0L,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Calendardate=val.get(Calendar.DATE,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.MONTH)==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH)-1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MONTH+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,0,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,0,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.YEAR,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(val,Calendar.YEAR,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.YEAR,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>0||round==Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,FieldUtils.safeNegate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,FieldUtils.safeMultiply(field,round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)+2;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)+3;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)/1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,round-1,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE),field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round-1-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round-1+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field-1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.getTime()+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.getMillis();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.getDate();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)+4;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR+3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)==2800000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=2800000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,4);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0L,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.getCalendarFields(field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND)+4;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)+1+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,newDate(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,null);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=100000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.setTime(newDate(field),round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=300000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=300000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=1000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND)-1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR)+4;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND+1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MINUTE,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,FieldUtils.safeMultiply(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>=10000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)!=10000000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.MONTH);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0,this.field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,FieldUtils.safeNegate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,FieldUtils.safeMultiply(field,round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,FieldUtils.safeMultiply(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.getValue();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.MILLISECOND)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(0,round-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR,FieldUtils.safeNegate(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR,this.field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(field,Calendar.DECEMBER);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round-1,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.set(Calendar.MILLISECOND,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>100000||round==Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>100000||round>Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,match);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)-1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE,FieldUtils.safeNegate(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,FieldUtils.safeNegate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,FieldUtils.safeMultiply(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.YEAR,FieldUtils.safeAdd(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>100){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,FieldUtils.safeNegate(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,FieldUtils.safeAdd(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round-1,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.YEAR)-1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,this.field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.SECOND,match);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>1000000||round==Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>1000000||round>Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621int[][]fields=val.get(Calendar.SECOND,round)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE,FieldUtils.safeNegate(round));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datevalue=val.get(Calendar.DATE)-1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.YEAR,field,round-1,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,this.field,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MILLISECOND,this.field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,round-1,round+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621val.set(Calendar.MONTH,field,1,round);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621if(val.get(Calendar.YEAR)>2800000000||round==Calendar.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java621Datedate=val.get(Calendar.DATE)-1;
