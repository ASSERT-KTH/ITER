bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(fields[i][0]));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(fields[i][0]));  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(fields[i][0]));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(val.getString()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(val.getString()));  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(val.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
4	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.MONTH)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
5	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.MONTH)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
6	[BUG]  [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");	  if(fields[i][0]    ==    Calendar.MONTH)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
7	[BUG]  [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  val.add(fields[i][0],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0]  ==  Calendar.MONTH)  {  val.add(fields[i][0],  1);	  if(fields[i][0]    ==    Calendar.MONTH)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
8	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  field,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  field,  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  field,  1);	  val.add(Calendar.DATE,    15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
9	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  fields);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  fields);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  fields);	  val.add(Calendar.DATE,    15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalStateException( " ".getMessage());	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
11	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  val);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalStateException( " ",  val);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
12	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  field);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalStateException( " ",  field);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
13	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
14	[BUG]  [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
15	[BUG]  [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][1],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][1],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][1]  ==  Calendar.DATE)  {  val.add(fields[i][1],  1);	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
16	[BUG]  [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ".getMessage());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ".getMessage());  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalFieldValueException( " ".getMessage());	  Throwables.throw    new    IllegalFieldValueException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
17	[BUG]  [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ",  val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ",  val);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalFieldValueException( " ",  val);	  Throwables.throw    new    IllegalFieldValueException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
18	[BUG]  [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ",  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " ",  field);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalFieldValueException( " ",  field);	  Throwables.throw    new    IllegalFieldValueException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
19	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  -15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.MONTH,  -15);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.MONTH,  -15);	  val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
20	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.MONTH,  15);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.MONTH,  15);	  val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
21	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.MONTH,  2);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.MONTH,  2);	  val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
22	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fieldSet);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fieldSet);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fieldSet);	  val.add(Calendar.DATE,    0,    fields);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
23	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i]);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fields[i]);	  val.add(Calendar.DATE,    0,    fields);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
24	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  1);	  val.add(Calendar.DATE,    15,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
25	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  -15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  -15);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  -15);	  val.add(Calendar.DATE,    15,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
26	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
27	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
28	[BUG]  [BUGGY]  while(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
29	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  field  +  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  field  +  1);	  val.add(Calendar.DATE,    0,    field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
30	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i  +  1]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i  +  1]  +  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fields[i  +  1]  +  1);	  val.add(Calendar.DATE,    0,    field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
31	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
32	[BUG]  [BUGGY]  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][0],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][0],  1);	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
33	[BUG]  [BUGGY]  if(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
34	[BUG]  [BUGGY]  while(fields[i][0].getTime()  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0].getTime()  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0].getTime()  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);	  if(fields[i][0].getTime()    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
35	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
36	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
37	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
38	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
39	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i],  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fields[i],  1);	  val.add(Calendar.DATE,    0,    field,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
40	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fields,  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fields,  1);	  val.add(Calendar.DATE,    0,    field,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
41	[BUG]  [BUGGY]  while(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
42	[BUG]  [BUGGY]  if(fields[i][0].getTime()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0].getTime()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0].getTime()  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
43	[BUG]  [BUGGY]  while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");	  if(fields[i][0].getTime()!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
44	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
45	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage());  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage());  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
46	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
47	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
48	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage());  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage());  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
49	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ").getMessage();  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
50	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
51	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.MONTH)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
52	[BUG]  [BUGGY]  val.add(fields[i][1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][1]);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][1]);	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
53	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
54	[BUG]  [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
55	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ").getMessage();  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
56	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
57	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  field,  -15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  field,  -15);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  field,  -15);	  val.add(Calendar.DATE,    0,    field,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
58	[BUG]  [BUGGY]  if(fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
59	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
60	[BUG]  [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
61	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalArgumentException( " ").getMessage();  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
62	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    else    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
63	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    else    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
64	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][1]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
65	[BUG]  [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
66	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
67	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][1]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
68	[BUG]  [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(fields[i][1]  {  Calendar.DATE)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
69	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(field));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(field));  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(field));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
70	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  field  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  field  -  1);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  field  -  1);	  val.add(Calendar.DATE,    0,    field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
71	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  fields[i  +  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  0,  fields[i  +  1]);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  0,  fields[i  +  1]);	  val.add(Calendar.DATE,    0,    field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
72	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }	  val.add(Calendar.DATE,    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
73	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  val.add(Calendar.DATE,  1);  val.add(Calendar.MONTH,  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  val.add(Calendar.DATE,    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
74	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(field));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(field));  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(field));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
76	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  val);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  val);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
77	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
78	[BUG]  [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " "  +  val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  Throwables.throw  new  IllegalFieldValueException( " "  +  val);  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	Throwables.throw  new  IllegalFieldValueException( " "  +  val);	  Throwables.throw    new    IllegalFieldValueException(   "   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
79	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	fields[i][0]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
80	[BUG]  [BUGGY]  if(fields[i][1].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
81	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  3);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  3);	  val.add(Calendar.DATE,    15,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
82	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ").getMessage();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ").getMessage();  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  throw  new  RuntimeException( " ").getMessage();  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
83	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
84	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    else    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
85	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  else  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    else    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
86	[BUG]  [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
87	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  IllegalArgumentException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
88	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
89	[BUG]  [BUGGY]  if(fields[i][0].getTime()  ==  null)throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0].getTime()  ==  null)throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0].getTime()  ==  null)throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
90	[BUG]  [BUGGY]  while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0].getTime()!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
91	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
92	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.HOUR_OF_DAY)  {  throw  new  RuntimeException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.HOUR_OF_DAY)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][1]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.HOUR_OF_DAY)  {  throw  new  RuntimeException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
93	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.YEAR)  {  throw  new  UnsupportedOperationException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
94	[BUG]  [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][1]  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][1]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
95	[BUG]  [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ");  }	  if(fields[i][0]    ==    Calendar.MONTH)    {    throw    new    IllegalFieldValueException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
96	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ".getMessage());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ".getMessage());  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MONTH)  {  throw  new  IllegalFieldValueException( " ".getMessage());  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalFieldValueException(   "   ".getMessage());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
97	[BUG]  [BUGGY]  while(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  while(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	while(fields[i][0].getTime()!=  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
98	[BUG]  [BUGGY]  if(fields[i][0].getTime()  ==  Calendar.DATE  ||  fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0].getTime()  ==  Calendar.DATE  ||  fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0].getTime()  ==  Calendar.DATE  ||  fields[i][1].getTime()  ==  Calendar.DATE)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0].getTime()    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
99	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.MILLISECOND)  {  throw  new  IllegalStateException( " ");  }	  if(fields[i][0]    ==    Calendar.DATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
100	[BUG]  [BUGGY]  val.add(Calendar.DATE,  15,  field,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {    val.add(fields[i][0],  1);  }  }      [BUGGY]  val.add(Calendar.DATE,  15,  field,  round);  [BUGGY]      return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;  switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	val.add(Calendar.DATE,  15,  field,  round);	  val.add(Calendar.DATE,    15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
