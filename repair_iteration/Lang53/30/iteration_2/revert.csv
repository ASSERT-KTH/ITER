projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,-15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692return;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692thrownewIllegalArgumentException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692thrownewIllegalStateException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692thrownewUnsupportedOperationException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692thrownewRuntimeException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692thrownewIllegalFieldValueException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,-15);val.add(Calendar.MONTH,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15);val.add(Calendar.MONTH,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,1);val.add(Calendar.MONTH,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,3);val.add(Calendar.MONTH,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalFieldValueException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalStateException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalArgumentException("".getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()!=null){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("".getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.MONTH){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");}else{val.add(Calendar.DATE,1);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewRuntimeException("".getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.MONTH,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("".getMessage());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("".equals(fields[i][0]));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("".equals(val.getString()));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.MONTH){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0]==Calendar.MONTH){thrownewIllegalFieldValueException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0]==Calendar.MONTH){val.add(fields[i][0],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,fields);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalStateException("".getMessage());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalStateException("",val);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalStateException("",field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][1]==Calendar.DATE){val.add(fields[i][0],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][1]==Calendar.DATE){val.add(fields[i][1],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalFieldValueException("".getMessage());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalFieldValueException("",val);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalFieldValueException("",field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.MONTH,-15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.MONTH,15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.MONTH,2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fieldSet);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields[i]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,-15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.YEAR){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0]==Calendar.DATE){val.add(fields[i][0],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields[i+1]+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][0],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()!=Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0].getTime()==Calendar.DATE){val.add(fields[i][0],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][0]==Calendar.MONTH){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.YEAR){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields[i],1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()==null){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0].getTime()!=null){thrownewIllegalStateException("");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalFieldValueException("").getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("").getMessage();}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalArgumentException("").getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewIllegalArgumentException("").getMessage();}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.MONTH){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][1]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][1]==Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][1]{Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalFieldValueException("").getMessage();}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,field,-15);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1].getTime()==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][1]==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][1]{Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalArgumentException("").getMessage();}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");}else{val.add(Calendar.DATE,1);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewIllegalFieldValueException("");}else{val.add(Calendar.DATE,
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][1]==Calendar.DATE){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][1]{Calendar.DATE){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][1]==Calendar.DATE){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(fields[i][1]{Calendar.DATE){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalStateException("".equals(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,0,fields[i+1]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){val.add(Calendar.DATE,1);val.add(Calendar.MONTH,1);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){val.add(Calendar.DATE,1);val.add(Calendar.MONTH,1);}else{thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("".equals(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalArgumentException("",val);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.YEAR){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692Throwables.thrownewIllegalFieldValueException(""+val);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692fields[i][0]==Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1].getTime()!=null){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE){thrownewRuntimeException("").getMessage();}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MILLISECOND){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalFieldValueException("");}else{val.add(Calendar.DATE,1);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.MONTH){thrownewIllegalFieldValueException("");}else{val.add(Calendar.DATE,1);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][1]==Calendar.DATE){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.YEAR){thrownewIllegalArgumentException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MILLISECOND){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()==null)thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0].getTime()!=null){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][1]==Calendar.DATE||fields[i][1]==Calendar.HOUR_OF_DAY){thrownewRuntimeException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.YEAR){thrownewUnsupportedOperationException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][1]==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0]==Calendar.MONTH){thrownewIllegalFieldValueException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MONTH){thrownewIllegalFieldValueException("".getMessage());}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692while(fields[i][0].getTime()!=Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0].getTime()==Calendar.DATE||fields[i][1].getTime()==Calendar.DATE){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692if(fields[i][0]==Calendar.DATE||fields[i][1]==Calendar.MILLISECOND){thrownewIllegalStateException("");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java692val.add(Calendar.DATE,15,field,round);
