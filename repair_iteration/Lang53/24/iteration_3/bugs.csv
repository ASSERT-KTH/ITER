bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  3);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  minutes  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  minutes  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  minutes  +  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  minutes);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  minutes);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  minutes);	  val.set(Calendar.MILLISECOND,    min);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
5	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  min  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  min  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  min  +  1);	  val.set(Calendar.MILLISECOND,    min);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
6	[BUG]  [BUGGY]  date.setTime(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  date.setTime(field);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	date.setTime(field);	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(date);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
7	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  min);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  min);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  min);	  Date    date    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
8	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.SECOND,  minutes);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.SECOND,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.SECOND,  minutes);	  Date    date    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.SECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.SECOND)+  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.SECOND)+  1;	  Date    date    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.SECOND  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.SECOND  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.SECOND  +  1);	  Date    date    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  min  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  min  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  min  +  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    min);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE)+  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE)+  1;	  int    field    =    val.get(Calendar.MINUTE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  time  +  1);	  int    field    =    val.get(Calendar.MINUTE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  0,  minutes);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  0,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  0,  minutes);	  Date    date    =    val.get(Calendar.DATE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.minutes);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  this.minutes);	  Date    date    =    val.get(Calendar.DATE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  time  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY,  time  +  1);	  Date    date    =    val.get(Calendar.HOUR_OF_DAY,    time);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  min);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  min);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY,  min);	  Date    date    =    val.get(Calendar.HOUR_OF_DAY,    time);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY,  1);	  Date    date    =    val.get(Calendar.HOUR_OF_DAY,    time);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  year  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  year  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  year  +  1);	  Date    date    =    val.get(Calendar.DATE,    year);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
20	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  year  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  year  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  year  -  1);	  Date    date    =    val.get(Calendar.DATE,    year);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
21	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  3);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  3);	  Date    date    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1L);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1L);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  1L);	  Date    date    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  2);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  2);	  Date    date    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  this.millisecs  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  this.millisecs  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  this.millisecs  +  1);	  val.set(Calendar.MILLISECOND,    this.millisecs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  this.millisecs  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  this.millisecs  -  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  this.millisecs  -  1);	  val.set(Calendar.MILLISECOND,    this.millisecs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
26	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  field  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  field  +  1);	  val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)/  1;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
28	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1L;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1L;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
29	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  minutes);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  minutes);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
30	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  min);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  min);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  min);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
31	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  round  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  round  +  1);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  time  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  time  /  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  time  /  1);	  val.add(Calendar.MILLISECOND,    time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  field);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  field);	  Date    date    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
34	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  min);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  min);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  min);	  Date    date    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  field  +  1);	  Date    date    =    val.get(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
36	[BUG]  [BUGGY]  int  field  =  date.get(Calendar.MINUTE  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  date.get(Calendar.MINUTE  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  date.get(Calendar.MINUTE  -  1);	  int    field    =    date.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  minutes);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  minutes);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.HOUR_OF_DAY,  minutes);	  val.set(Calendar.HOUR_OF_DAY,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
38	[BUG]  [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  time);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.HOUR_OF_DAY,  time);	  val.set(Calendar.HOUR_OF_DAY,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
39	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  minutes  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  minutes  -  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  minutes  -  1);	  val.add(Calendar.MILLISECOND,    time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  time  -  1);	  int    field    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  *  60000L);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  time  *  60000L);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  time  *  60000L);	  int    field    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  minutes);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  minutes);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  date.get(Calendar.MILLISECOND);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  date.setTime(time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  date.setTime(time);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	date.setTime(time);	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(time);    }    else    {    date.setTime(time);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  time  /  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  time  /  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  time  /  1);	  val.set(Calendar.MILLISECOND,    time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  minutes  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  minutes  -  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  minutes  -  1);	  val.set(Calendar.MILLISECOND,    time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  Date  date  =  val.getTimeInMillis();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.getTimeInMillis();  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.getTimeInMillis();	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  Date  date  =  val.getTimeInMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.getTimeInMillis()  +  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.getTimeInMillis()  +  1;	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  time  +  1);	  Date    date    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  time  -  1);	  Date    date    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1L;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1L;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1L;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  3;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  3;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  3);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  0L);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  0L);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  0L);	  val.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  1);	  val.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  1);	  Date    date    =    val.get(Calendar.MINUTE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
60	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  minutes  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  minutes  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  minutes  +  1);	  Date    date    =    val.get(Calendar.MINUTE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
61	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  minutes  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  minutes  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY,  minutes  +  1);	  Date    date    =    val.get(Calendar.HOUR_OF_DAY    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND)+  1;	  Date    date    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  time  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  time  +  1);	  Date    date    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  time  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  time  -  1);	  Date    date    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE)-  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE)-  1;	  int    field    =    val.get(Calendar.MINUTE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  this.millisecs  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  this.millisecs  -  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  this.millisecs  -  1);	  val.add(Calendar.MILLISECOND,    this.millisecs);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  this.millisecs  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  this.millisecs  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  this.millisecs  +  1);	  val.add(Calendar.MILLISECOND,    this.millisecs);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
68	[BUG]  [BUGGY]  date.setTime(date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  date.setTime(date);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	date.setTime(date);	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(date);    }    else    {    date.setTime(time);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
69	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  0,  minutes);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY,  0,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY,  0,  minutes);	  Date    date    =    val.get(Calendar.HOUR_OF_DAY,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.SECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.SECOND)+  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.SECOND)+  1;	  int    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.SECOND  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.SECOND  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.SECOND  +  1);	  int    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.SECOND,  minutes);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.SECOND,  minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.SECOND,  minutes);	  int    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  4);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  4);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  4);	  Date    date    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  field  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  field  -  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  field  -  1);	  val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  time  *  1000);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  time  *  1000);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  time  *  1000);	  val.set(Calendar.MILLISECOND,    time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  -  1);	  Date    date    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  Date  val  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  val  =  date.getTime();  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  val  =  date.getTime();	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(date);    }    else    {    date.setTime(time);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
78	[BUG]  [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  field  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.HOUR_OF_DAY,  field  +  1);	  val.set(Calendar.HOUR_OF_DAY,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
79	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.year);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.year);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  this.year);	  Date    date    =    val.get(Calendar.DATE,    year);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
80	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND  -  1);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND  +  1);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  1;	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.SECOND)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.SECOND)-  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.SECOND)-  1;	  int    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.SECOND,  time);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.SECOND,  time);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.SECOND,  time);	  Date    date    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  time  *  1000);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  time  *  1000);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  time  *  1000);	  val.add(Calendar.MILLISECOND,    time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
87	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;	  Date    date    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  round  +  1);	  Date    date    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
89	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  1);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
90	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  date);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  date);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
91	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE  -  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE  -  2);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE  -  2);	  int    field    =    val.get(Calendar.MINUTE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
92	[BUG]  [BUGGY]  boolean  field  =  val.get(Calendar.MINUTE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  boolean  field  =  val.get(Calendar.MINUTE);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	boolean  field  =  val.get(Calendar.MINUTE);	  int    field    =    date.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.getTime(Calendar.MILLISECOND);	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.getTime(Calendar.DATE);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.getTime(Calendar.DATE);	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  2);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  this.millisecs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  this.millisecs);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  this.millisecs);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
97	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  this.minutes);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  this.minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  this.minutes);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
98	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  period);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  period);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  period);	  Date    date    =    val.get(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  round  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MINUTE,  round  -  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MINUTE,  round  -  1);	  int    field    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
100	[BUG]  [BUGGY]  val.setTime(time);  }  else  {  date.setTime(time);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.setTime(time);  }  else  {  date.setTime(time);  }  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.setTime(time);  }  else  {  date.setTime(time);  }	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(time);    }    else    {    date.setTime(time);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
101	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  round);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  1);	  int    field    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  date);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  date);	  val.add(Calendar.MILLISECOND,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
104	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  time  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  time  *  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  time  *  1);	  val.add(Calendar.MILLISECOND,    time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
105	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.minutes);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.minutes);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  this.minutes);	  Date    date    =    val.get(Calendar.MINUTE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
106	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.millisecs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.millisecs);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  this.millisecs);	  Date    date    =    val.get(Calendar.MINUTE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.day);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.day);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  this.day);	  Date    date    =    val.get(Calendar.DATE,    year);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
108	[BUG]  [BUGGY]  char  field  =  date.get(Calendar.MINUTE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  char  field  =  date.get(Calendar.MINUTE);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	char  field  =  date.get(Calendar.MINUTE);	  int    field    =    date.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.field);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  this.field);	  Date    date    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  min);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.HOUR_OF_DAY,  min);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.HOUR_OF_DAY,  min);	  val.set(Calendar.HOUR_OF_DAY,    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.MINUTE,  this.field);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.MINUTE,  this.field);	  Date    date    =    val.get(Calendar.MINUTE,    round);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
112	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  0L  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.add(Calendar.MILLISECOND,  0L  +  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.add(Calendar.MILLISECOND,  0L  +  1);	  val.add(Calendar.MILLISECOND,    0L);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
113	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  this.field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  this.field);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  this.field);	  val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
114	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  round);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  round);	  val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
115	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  time  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  time  *  1);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  time  *  1);	  val.set(Calendar.MILLISECOND,    time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  val.setTime(time,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.setTime(time,  field);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.setTime(time,  field);	  if(field    ==    DateUtils.SEMI_MONTH)    {    val.setTime(time);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
117	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.millisecs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  this.millisecs);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  this.millisecs);	  Date    date    =    val.get(Calendar.DATE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  period);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  period);  [BUGGY]      val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	Date  date  =  val.get(Calendar.DATE,  period);	  Date    date    =    val.get(Calendar.DATE,    minutes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  date);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  }  if  (date.getTime()  !=  time)  {  date.setTime(time);      [BUGGY]  val.set(Calendar.MILLISECOND,  date);  [BUGGY]      }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	val.set(Calendar.MILLISECOND,  date);	  val.set(Calendar.MILLISECOND,    min);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
