bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.DATE,  -15);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.DATE,  -15);	      val.add(Calendar.DATE,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  date  =  val.get(Calendar.DATE,  1);	      Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  date  =  val.get(Calendar.DATE,  field);	      Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  date  =  val.get(Calendar.DATE,  round);	      Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  date  =  val.get(Calendar.DATE,  3);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  date  =  val.get(Calendar.DATE,  3);	      Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.MILLISECOND,  3);	      val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.MILLISECOND,  2);	      val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.MILLISECOND,  0);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.MILLISECOND,  0);	      val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  -  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields[i].length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields[i].length  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields[i].length  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE,  1);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  16);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE,  16);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE,  16);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  15);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE,  15);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE,  15);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  12);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE,  12);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE,  12);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(fields!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.SECOND,  round);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.SECOND,  round);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.SECOND,  round);	      Date    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.SECOND)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.SECOND)+  1;  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.SECOND)+  1;	      Date    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.SECOND,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.SECOND,  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.SECOND,  1);	      Date    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE,  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE,  1);	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE,  round);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE,  round);	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE,  3);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE,  3);	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE,  15);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE,  15);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE,  15);	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(fields!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  val.add(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.DATE,  2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.DATE,  2);	      val.add(Calendar.DATE,    3);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.MILLISECOND);  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.MILLISECOND);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	val.add(Calendar.MILLISECOND,  -15);	      val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE)+  1;	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.SECOND  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.SECOND  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.SECOND  +  1);	      Date    field    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE)+  1;  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE)+  1;	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  date  =  val.get(Calendar.DATE,  time);	      Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  field.length  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  field.length  -  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  field.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.DATE,  round);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  if(fields!=  null  &&  roundUp)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(fields!=  null  &&  roundUp)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(fields!=  null  &&  roundUp)  {  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields.length;    j++)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields[j].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[j].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	if(field!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  }	      if(fields!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.SECOND);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  int  field  =  val.get(Calendar.SECOND);  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	int  field  =  val.get(Calendar.SECOND);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  field.length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  for(int  i  =  0;  i  <  field.length  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	for(int  i  =  0;  i  <  field.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  Date  field  =  val.get(Calendar.DATE,  time);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;    [BUGGY]  Date  field  =  val.get(Calendar.DATE,  time);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	Date  field  =  val.get(Calendar.DATE,  time);	      Date    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
