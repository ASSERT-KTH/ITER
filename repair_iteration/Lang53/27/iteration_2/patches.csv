bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i,  fields[i][i]);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
3	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
4	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  10);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  10);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
6	[BUG]  [BUGGY]  ||  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
7	[BUG]  [BUGGY]  &&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
8	[BUG]  [BUGGY]  ||(fields[i].get(i)  ==  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||(fields[i].get(i)  ==  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||(fields[i].get(i)  ==  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
9	[BUG]  [BUGGY]  ||  val.get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||  val.get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||  val.get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
10	[BUG]  [BUGGY]  ((  Calendar)fields[i].get(i)).add(Calendar.DATE,  15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i].get(i)).add(Calendar.DATE,  15);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i].get(i)).add(Calendar.DATE,  15);	  if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
11	[BUG]  [BUGGY]  ((  Calendar)fields[i].get(i)).add(Calendar.DATE,  -15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i].get(i)).add(Calendar.DATE,  -15);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i].get(i)).add(Calendar.DATE,  -15);	  if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
13	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i,  fields[i]);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
15	[BUG]  [BUGGY]  int  round  =  val.get(i,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  field  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i,  field  +  1);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
16	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][i]  -  1);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
17	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][i]  +  1);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
18	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][0]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][0]);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
19	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  &  0xFFFF);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i]  &  0xFFFF);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][i]  &  0xFFFF);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
22	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i)+  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i].get(i)+  1);	  Date    field    =    val.get(i).getField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
23	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i  +  1));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i].get(i  +  1));	  Date    field    =    val.get(i).getField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
24	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i),  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i].get(i),  round);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i].get(i),  round);	  Date    field    =    val.get(i).getField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
25	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
26	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  }	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
27	[BUG]  [BUGGY]  Date  round  =(Date)fields[i].getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)fields[i].getTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)fields[i].getTime();	  Date    round    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
28	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i).getTime()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i).getTime()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i).getTime()  -  1;	  Date    round    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
29	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i).getTimeZone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i).getTimeZone();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i).getTimeZone();	  Date    round    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
30	[BUG]  [BUGGY]  Date  field  =  val.get(i)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i)/  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i)/  1;	  Date    field    =    val.get(i)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
31	[BUG]  [BUGGY]  Date  field  =  val.get(i)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i)+  2;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i)+  2;	  Date    field    =    val.get(i)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
32	[BUG]  [BUGGY]  Date  field  =  val.get(i)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i)-  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i)-  1;	  Date    field    =    val.get(i)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
33	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)+  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i].get(i)+  1);	  int    round    =(int)Math.floor(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
34	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)-  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i].get(i)-  1);	  int    round    =(int)Math.floor(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
35	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i].getTime()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i].getTime()  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i,  fields[i].getTime()  -  1);	  Date    field    =    val.get(i,    fields[i].getTime());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
36	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i].getTime()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i].getTime()  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i,  fields[i].getTime()  +  1);	  Date    field    =    val.get(i,    fields[i].getTime());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
37	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i].getMillis());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i].getMillis());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i,  fields[i].getMillis());	  Date    field    =    val.get(i,    fields[i].getTime());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
38	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getTime()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getTime()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getTime()  -  1;	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
39	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getCalendar();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getCalendar();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getCalendar();	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
40	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getTime()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getTime()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getTime()  +  1;	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
41	[BUG]  [BUGGY]  ||  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >>    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
42	[BUG]  [BUGGY]  &&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >>    	non-compiled	[CE]  <identifier>  expected	53	None	replace
43	[BUG]  [BUGGY]  ||(fields[i].get(i)!=  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||(fields[i].get(i)!=  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||(fields[i].get(i)!=  null  &&  roundUp))  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >>    	non-compiled	[CE]  <identifier>  expected	53	None	replace
44	[BUG]  [BUGGY]  ||  val.get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ||  val.get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	||  val.get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >>    	non-compiled	[CE]  <identifier>  expected	53	None	replace
45	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i][0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i][0]);	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
46	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[0][i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[0][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[0][i]);	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
47	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i][i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i][i]  +  1);	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
48	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i,  field  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i,  field  +  1);	  Date    round    =(Date)val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
49	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i,  fields[i]);	  Date    round    =(Date)val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
50	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i,  field  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i,  field  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i,  field  -  1);	  Date    round    =(Date)val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
51	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
52	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
53	[BUG]  [BUGGY]  val.add(  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
54	[BUG]  [BUGGY]  Date  field  =(Date)fields[i].withField(val.get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)fields[i].withField(val.get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)fields[i].withField(val.get(i));	  Date    field    =(Date)val.get(i).withField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
55	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[i].get(i)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[i].get(i)+  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).withField(fields[i].get(i)+  1);	  Date    field    =(Date)val.get(i).withField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
56	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[i].get(i),  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[i].get(i),  round);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).withField(fields[i].get(i),  round);	  Date    field    =(Date)val.get(i).withField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
57	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i]);	  ((    Calendar)val).setTime(time);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
58	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length  +  2;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    i;    j++)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
59	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length  +  3;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    i;    j++)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
62	[BUG]  [BUGGY]  Date  field  =  val.get(i).getTime()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getTime()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getTime()  +  1;	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
63	[BUG]  [BUGGY]  Date  field  =  val.get(i).getCalendar();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getCalendar();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getCalendar();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
64	[BUG]  [BUGGY]  Date  field  =  val.get(i).getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getValue();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getValue();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
65	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  3);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
66	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  2);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
67	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][i]  -  1);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
68	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][i]  +  1);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
69	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][0]);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
70	[BUG]  [BUGGY]  int  round  =  fields[i].get(i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  fields[i].get(i  +  1);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
71	[BUG]  [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  fields[i].get(fields[i].length);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
72	[BUG]  [BUGGY]  int  round  =  fields[i].get(i  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(i  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  fields[i].get(i  -  1);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
73	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length  +  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
74	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val,  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val,  round);	  FieldUtils.setField(fields[i],    val);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
75	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  field);	  FieldUtils.setField(fields[i],    val);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
76	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  round);	  FieldUtils.setField(fields[i],    val);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
77	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  field,  val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  field,  val);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  field,  val);	  FieldUtils.setField(fields[i],    val);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
78	[BUG]  [BUGGY]  For(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  For(i    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
79	[BUG]  [BUGGY]  for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  For(i    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
80	[BUG]  [BUGGY]  ((  Calendar)val).setTime(date,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(date,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(date,  i);	  ((    Calendar)val).setTime(date);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
81	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i  *  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i  *  1);	  Date    round    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
82	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
83	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
84	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
85	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  10);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
86	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
87	[BUG]  [BUGGY]  &&  field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
88	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i]);	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
89	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  1);	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
90	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  round);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  round);	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
91	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].get(i));	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
92	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.get(i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.get(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.get(i  +  1);	  Calendar    date    =(Calendar)val.get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
93	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.get(i  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.get(i  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.get(i  -  1);	  Calendar    date    =(Calendar)val.get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
94	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.get(i).getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.get(i).getTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.get(i).getTime();	  Calendar    date    =(Calendar)val.get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
95	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i].length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i].length  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i,  fields[i].length  -  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
96	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i].length  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i].length  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i,  fields[i].length  +  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  j  <  fields.length;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  j  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  j  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
99	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
100	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  i  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  i  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  i  +  1;	  Calendar    date    =(Calendar)val.clone(),    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
101	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  field;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  field;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  field;	  Calendar    date    =(Calendar)val.clone(),    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
102	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i];  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  fields[i];	  Calendar    date    =(Calendar)val.clone(),    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
103	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  this.days[i];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  this.days[i];  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  this.days[i];	  Calendar    date    =(Calendar)val.clone(),    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
104	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1;  j++)  {	  for(int    j    =    0;    j    <    field.length    -    1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
105	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length  -  2;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length  -  2;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  field.length  -  2;  j++)  {	  for(int    j    =    0;    j    <    field.length    -    1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
106	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
107	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(date);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(date);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(date);	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
108	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(time);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(time);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(time);	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
109	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(val);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(val);	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
110	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(this.dayOfMonth);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(this.dayOfMonth);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(this.dayOfMonth);	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
111	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][0]);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
112	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][i],  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][i],  round);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][i],  round);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
113	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][i]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][i]  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][i]  -  1);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
114	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][i]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][i]  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][i]  +  1);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
115	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.cloneTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.cloneTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.cloneTime();	  Calendar    date    =(Calendar)val.cloneTwo();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
116	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.cloneChronology();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.cloneChronology();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.cloneChronology();	  Calendar    date    =(Calendar)val.cloneTwo();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
117	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val.get(i),  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val.get(i),  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val.get(i),  round);	  FieldUtils.setField(fields[i],    val.get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
118	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val.get(i)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val.get(i)+  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val.get(i)+  1);	  FieldUtils.setField(fields[i],    val.get(i));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
119	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val.get(i  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val.get(i  +  1));  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val.get(i  +  1));	  FieldUtils.setField(fields[i],    val.get(i));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
120	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields[  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields[  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields[	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE    	non-compiled	[CE]  <identifier>  expected	67	None	replace
121	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields[  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields[  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields[	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE    	non-compiled	[CE]  <identifier>  expected	67	None	replace
122	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  <identifier>  expected	56	None	replace
123	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  <identifier>  expected	56	None	replace
124	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  <identifier>  expected	56	None	replace
125	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.DATE,  i  +  1);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
126	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  -=  2)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  -=  2)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length;  j  -=  2)  {	  for(int    j    =    0;    j    <    fields.length;    j    +=    2)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
127	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length;  j  +=  1)  {	  for(int    j    =    0;    j    <    fields.length;    j    +=    2)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
128	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[i].length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i  +  1,  fields[i].length);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
129	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i  +  1,  fields[i]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
130	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15    	non-compiled	[CE]  <identifier>  expected	15	None	replace
131	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15    	non-compiled	[CE]  <identifier>  expected	15	None	replace
132	[BUG]  [BUGGY]  ((  Calendar)val).setTime(i  +  1L);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(i  +  1L);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(i  +  1L);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
133	[BUG]  [BUGGY]  ((  Calendar)val).setTime(i,  field  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(i,  field  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(i,  field  +  1);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
134	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length-2;  j++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length-2;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length-2;  j++)  {	  for(int    j    =    0;    j    <    fields.length-1;    j++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
135	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
136	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
137	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
138	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i  +  1  -  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i  +  1  -  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i  +  1  -  i);	  Date    round    =(Date)val.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
139	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].getTime();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].getTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].getTime();	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
140	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].get(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].get(i);	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
141	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].cloneTwo();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].cloneTwo();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].cloneTwo();	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
142	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  +  1  -  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i  +  1  -  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i  +  1  -  i);	  Date    field    =(Date)val.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
143	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field!=  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
144	[BUG]  [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
145	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
146	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  fields[i].length;  j++)  {	  For(int    j    =    0;    j    <    fields.length;    j++)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
147	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields.length  -  1;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields.length  -  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  fields.length  -  1;  j++)  {	  For(int    j    =    0;    j    <    fields.length;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
148	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  i  +  1);	  val.add(Calendar.MILLISECOND,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
149	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  0,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  0,  i);	  val.add(Calendar.MILLISECOND,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
150	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  i  +  1);	  Calendar    date    =(Calendar)val.clone(),    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
151	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  field);	  Calendar    date    =(Calendar)val.clone(),    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
152	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  1);	  Calendar    date    =(Calendar)val.clone(),    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
153	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
154	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i  *  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i  *  1);	  Date    field    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
155	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
159	[BUG]  [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
160	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][i],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][i],  field);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
161	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][i],  field);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
162	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i],  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][i],  1);	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
163	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(new  Date(fields[i][0]));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(new  Date(fields[i][0]));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(new  Date(fields[i][0]));	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
164	[BUG]  [BUGGY]  Date  round  =(Date)val.get(i).getCalendar();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(i).getCalendar();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(i).getCalendar();	  Date    round    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
165	[BUG]  [BUGGY]  &&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
166	[BUG]  [BUGGY]  Date  field  =(Date)fields[i].getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)fields[i].getTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)fields[i].getTime();	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
167	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getField(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getField(Calendar.DATE);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getField(Calendar.DATE);	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
168	[BUG]  [BUGGY]  int  round  =  fields[i].get(field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  fields[i].get(field);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
169	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i].getFieldType());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i].getFieldType());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i,  fields[i].getFieldType());	  Date    field    =    val.get(i,    fields[i].getTime());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
170	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
171	[BUG]  [BUGGY]  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.DATE,	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
172	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  fields	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
173	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >>  for(int  j  =  0;  j  <  fields	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
174	[BUG]  [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i  +  1]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
175	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
176	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
177	[BUG]  [BUGGY]  &&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  field.length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
178	[BUG]  [BUGGY]  int  round  =  val.get(fields[i].length  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i].length  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i].length  -  1);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
179	[BUG]  [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
180	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.get(i,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.get(i,  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.get(i,  field);	  Calendar    date    =(Calendar)val.get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
181	[BUG]  [BUGGY]  if(field!=  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field!=  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field!=  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields[    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
182	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0;  j  <	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields[    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
183	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
184	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i].getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i].getTime();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  fields[i].getTime();	  Calendar    date    =(Calendar)val.clone(),    i;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
185	[BUG]  [BUGGY]  Date  round  =(Date)val.get(fields[i  -  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  round  =(Date)val.get(fields[i  -  1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  round  =(Date)val.get(fields[i  -  1]);	  Date    round    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
186	[BUG]  [BUGGY]  if(fields[i][i]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][i]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i][i]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
187	[BUG]  [BUGGY]  for(int  j  =  0;  i  <  fields.length;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  i  <  fields.length;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
188	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getTime());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getTime());	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
189	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  field);	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
190	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].add(Calendar.MILLISECOND);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].add(Calendar.MILLISECOND);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].add(Calendar.MILLISECOND);	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
191	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].setTime(date);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].setTime(date);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].setTime(date);	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
193	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
194	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
195	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.cloneTwo()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.cloneTwo()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.cloneTwo()  -  1;	  Calendar    date    =(Calendar)val.cloneTwo();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
196	[BUG]  [BUGGY]  Date  field  =  val.get(i).getTimeZone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getTimeZone();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getTimeZone();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
197	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i),  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i].get(i),  field);	  int    round    =(int)Math.floor(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
198	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[0].get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).withField(fields[0].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).withField(fields[0].get(i));	  Date    field    =(Date)val.get(i).withField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
199	[BUG]  [BUGGY]  ((  Calendar)fields[i][i]).setTime(val);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i][i]).setTime(val);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i][i]).setTime(val);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
200	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i],  field);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i],  field);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
201	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][i],  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][i],  roundUp);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][i],  roundUp);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
202	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(i,  fields[i][i]);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
203	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
204	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
205	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[0].get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[0].get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[0].get(i));	  Date    field    =    val.get(i).getField(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
206	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  -15);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
207	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  fields[i]);	  Calendar    date    =(Calendar)val.clone(),    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
208	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val,  roundUp);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val,  roundUp);	  FieldUtils.setField(fields[i],    val);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
209	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j  -=  5)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
210	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  4)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j  -=  4)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j  -=  4)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
211	[BUG]  [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
212	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i  +  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i  +  1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i  +  1]);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
213	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(i  +  1);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
214	[BUG]  [BUGGY]  ((  Calendar)val).setTime(date  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(date  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(date  +  1);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
215	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
216	[BUG]  [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  val.add(	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
217	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(calendarFields[i][i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(calendarFields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(calendarFields[i][i]);	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
218	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][i]);	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
219	[BUG]  [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
220	[BUG]  [BUGGY]  if(fields[i].length  ==  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length  ==  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length  ==  0)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.D  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.D  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.D	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
222	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15  +  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  -15  +  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.DATE,  -15  +  i);	  val.add(Calendar.DATE,    -15);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
223	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.DATE,  0,  i);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
224	[BUG]  [BUGGY]  if(field!=  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field!=  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field!=  null)  {  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
225	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  val.add(Calendar.MILLISECOND,  fields[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	val.add(Calendar.MILLISECOND,  fields[i]);	  val.add(Calendar.MILLISECOND,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
226	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  field.length;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  field.length;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  field.length;  j++)  {	  For(int    j    =    0;    j    <    fields.length;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
227	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields.length  +  i;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields.length  +  i;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	For(int  j  =  0;  j  <  fields.length  +  i;  j++)  {	  For(int    j    =    0;    j    <    fields.length;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
228	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  +  11);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i  +  11);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i  +  11);	  Date    field    =(Date)val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
229	[BUG]  [BUGGY]  Date  field  =  val.get(i  +  11);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i  +  11);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i  +  11);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
230	[BUG]  [BUGGY]  FieldUtils.setField(fields[i],  val.get(i)+  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  FieldUtils.setField(fields[i],  val.get(i)+  1));  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	FieldUtils.setField(fields[i],  val.get(i)+  1));	  FieldUtils.setField(fields[i],    val.get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
231	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i.length  -  1].length;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i.length  -  1].length;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i.length  -  1].length;  j++)  {	  for(int    j    =    0;    j    <    field.length    -    1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
232	[BUG]  [BUGGY]  if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
233	[BUG]  [BUGGY]  if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(!round  &&  roundUp)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
234	[BUG]  [BUGGY]  ((  Calendar)val).setTime(time  +  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(time  +  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(time  +  i);	  ((    Calendar)val).setTime(time);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
235	[BUG]  [BUGGY]  int  round  =  val.get(field,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(field,  i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(field,  i);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
236	[BUG]  [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i][i]  ==  null)  {  if(fields[i].get(Calendar.DATE	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
237	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][i]    ==    field)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
238	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length-3;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length-3;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length-3;  j++)  {	  for(int    j    =    0;    j    <    fields.length-1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
239	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length  +  1;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length  +  1;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  field.length  +  1;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    1;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
240	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.cloneSecond();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.cloneSecond();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.cloneSecond();	  Calendar    date    =(Calendar)val.cloneTwo();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
241	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length;  j  +=  2)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length;  j  +=  2)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  field.length;  j  +=  2)  {	  for(int    j    =    0;    j    <    fields.length;    j    +=    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
242	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i].get(i)/  2);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i].get(i)/  2);	  int    round    =(int)Math.floor(fields[i].get(i));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
243	[BUG]  [BUGGY]  ((  Calendar)fields[i]).setTime(offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).setTime(offset);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).setTime(offset);	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
244	[BUG]  [BUGGY]  ((  Calendar)fields[i]).clear();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)fields[i]).clear();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)fields[i]).clear();	  ((    Calendar)fields[i]).setTime(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
245	[BUG]  [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(Calendar.DATE)  ==  1)  {  for(int  i  =  0;  i  <  fields[i].length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    i    =    0;    i    <    fields[i].length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
246	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
247	[BUG]  [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  null)  {  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
248	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getChronology());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getChronology());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i].getChronology());	  Date    field    =    val.get(i).getField(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
249	[BUG]  [BUGGY]  int  round  =  val.get(fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i].length);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i].length);	  int    round    =    val.get(i,    fields[i].length);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
250	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  >=  for(int  j  =  0	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    for(int    j    =    0;    j    <    fields[    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
251	[BUG]  [BUGGY]  &&  fields[i].get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(Calendar.DATE)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
252	[BUG]  [BUGGY]  &&  fields[i].get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  &&  fields[i].get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	&&  fields[i].get(Calendar.DATE)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
253	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
254	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
255	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
256	[BUG]  [BUGGY]  if(round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(round)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    if(fields[i][i]    ==    null)    {    if(fields[i].get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
257	[BUG]  [BUGGY]  Calendar  date  =(Calendar)val.clone(),  this.days[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)val.clone(),  this.days[i]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)val.clone(),  this.days[i]);	  Calendar    date    =(Calendar)val.clone(),    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
258	[BUG]  [BUGGY]  Calendar  date  =(Calendar)fields[i].set(Calendar.MILLISECOND,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Calendar  date  =(Calendar)fields[i].set(Calendar.MILLISECOND,  0);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Calendar  date  =(Calendar)fields[i].set(Calendar.MILLISECOND,  0);	  Calendar    date    =(Calendar)fields[i].clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
259	[BUG]  [BUGGY]  int  round  =  fields[i].get(field.get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  fields[i].get(field.get(i));  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  fields[i].get(field.get(i));	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
260	[BUG]  [BUGGY]  int  round  =  this.fields[i].get(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  this.fields[i].get(i);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  this.fields[i].get(i);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
261	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i][j]);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
262	[BUG]  [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =(int)Math.floor(fields[i],  field[i]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =(int)Math.floor(fields[i],  field[i]);	  int    round    =(int)Math.floor(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
263	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE	  if(fields[i].get(i)    ==    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
264	[BUG]  [BUGGY]  Date  field  =  val.get(i).getCalendarField();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getCalendarField();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getCalendarField();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
265	[BUG]  [BUGGY]  ((  Calendar)val).setTime(time  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(time  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(time  +  1);	  ((    Calendar)val).setTime(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
266	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(fields[i][i].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  val.get(i).getField(fields[i][i].getTime());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  val.get(i).getField(fields[i][i].getTime());	  Date    field    =    val.get(i).getField(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
267	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  field.length  +  i;  j++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  field.length  +  i;  j++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  field.length  +  i;  j++)  {	  for(int    j    =    0;    j    <    fields.length    +    i;    j++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
268	[BUG]  [BUGGY]  Date  field  =(Date)val.get(fields[i  -  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(fields[i  -  1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(fields[i  -  1]);	  Date    field    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
269	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
270	[BUG]  [BUGGY]  ((  Calendar)val).setTime(fields[i][1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  ((  Calendar)val).setTime(fields[i][1]);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	((  Calendar)val).setTime(fields[i][1]);	  ((    Calendar)val).setTime(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
271	[BUG]  [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
272	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
273	[BUG]  [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(field  ==  DateUtils.SEMI_MONTH)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
274	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
275	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
276	[BUG]  [BUGGY]  if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  1)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
277	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  }	  if(fields[i].get(i)!=    null)    {    for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
278	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getCalendarField();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getCalendarField();  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getCalendarField();	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
279	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i).getField(calendar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =(Date)val.get(i).getField(calendar);  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =(Date)val.get(i).getField(calendar);	  Date    field    =(Date)val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
280	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  1;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields.length  -  1;  i++)  {	  for(int    j    =    0;    j    <    fields.length;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
281	[BUG]  [BUGGY]  Date  field  =  fields[i].get(i)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  Date  field  =  fields[i].get(i)+  1;  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	Date  field  =  fields[i].get(i)+  1;	  Date    field    =    val.get(i)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
282	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
283	[BUG]  [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)!=  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
284	[BUG]  [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].length!=  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(!round    ||    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
285	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][i].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  int  round  =  val.get(fields[i][i].getTime());  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	int  round  =  val.get(fields[i][i].getTime());	  int    round    =    val.get(fields[i][i]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
286	[BUG]  [BUGGY]  if(fields[i].get(i)  ==  field)  {  for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  if(fields[i].get(i)  ==  field)  {  for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      for  (int  j  =  0;  j  <  fields[i].length;  j++)  {  if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	if(fields[i].get(i)  ==  field)  {  for(j  =  0;  j  <  fields[i].length;  j++)  {  if(!round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  }	  For(i    =    0;    j    <    fields[i].length;    j++)    {    if(!round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
287	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1);  j  -=  2)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1);  j  -=  2)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1);  j  -=  2)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
288	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length  -  1)  {  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	for(int  j  =  0;  j  <  fields[i].length  -  1)  {	  for(int    j    =    0;    j    <    fields[i].length;    j    -=    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
