bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j],  field);	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
2	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j]  -  1);	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
3	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  this);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j],  this);	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
4	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j],  round);	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
5	[BUG]  [BUGGY]  if(round  &&  roundUp)  {  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(round  &&  roundUp)  {  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(round  &&  roundUp)  {  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
6	[BUG]  [BUGGY]  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
7	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
9	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
10	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
11	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
12	[BUG]  [BUGGY]  Date  field  =  val.get(i,  j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  j  +  1);	  Date    field    =    val.get(i,    j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
13	[BUG]  [BUGGY]  Date  field  =  val.get(i,  j,  fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  j,  fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  j,  fields[i].length);	  Date    field    =    val.get(i,    j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
14	[BUG]  [BUGGY]  Date  field  =  val.get(i,  j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  j  -  1);	  Date    field    =    val.get(i,    j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
15	[BUG]  [BUGGY]  Date  field  =  val.get(j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(j  +  1);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
16	[BUG]  [BUGGY]  Date  field  =  val.get(i  +  1,  fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i  +  1,  fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i  +  1,  fields[i].length);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
17	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i,  j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(i,  j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(i,  j  +  1);	  Date    field    =(Date)val.get(i,    j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
18	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i,  j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(i,  j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(i,  j  -  1);	  Date    field    =(Date)val.get(i,    j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
19	[BUG]  [BUGGY]  int  round  =  val.get(j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(j  +  1);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
20	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i  +  1,  fields[i].length);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
21	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i  +  1,  fields[i][j]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
22	[BUG]  [BUGGY]  fields[i][j]  =  val.get(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(i);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
23	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE,  1);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
24	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
25	[BUG]  [BUGGY]  Date  field  =(Date)val.get(j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(j  +  1);	  Date    field    =(Date)val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
26	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  +  1  -  j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(i  +  1  -  j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(i  +  1  -  j);	  Date    field    =(Date)val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
27	[BUG]  [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j]!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j]!=  null)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null  ||  fields[i][j]!=  null)  {	  if(fields[i][j]    ==    null    ||    fields[i][j]!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
28	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
29	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]!=  null)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]!=  null)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]!=  null)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
30	[BUG]  [BUGGY]  val.add(Calendar.DATE,  10);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  10);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  10);	  val.add(Calendar.DATE,    15);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
31	[BUG]  [BUGGY]  val.add(Calendar.DATE,  12);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  12);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  12);	  val.add(Calendar.DATE,    16);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
32	[BUG]  [BUGGY]  val.add(Calendar.DATE,  j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  j);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
33	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  0,  i);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
34	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  i  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  i  +  1);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
35	[BUG]  [BUGGY]  Date  round  =  val.get(i,  j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  j);	  Date    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
36	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[j]);	  Date    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
37	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i]);	  Date    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
38	[BUG]  [BUGGY]  Date  round  =  val.get(i,  field,  j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  field,  j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  field,  j);	  Date    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
39	[BUG]  [BUGGY]  Date  round  =  val.get(j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(j  +  1);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
40	[BUG]  [BUGGY]  Date  round  =  val.get(i  +  1,  fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i  +  1,  fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i  +  1,  fields[i].length);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
41	[BUG]  [BUGGY]  Date  round  =  val.get(i  +  1,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i  +  1,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i  +  1,  fields[i][j]);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
42	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
43	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
44	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
45	[BUG]  [BUGGY]  fields[i][j]  =  field.get(Calendar.DATE)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  field.get(Calendar.DATE)+  1;  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  field.get(Calendar.DATE)+  1;	  if(fields[i][j]    ==    field)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
46	[BUG]  [BUGGY]  fields[i][j]  =  field.get(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  field.get(Calendar.DATE);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  field.get(Calendar.DATE);	  if(fields[i][j]    ==    field)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
47	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].length  ==  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i][j].length  ==  0)  {	  if(fields[i][j]    ==    null    ||    fields[i][j].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
48	[BUG]  [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j].length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j].length  ==  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null  ||  fields[i][j].length  ==  0)  {	  if(fields[i][j]    ==    null    ||    fields[i][j].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
49	[BUG]  [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j].length!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null  ||  fields[i][j].length!=  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null  ||  fields[i][j].length!=  0)  {	  if(fields[i][j]    ==    null    ||    fields[i][j].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
50	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
51	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
52	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
53	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
54	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
55	[BUG]  [BUGGY]  Date  field  =(Date)val.get(j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(j  -  1);	  Date    field    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
56	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  1)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  <  1)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
57	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length!=  2)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length!=  2)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length!=  2)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
58	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  1  ||  val.get(Calendar.DATE)  ==  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  1  ||  val.get(Calendar.DATE)  ==  1)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  <  1  ||  val.get(Calendar.DATE)  ==  1)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
59	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j]  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j]  ==  null)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i][j]  ==  null)  {	  if(fields[i][j]!=    null    ||    fields[i][j]    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
60	[BUG]  [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(fields[i].length);	  int    round    =    fields[i].get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
61	[BUG]  [BUGGY]  int  round  =  fields[i].get(j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(j  -  1);	  int    round    =    fields[i].get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
62	[BUG]  [BUGGY]  int  round  =  fields[i].get(field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(field);	  int    round    =    fields[i].get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
63	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  ==  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  ==  0)  {	  if(fields[i][j]    ==    null    ||    fields[i].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
64	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  >=  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  >=  0)  {	  if(fields[i][j]    ==    null    ||    fields[i].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
65	[BUG]  [BUGGY]  if(fields[i][j]!=  null  ||  fields[i].length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null  ||  fields[i].length  ==  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null  ||  fields[i].length  ==  0)  {	  if(fields[i][j]    ==    null    ||    fields[i].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
66	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  12);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  12);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  12);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    field)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
67	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	For(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    field)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
68	[BUG]  [BUGGY]  Date  round  =  val.get(j,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(j,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(j,  i);	  Date    round    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
69	[BUG]  [BUGGY]  Date  round  =  fields[i].get(j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  fields[i].get(j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  fields[i].get(j);	  Date    round    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
70	[BUG]  [BUGGY]  val.add(Calendar.DATE,  0,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  0,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  0,  field);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
71	[BUG]  [BUGGY]  val.add(Calendar.DATE,  10,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  10,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  10,  field);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
72	[BUG]  [BUGGY]  val.add(Calendar.DATE,  1,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  1,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  1,  field);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
73	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  field,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  field,  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  field,  round);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
74	[BUG]  [BUGGY]  int  round  =  fields[j].get(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[j].get(i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[j].get(i);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
75	[BUG]  [BUGGY]  Date  field  =  val.get(j).getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(j).getTime();  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(j).getTime();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
76	[BUG]  [BUGGY]  Date  field  =  val.get(i).getTime()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getTime()  +  1;  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getTime()  +  1;	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
77	[BUG]  [BUGGY]  Date  field  =  fields[i].get(i).getTime();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  fields[i].get(i).getTime();  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  fields[i].get(i).getTime();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
78	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  =  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  =  1)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  <  =  1)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
79	[BUG]  [BUGGY]  Date  field  =  val.get(j,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(j,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(j,  i);	  Date    field    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
80	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -1);	  val.add(Calendar.DATE,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
81	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE)+  1;  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE)+  1;	  if(fields[i][j]    ==    field)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
82	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  fields[i][j],  round);	  Date    field    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
83	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][j]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][j]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  fields[i][j]  -  1);	  Date    field    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
84	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  this);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  fields[i][j],  this);	  Date    field    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
85	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][j].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][j].getTime());  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  fields[i][j].getTime());	  Date    field    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
86	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
87	[BUG]  [BUGGY]  int  round  =  val.get(i,  j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  j);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
88	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[j]);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
89	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i]);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
90	[BUG]  [BUGGY]  int  round  =  fields[i].get(i,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(i,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(i,  field);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
91	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  field);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
92	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  1);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
93	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j]  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j]  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j]  -  1);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
94	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  timeZone);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  timeZone);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  timeZone);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
95	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
96	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(val.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
97	[BUG]  [BUGGY]  int  round  =  val.get(j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(j  -  1);	  int    round    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
98	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].length  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].length  >=  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i][j].length  >=  0)  {	  if(fields[i][j]    ==    null    ||    fields[i][j].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
99	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].getTime()!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].getTime()!=  null)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i][j].getTime()!=  null)  {	  if(fields[i][j]    ==    null    ||    fields[i][j]!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
100	[BUG]  [BUGGY]  Date  field  =(Date)fields[i].get(j);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)fields[i].get(j);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)fields[i].get(j);	  Date    field    =(Date)val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
101	[BUG]  [BUGGY]  Date  field  =(Date)fields[j].get(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)fields[j].get(i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)fields[j].get(i);	  Date    field    =(Date)val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
102	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
103	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
104	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    field)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
105	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    field)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
106	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  field,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  field,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  field,  i);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
107	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  fields[i]);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
108	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  fields[i].length);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
109	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
110	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
111	[BUG]  [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(fields[i  +  1]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(fields[i  +  1]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
112	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
113	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
114	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	for(int  j  =  0;  j  <  fields.length;  j++)  {  if(fields[i][j]  ==  null)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
115	[BUG]  [BUGGY]  int  round  =  fields[i].get(j  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(j  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(j  +  1);	  int    round    =    fields[i].get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
116	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
117	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
118	[BUG]  [BUGGY]  val.add(Calendar.DATE,  i  +  1,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  i  +  1,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  i  +  1,  fields[i][j]);	  val.add(Calendar.DATE,    i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
119	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE,  i);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
120	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  0);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE,  0);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
121	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
122	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
123	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
124	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
125	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  *  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(i  *  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(i  *  1);	  Date    field    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
126	[BUG]  [BUGGY]  if(fields[i][j].getTime()!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j].getTime()!=  null)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j].getTime()!=  null)  {	  if(fields[i][j]!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
127	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    0)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
128	[BUG]  [BUGGY]  Date  field  =  val.get(i  +  1,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i  +  1,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i  +  1,  fields[i][j]);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
129	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
130	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  15);	  if(fields[i][j]    ==    field)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
131	[BUG]  [BUGGY]  fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  ==  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(field.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
132	[BUG]  [BUGGY]  Date  field  =  val.get(j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(j  -  1);	  Date    field    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
133	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
134	[BUG]  [BUGGY]  int  round  =  fields[i].get(fields[j].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(fields[j].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(fields[j].length);	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
135	[BUG]  [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
136	[BUG]  [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  0);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  0);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  0);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
137	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  >=  2)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  >=  2)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  >=  2)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
138	[BUG]  [BUGGY]  int  round  =  val.get(field,  i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(field,  i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(field,  i);	  int    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
139	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  date);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  date);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  date);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
140	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
141	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
142	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  fields[i][j]);	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
143	[BUG]  [BUGGY]  Date  field  =  val.get(i).getCalendarField(fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getCalendarField(fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getCalendarField(fields[i][j]);	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
144	[BUG]  [BUGGY]  Date  field  =  val.get(i).getCalendarField(fields[i].get(j));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getCalendarField(fields[i].get(j));  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getCalendarField(fields[i].get(j));	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
145	[BUG]  [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  0)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
146	[BUG]  [BUGGY]  Date  round  =  val.get(j  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(j  -  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(j  -  1);	  Date    round    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
147	[BUG]  [BUGGY]  Date  round  =  val.get(i,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  field  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  field  +  1);	  Date    round    =    val.get(i,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
148	[BUG]  [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i,  fields[i][j],  roundUp);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i,  fields[i][j],  roundUp);	  Date    field    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
149	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  date);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j],  date);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j],  date);	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
150	[BUG]  [BUGGY]  if  (fields[i][j]  ==  field  ||  offsetSet  ||  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if  (fields[i][j]  ==  field  ||  offsetSet  ||  roundUp)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if  (fields[i][j]  ==  field  ||  offsetSet  ||  roundUp)  {	  if    (fields[i][j]    ==    field    ||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
151	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
152	[BUG]  [BUGGY]  Date  round  =  val.get(i,  fields[i][j].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i,  fields[i][j].getTime());  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i,  fields[i][j].getTime());	  Date    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
153	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  fields[i][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  fields[i][j]);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
154	[BUG]  [BUGGY]  val.add(Calendar.DATE,  -15,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  val.add(Calendar.DATE,  -15,  field  +  1);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	val.add(Calendar.DATE,  -15,  field  +  1);	  val.add(Calendar.DATE,    -15,    field);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
155	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
156	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
157	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(fields[i][j]  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
158	[BUG]  [BUGGY]  Date  field  =  val.getField(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.getField(i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.getField(i);	  Date    field    =    val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
159	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
160	[BUG]  [BUGGY]  Date  field  =(Date)val.get(i  +  1,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(i  +  1,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(i  +  1,  fields[j]);	  Date    field    =(Date)val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
161	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  round);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
162	[BUG]  [BUGGY]  int  round  =  val.get(fields[i][j],  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(fields[i][j],  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(fields[i][j],  field);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
163	[BUG]  [BUGGY]  int  round  =  val.get(i,  fields[i][j],  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i,  fields[i][j],  this);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i,  fields[i][j],  this);	  int    round    =    val.get(i,    fields[i][j]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
164	[BUG]  [BUGGY]  Date  field  =  val.get(i  +  1,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i  +  1,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i  +  1,  fields[j]);	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
165	[BUG]  [BUGGY]  Date  field  =  val.get(i  +  1,  fields[j].getTime());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i  +  1,  fields[j].getTime());  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i  +  1,  fields[j].getTime());	  Date    field    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
166	[BUG]  [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(field.get(i)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    null)    {    if(field.get(i)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
167	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]!=    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
168	[BUG]  [BUGGY]  if(fields[i][j]!=  null  ||  fields[i].length  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null  ||  fields[i].length  <  =  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null  ||  fields[i].length  <  =  0)  {	  if(fields[i][j]!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
169	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
170	[BUG]  [BUGGY]  Date  round  =  val.get(i  +  1,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i  +  1,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i  +  1,  field);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
171	[BUG]  [BUGGY]  Date  round  =  val.get(fields[i  +  1][j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(fields[i  +  1][j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(fields[i  +  1][j]);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
172	[BUG]  [BUGGY]  Date  round  =  val.get(i  +  1,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  round  =  val.get(i  +  1,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  round  =  val.get(i  +  1,  fields[j]);	  Date    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
173	[BUG]  [BUGGY]  if  (fields[i][j]  ==  field  ||  roundsUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if  (fields[i][j]  ==  field  ||  roundsUp)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if  (fields[i][j]  ==  field  ||  roundsUp)  {	  if    (fields[i][j]    ==    field    ||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
174	[BUG]  [BUGGY]  Date  field  =(Date)val.get(fields[i  -  1]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.get(fields[i  -  1]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.get(fields[i  -  1]);	  Date    field    =(Date)val.get(i    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
175	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
176	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
177	[BUG]  [BUGGY]  if(fields[i][j]  ==  null)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null)  {  if(field!=  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
178	[BUG]  [BUGGY]  int  round  =  fields[i].get(fields[j].get(i));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  fields[i].get(fields[j].get(i));  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  fields[i].get(fields[j].get(i));	  int    round    =    fields[i].get(i);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
179	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  2  ||  i  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i].length  <  2  ||  i  >  0)  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i].length  <  2  ||  i  >  0)  {	  if(fields[i][j]    ==    null    ||    fields[i].length    <    2)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
180	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
181	[BUG]  [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field  ||  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
182	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
183	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
184	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(round  &&  roundUp)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  val.add(Calendar.DATE,  16);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
185	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE,  field);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
186	[BUG]  [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  fields[i][j]  =  val.get(Calendar.DATE,  round);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	fields[i][j]  =  val.get(Calendar.DATE,  round);	  fields[i][j]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
187	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
188	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
189	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
190	[BUG]  [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field)  {  if(field  <  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }	  if(fields[i][j]    ==    field)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
191	[BUG]  [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  field  ||  roundUp)  {  val.add(Calendar.DATE,  15);  }	  if(fields[i][j]    ==    field)    {    if(round    &&    roundUp)    {    val.add(Calendar.DATE,    15);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
192	[BUG]  [BUGGY]  Date  field  =(Date)val.getValue(i);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.getValue(i);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.getValue(i);	  Date    field    =(Date)val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
193	[BUG]  [BUGGY]  Date  field  =(Date)val.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =(Date)val.clone();  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =(Date)val.clone();	  Date    field    =(Date)val.get(j);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
194	[BUG]  [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i].length!=  16)  {  for(int  j  =  0;  j  <  fields[i].length;  j++)  {  if(fields[i][j]  ==  field)  {  val.add(Calendar.DATE,  16);  }	  for(int    j    =    0;    j    <    fields[i].length;    j++)    {    if(fields[i][j]    ==    field)    {    val.add(Calendar.DATE,    16);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
195	[BUG]  [BUGGY]  Date  field  =  val.get(i).getCalendarField();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getCalendarField();  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getCalendarField();	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
196	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE,  field);	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
197	[BUG]  [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  Date  field  =  val.get(i).getField(Calendar.DATE);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	Date  field  =  val.get(i).getField(Calendar.DATE);	  Date    field    =    val.get(i).getTime();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
198	[BUG]  [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].charAt(j)!=  '0')  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]  ==  null  ||  fields[i][j].charAt(j)!=  '0')  {  [BUGGY]        if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]  ==  null  ||  fields[i][j].charAt(j)!=  '0')  {	  if(fields[i][j]    ==    null    ||    fields[i][j].length!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
199	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  16);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    16);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
200	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  field);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i  +  1,  field);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
201	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[j]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[j]);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i  +  1,  fields[j]);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
202	[BUG]  [BUGGY]  int  round  =  val.get(i  +  1,  fields[j].length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  int  round  =  val.get(i  +  1,  fields[j].length);  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	int  round  =  val.get(i  +  1,  fields[j].length);	  int    round    =    val.get(i    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
203	[BUG]  [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  null)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
204	[BUG]  [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]        if  (date.getTime()  !=  time)  {  date.setTime(time);  val.setTime(date);  }  boolean  roundUp  =  false;  for  (int  i  =  0;  i  <  fields.length;  i++)  {  for  (int  j  =  0;  j  <  fields[i].length;  j++)  {      [BUGGY]  if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }  [BUGGY]      if  (fields[i][j]  ==  field)  {  if  (round  &&  roundUp)  {  if  (field  ==  DateUtils.SEMI_MONTH)  {    if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	if(fields[i][j]!=  field)  {  if(field  ==  DateUtils.SEMI_MONTH)  {  if(val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  1);  }  }	  if(fields[i][j]    ==    null)    {    if(field    ==    DateUtils.SEMI_MONTH)    {    if(val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    1);    }    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
