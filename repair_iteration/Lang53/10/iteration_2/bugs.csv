bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;	      int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;	      int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;	      int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  round);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  round);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field,  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.DATE,  field);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.DATE,  field);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.DATE,  time);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.DATE,  round);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.DATE,  round);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  field);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.MILLISECOND,  field);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.MILLISECOND,  round);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.MILLISECOND,  1);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  Date  val  =  get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.MILLISECOND  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.MILLISECOND  +  1);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  field);	      Date    date    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time);	      Date    date    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  round  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(Calendar.MILLISECOND,  round  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(Calendar.MILLISECOND,  round  +  1);	      val.set(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  round  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(Calendar.MILLISECOND,  round  -  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(Calendar.MILLISECOND,  round  -  1);	      val.set(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(field);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(field);	      Calendar    val    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  Calendar  val  =  calendar.getInstance();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  calendar.getInstance();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  calendar.getInstance();	      Calendar    val    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  field  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(Calendar.MILLISECOND,  field  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(Calendar.MILLISECOND,  field  +  1);	      val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  val.set(field,  Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(field,  Calendar.MILLISECOND);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(field,  Calendar.MILLISECOND);	      val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  round);	      Calendar    val    =    Calendar.getInstance(fields,    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  1);	      Calendar    val    =    Calendar.getInstance(fields,    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  field  +  1);	      Calendar    val    =    Calendar.getInstance(fields,    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field,  round);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  field,  round);	      Calendar    val    =    Calendar.getInstance(fields,    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  Date  val  =(Date)fields.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =(Date)fields.clone();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =(Date)fields.clone();	      Date    val    =(Date)val.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  Date  val  =(Date)val.getTime();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =(Date)val.getTime();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =(Date)val.getTime();	      Date    val    =(Date)val.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  time);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  time);	      Calendar    val    =    Calendar.getInstance(fields);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  Date  date  =  this.val.getTime();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  this.val.getTime();  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  this.val.getTime();	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  Date  date  =  val.getDate();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getDate();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getDate();	      Date    date    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  field);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTime(Calendar.MILLISECOND,  field);	  Date    date    =    val.getTime(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  round);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTime(Calendar.MILLISECOND,  round);	  Date    date    =    val.getTime(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND,  time);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTime(Calendar.MILLISECOND,  time);	  Date    date    =    val.getTime(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  val  =(Date)val.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val  =(Date)val.clone();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val  =(Date)val.clone();	      Date    val    =(Date)val.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  field  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(Calendar.MILLISECOND,  field  -  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(Calendar.MILLISECOND,  field  -  1);	      val.set(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  +  1);	      Date    date    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  Date  val  =  get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.HOUR_OF_DAY);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.HOUR_OF_DAY);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.DATE,  1);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.DATE,  1);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTime(Calendar.MILLISECOND  +  1);  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTime(Calendar.MILLISECOND  +  1);	  Date    date    =    val.getTime(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field.getTime());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(fields,  field.getTime());  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(fields,  field.getTime());	      Calendar    val    =    Calendar.getInstance(fields,    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  time);	      int[][]    fields    =    val.get(Calendar.MILLISECOND,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  Date  val  =(Date)this.val.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =(Date)this.val.clone();  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =(Date)this.val.clone();	      Date    val    =(Date)val.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  val.set(Calendar.MILLISECOND,  this.field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  val.set(Calendar.MILLISECOND,  this.field);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	val.set(Calendar.MILLISECOND,  this.field);	      val.set(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;	      int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;	      int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND);	      Calendar    val    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Calendar  val  =  Calendar.getInstance(Calendar.MILLISECOND,  round);	      Calendar    val    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  val  =  get(Calendar.MILLISECOND,  time);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  val  =  get(Calendar.MILLISECOND,  time);	      Date    val    =    get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  round);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]    Date  date  =  val.getTime();  long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  round);	      Date    date    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  Date  date  =  val.getTimeInMillis();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTimeInMillis();  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTimeInMillis();	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  Date  date  =  val.getTimeInMilliseconds();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (field  ==  Calendar.MILLISECOND)  {  return;  }          [BUGGY]  Date  date  =  val.getTimeInMilliseconds();  [BUGGY]    long  time  =  date.getTime();  boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	Date  date  =  val.getTimeInMilliseconds();	  Date    date    =    val.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
