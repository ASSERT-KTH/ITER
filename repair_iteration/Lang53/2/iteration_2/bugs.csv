bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  1);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MONTH);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  2);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  2);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  3);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  3);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  -15);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MONTH,  -15);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MONTH,  -15);	      val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MONTH,  2);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MONTH,  2);	      val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  3);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MONTH,  3);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MONTH,  3);	      val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	9	None	replace
11	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  val.add(fields[i][0],  -1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(fields[i][0],  -1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(fields[i][0],  -1);	  val.add(fields[i][0],    -15);    	non-compiled	[CE]  ';'  expected	1	None	replace
13	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  1);	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
14	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  2);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  2);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  2);	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
15	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  3);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  3);	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
16	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  1);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
17	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  round);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
18	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
19	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  3);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  3);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  3);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
20	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	9	None	replace
21	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1;	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
22	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND  +  1);	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  val.add(Calendar.MONTH);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MONTH);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MONTH);	      	non-compiled	[CE]  ';'  expected	3	None	replace
24	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  1);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MILLISECOND,  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  1);	      	non-compiled	[CE]  ';'  expected	3	None	replace
25	[BUG]  [BUGGY]  val.add(Calendar.YEAR,  1);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.YEAR,  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.YEAR,  1);	      	non-compiled	[CE]  ';'  expected	3	None	replace
26	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  16);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  16);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  16);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  ';'  expected	5	None	replace
27	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
28	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }	      val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
29	[BUG]  [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }	      val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
30	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	9	None	replace
31	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  round);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  round);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  round);	      int    fields[][]    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  val.add(Calendar.MILLISECOND,  0);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  0);	      	non-compiled	[CE]  ';'  expected	3	None	replace
33	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  round);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  round);	      int    fields[][]    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  ';'  expected	6	None	replace
34	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	if(fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	      val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	      val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
36	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [BUGGY]    val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  ';'  expected	10	None	replace
