bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.MILLISECOND,  -15);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  -15);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
2	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.MILLISECOND,  2);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  2);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
3	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.MILLISECOND,  3);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  3);	  val.add(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
4	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  field);	  int[][]    fields    =    val.get(Calendar.SECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	27	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  roundUp);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  roundUp);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  0,  roundUp);	  int[][]    fields    =    val.get(Calendar.SECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	27	None	replace
6	[BUG]  [BUGGY]  val.add(Calendar.YEAR,  -15);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.YEAR,  -15);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.YEAR,  -15);	  val.add(Calendar.YEAR,    1);    	non-compiled	[CE]  ';'  expected	25	None	replace
7	[BUG]  [BUGGY]  val.add(Calendar.YEAR,  2);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.YEAR,  2);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.YEAR,  2);	  val.add(Calendar.YEAR,    1);    	non-compiled	[CE]  ';'  expected	25	None	replace
8	[BUG]  [BUGGY]  val.add(Calendar.YEAR,  3);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.YEAR,  3);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.YEAR,  3);	  val.add(Calendar.YEAR,    1);    	non-compiled	[CE]  ';'  expected	25	None	replace
9	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	30	None	replace
10	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  roundUp);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  roundUp);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  roundUp);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	30	None	replace
11	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  4);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  4);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  4);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    2);    	non-compiled	[CE]  ';'  expected	11	None	replace
12	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  16);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  16);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  16);	  int    fields[][]    =    val.get(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  ';'  expected	13	None	replace
13	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  0,  round);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  0,  round);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  0,  round);	  int    fields[][]    =    val.get(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  ';'  expected	33	None	replace
14	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  2);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  2);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  2);	  int[][]    fields    =    val.get(Calendar.SECOND,    3);    	non-compiled	[CE]  ';'  expected	19	None	replace
15	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  4);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  4);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  4);	  int[][]    fields    =    val.get(Calendar.SECOND,    3);    	non-compiled	[CE]  ';'  expected	19	None	replace
16	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  12);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  12);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  12);	  int    fields[][]    =    val.get(Calendar.DATE,    16);    	non-compiled	[CE]  ';'  expected	26	None	replace
17	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  15);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  15);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  15);	  int    fields[][]    =    val.get(Calendar.DATE,    16);    	non-compiled	[CE]  ';'  expected	26	None	replace
18	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  4);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  4);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  4);	  int    fields[][]    =    val.get(Calendar.MILLISECOND,    2);    	non-compiled	[CE]  ';'  expected	14	None	replace
19	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  round);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  round);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  0,  round);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  ';'  expected	9	None	replace
20	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  0,  round);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  0,  round);	  int    fields[][]    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  ';'  expected	31	None	replace
21	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  1,  round);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  1,  round);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  1,  round);	  int    fields[][]    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  ';'  expected	31	None	replace
22	[BUG]  [BUGGY]  val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);	  if(fields[i][0]    ==    roundUp)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
23	[BUG]  [BUGGY]  val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);	  if(fields[i][0]    ==    roundUp)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
24	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND)/  1;	  int    fields[][]    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
25	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND)+  2;	  int    fields[][]    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
26	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND)-  1;	  int    fields[][]    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  ';'  expected	21	None	replace
27	[BUG]  [BUGGY]  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    field)    {    val.add(fields[i][0],    1);    }    else    {    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	34	None	replace
28	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  ';'  expected	20	None	replace
29	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)/  1;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
30	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
31	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  2;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  ';'  expected	36	None	replace
32	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH,  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH,  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MONTH,  1);	  int    fields[][]    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	2	None	replace
33	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH)+  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH)+  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MONTH)+  1;	  int    fields[][]    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	2	None	replace
34	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH)-1;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MONTH)-1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MONTH)-1;	  int    fields[][]    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	2	None	replace
35	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  4);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  4);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  4);	  int    fields[][]    =    val.get(Calendar.DATE,    2);    	non-compiled	[CE]  ';'  expected	3	None	replace
36	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  0,  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.DATE,  0,  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.DATE,  0,  1);	  int    fields[][]    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  ';'  expected	1	None	replace
37	[BUG]  [BUGGY]  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    field)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	28	None	replace
38	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  0,  round);	  int[][]    fields    =    val.get(Calendar.SECOND,    round);    	non-compiled	[CE]  ';'  expected	17	None	replace
39	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  2;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  ';'  expected	18	None	replace
40	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  3;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  3;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  3;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  ';'  expected	18	None	replace
41	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.HOUR_OF_DAY);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.HOUR_OF_DAY);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.HOUR_OF_DAY);	  int    fields[][]    =    val.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	2	None	replace
42	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND  -  1);	  int    fields[][]    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  ';'  expected	22	None	replace
43	[BUG]  [BUGGY]  fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    roundUp)    {    val.add(fields[i][0],    1);    }    else    {    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  0);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  0);	  int[][]    fields    =    val.get(Calendar.SECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	27	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  16);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  16);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  16);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  ';'  expected	8	None	replace
46	[BUG]  [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    field)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	fields[i][0]  ==  -15)  {  val.add(fields[i][0],  1);  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    roundUp)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
48	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND)+  1  +  1;	  int    fields[][]    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND  -  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	fields[i][0]  ==  field)  {  val.add(fields[i][1],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    field)    {    val.add(fields[i][0],    1);    }    else    {    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	34	None	replace
51	[BUG]  [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	fields[i][0]  ==  field)  {  val.add(fields[i][0],  1);  }  else  {  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    field)    {    val.add(fields[i][0],    1);    }    else    {    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	34	None	replace
52	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	30	None	replace
53	[BUG]  [BUGGY]  val.add(Calendar.MILLISECOND,  -1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.MILLISECOND,  -1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MILLISECOND,  -1);	  val.add(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  ';'  expected	32	None	replace
54	[BUG]  [BUGGY]  val.add(Calendar.MONTH,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  val.add(Calendar.MONTH,  0);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	val.add(Calendar.MONTH,  0);	  val.add(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  ';'  expected	32	None	replace
55	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);	  int    fields[][]    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  ';'  expected	22	None	replace
56	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  -1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  -1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  -1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    roundUp);    	non-compiled	[CE]  ';'  expected	30	None	replace
57	[BUG]  [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int  fields[][]  =  val.get(Calendar.MILLISECOND,  0);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int  fields[][]  =  val.get(Calendar.MILLISECOND,  0);	  int    fields[][]    =    val.get(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  ';'  expected	33	None	replace
58	[BUG]  [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);  }  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	if(fields[i][0]  ==  roundUp)  {  val.add(fields[i][0],  1,  1);  val.add(Calendar.MONTH,  1);  }	  if(fields[i][0]    ==    roundUp)    {    val.add(fields[i][0],    1);    val.add(Calendar.MONTH,    1);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
59	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  3;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
60	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (val.get(Calendar.DATE)  ==  1)  {  val.add(Calendar.DATE,  15);  }  else  {  val.add(Calendar.DATE,  -15);  val.add(Calendar.MONTH,  1);  }  }  else  {        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [BUGGY]      val.add(fields[i][0],  1);  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  ';'  expected	20	None	replace
