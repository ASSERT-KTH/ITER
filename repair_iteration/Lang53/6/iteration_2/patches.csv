bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  modify(gval,  field,  true,  cal1.get(field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  true,  cal1.get(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  true,  cal1.get(field));	  modify(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
2	[BUG]  [BUGGY]  modify(gval,  field,  false,  cal2.get(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  false,  cal2.get(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  false,  cal2.get(field));	  modify(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
3	[BUG]  [BUGGY]  modify(gval,  field,  false,  cal1.get(field  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  false,  cal1.get(field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  false,  cal1.get(field  +  1));	  modify(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
4	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentTimeMillis(),  field,  false);	  alter(gval,    FieldUtils.currentTimeMillis(),    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  false,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  false,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentTimeMillis(),  false,  field);	  alter(gval,    FieldUtils.currentTimeMillis(),    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  field,  false);	  mod(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
7	[BUG]  [BUGGY]  mod(gval,  field,  FieldUtils.currentTimeMillis(),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  FieldUtils.currentTimeMillis(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  FieldUtils.currentTimeMillis(),  true);	  mod(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
8	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  fields,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  fields,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  fields,  false);	  mod(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
9	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  +  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  fields);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  2);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  field),  true);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  field),  true);	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  field  +  1));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  field  +  1));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
15	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  field),  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  field),  false);	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
16	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  2);	  gval.set(Calendar.MILLISECOND,    -1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
17	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getValue(),  field),  false);	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getValue(),  field));	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
19	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(getValue(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(getValue(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(getValue(),  field),  true);	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
20	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getMillis(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getMillis(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getMillis(),  field),  true);	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
21	[BUG]  [BUGGY]  gval.setMillis(getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis()  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis()  +  1);	  gval.setMillis(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0L  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0L  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0L  +  1);	  gval.set(Calendar.MILLISECOND,    0L);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  gval.setChronology(getChronology());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setChronology(getChronology());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setChronology(getChronology());	  gval.setTime(getChronology());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
24	[BUG]  [BUGGY]  gval.setTime(getStartFinal());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(getStartFinal());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(getStartFinal());	  gval.setTime(getChronology());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
25	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0],  field);	  Calendar    gval    =    Calendar.getInstance(fields[0]);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
26	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0]  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0]  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0]  -  1);	  Calendar    gval    =    Calendar.getInstance(fields[0]);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
27	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[1]);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[1]);	  Calendar    gval    =    Calendar.getInstance(fields[0]);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
28	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0]  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0]  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0]  +  1);	  Calendar    gval    =    Calendar.getInstance(fields[0]);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
29	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeMultiply(field)+  1);	  alter(gval,    FieldUtils.safeMultiply(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.SEMI_MONTH,  field,  false);	  alter(gval,    FieldUtils.SEMI_MONTH,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
31	[BUG]  [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  fields,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  fields,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.SEMI_MONTH,  fields,  false);	  alter(gval,    FieldUtils.SEMI_MONTH,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
32	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field));	  mod(gval,    FieldUtils.safeAdd(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field)+  1);	  mod(gval,    FieldUtils.safeAdd(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  true,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  true,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  true,  field);	  mod(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeNegate(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeNegate(field));	  mod(gval,    FieldUtils.safeNegate(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
36	[BUG]  [BUGGY]  gval.setTime(field,  date);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(field,  date);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(field,  date);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  gval.setTime(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(date,  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(date,  field  +  1);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  gval.setTime(year,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(year,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(year,  field);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  alter(gval,  field,  FieldUtils.currentTimeMillis(),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  FieldUtils.currentTimeMillis(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  FieldUtils.currentTimeMillis(),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  fields,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  fields,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentTimeMillis(),  fields,  false);	  alter(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  alter(gval,  field.currentTimeMillis(),  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field.currentTimeMillis(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field.currentTimeMillis(),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  mod(gval,  field,  true,  cal1.get(field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  true,  cal1.get(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  true,  cal1.get(field));	  mod(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  mod(gval,  field,  false,  cal2.get(field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  false,  cal2.get(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  false,  cal2.get(field));	  mod(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  mod(gval,  field,  false,  cal1.get(field  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  false,  cal1.get(field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  false,  cal1.get(field  +  1));	  mod(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field),  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field),  false);	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
46	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  false));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  false));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  false));	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  true));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  true));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  true));	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  true));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  true));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field,  true));	  mod(gval,    FieldUtils.safeMultiply(field,    false));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
49	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field,  false),  field);	  mod(gval,    FieldUtils.safeMultiply(field,    false));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
50	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  cal1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field,  false),  cal1);	  mod(gval,    FieldUtils.safeMultiply(field,    false));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
51	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field  +  2);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field  +  2);	  gval.setMillis(getMillis(),    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
52	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field  *  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field  *  1);	  gval.setMillis(getMillis(),    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field  +  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field  +  3);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field  +  3);	  gval.setMillis(getMillis(),    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  alter(gval,  field,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  FieldUtils.safeMultiply(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  FieldUtils.safeMultiply(field));	  alter(gval,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeAdd(field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeAdd(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeAdd(field));	  alter(gval,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
56	[BUG]  [BUGGY]  modify(gval,  field,  true,  cal1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  true,  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  true,  cal1);	  modify(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  modify(gval,  field,  false,  cal2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  false,  cal2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  false,  cal2);	  modify(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field,  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field,  false);	  gval.setMillis(getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field,  true);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field,  true);	  gval.setMillis(getMillis(),    field);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
60	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  true,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  true,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentTimeMillis(),  true,  field);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  +  1);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
62	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  1);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
63	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field,  false);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  fields[0],  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  fields[0],  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  fields[0],  field);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
65	[BUG]  [BUGGY]  alter(gval,  field,  true,  cal1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  true,  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  true,  cal1);	  alter(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  alter(gval,  field,  false,  cal2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  false,  cal2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  false,  cal2);	  alter(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  gval.set(0,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(0,  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(0,  field  +  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  gval.set(0,  field,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(0,  field,  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(0,  field,  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  gval.set(0,  field,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(0,  field,  2);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(0,  field,  2);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  mod(gval,  field,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  this);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  this);	  mod(gval,    field,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
71	[BUG]  [BUGGY]  mod(gval,  field,  0,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  0,  null);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  0,  null);	  mod(gval,    field,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
72	[BUG]  [BUGGY]  mod(gval,  field,  null,  cal1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  null,  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  null,  cal1);	  mod(gval,    field,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
73	[BUG]  [BUGGY]  mod(gval,  field,  null,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  null,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  null,  0);	  mod(gval,    field,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
74	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  3);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  3);	  gval.set(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field);	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
76	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MONTH);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MONTH);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.MONTH);	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
77	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.YEAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.YEAR);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.YEAR);	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
78	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  false);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  true);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  true);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  1);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  field);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  mod(gval,  field,  FieldUtils.currentTimeMillis(),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  FieldUtils.currentTimeMillis(),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  FieldUtils.currentTimeMillis(),  false);	  mod(gval,    FieldUtils.currentTimeMillis(),    false);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
83	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field),  true);	  mod(gval,    FieldUtils.safeAdd(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
84	[BUG]  [BUGGY]  gval.setTime(day);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(day);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(day);	  gval.setTime(year);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  -  1);	  Calendar    gval    =    Calendar.getInstance(fields[0],    fields[1]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1]  +  1);	  Calendar    gval    =    Calendar.getInstance(fields[0],    fields[1]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1],  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1],  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields[0],  fields[1],  field);	  Calendar    gval    =    Calendar.getInstance(fields[0],    fields[1]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field),  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field),  field  +  1);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
89	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field),  field,  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field),  field,  false);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
90	[BUG]  [BUGGY]  gval  =  Calendar.getInstance(field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval  =  Calendar.getInstance(field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval  =  Calendar.getInstance(field);	  gval    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gval    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  gval  =  Calendar.getInstance();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  gval  =  Calendar.getInstance();  }  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	if(field  ==  null)  {  gval  =  Calendar.getInstance();  }  else  {  gval  =  Calendar.getInstance();  }	  gval    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field));	  mod(gval,    FieldUtils.safeMultiply(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
94	[BUG]  [BUGGY]  gval.setMillis(getMillis(),  field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis(),  field  +  1,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis(),  field  +  1,  field);	  gval.setTime(getMillis(),    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
95	[BUG]  [BUGGY]  gval.setMillis(getMillis()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis()  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis()  -  1);	  gval.setMillis(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeMultiply(field)+  1,  true);	  alter(gval,    FieldUtils.safeMultiply(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
98	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  date));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field,  date));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field,  date));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  999);	  gval.set(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
101	[BUG]  [BUGGY]  alter(gval,  FieldUtils.getTimeMillis(field),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.getTimeMillis(field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.getTimeMillis(field),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
102	[BUG]  [BUGGY]  alter(gval,  FieldUtils.getInstance(),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.getInstance(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.getInstance(),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
103	[BUG]  [BUGGY]  alter(gval,  FieldUtils.separatorChar(),  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.separatorChar(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.separatorChar(),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  gval.setMillis(getSecondMillis());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getSecondMillis());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getSecondMillis());	  gval.setTime(getMillis()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
105	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  DateTimeConstants.DATE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  DateTimeConstants.DATE);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  DateTimeConstants.DATE);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
106	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(FieldType.DATE,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(FieldType.DATE,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(FieldType.DATE,  field);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
107	[BUG]  [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  fields,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  fields,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.SEMI_MONTH,  fields,  true);	  alter(gval,    FieldUtils.SEMI_MONTH,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
108	[BUG]  [BUGGY]  alter(gval,  field,  FieldUtils.SEMI_MONTH,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  FieldUtils.SEMI_MONTH,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  FieldUtils.SEMI_MONTH,  true);	  alter(gval,    FieldUtils.SEMI_MONTH,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
109	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field,  false));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field,  false));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field,  false));	  mod(gval,    FieldUtils.safeMultiply(field,    false));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
110	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  fields,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  fields,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  fields,  true);	  mod(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
111	[BUG]  [BUGGY]  gval.setTime(round);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(round);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(round);	  gval.setTime(year);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field),  date);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field),  date);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
113	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field)+  1,  false);	  mod(gval,    FieldUtils.safeAdd(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  gval.setTime(getCalendar());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(getCalendar());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(getCalendar());	  gval.setTime(getChronology());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
115	[BUG]  [BUGGY]  gval.setTime(getLocale());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(getLocale());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(getLocale());	  gval.setTime(getChronology());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
116	[BUG]  [BUGGY]  gval.set(0,  field,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(0,  field,  false);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(0,  field,  false);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
117	[BUG]  [BUGGY]  gval.setTime(round(date,  field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(round(date,  field));  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(round(date,  field));	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  alter(gval,  field,  false,  cal1.get(field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  false,  cal1.get(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  false,  cal1.get(field));	  modify(gval,    field,    false,    cal1.get(field));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
119	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  fields,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentTimeMillis(),  fields,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentTimeMillis(),  fields,  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  mod(gval,  FieldUtils.getTimeMillis(field),  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.getTimeMillis(field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.getTimeMillis(field),  true);	  mod(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
121	[BUG]  [BUGGY]  mod(gval,  FieldUtils.getInstance(),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.getInstance(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.getInstance(),  true);	  mod(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
122	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(fields,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(fields,  field);	  Calendar    gval    =    Calendar.getInstance(fields[0]);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
123	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field  +  1);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
124	[BUG]  [BUGGY]  mod(gval,  field,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  field,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  field,  0);	  mod(gval,    field,    null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  alter(gval,  FieldUtils.getTimeMillis(field),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.getTimeMillis(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.getTimeMillis(field),  false);	  alter(gval,    FieldUtils.currentTimeMillis(),    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
126	[BUG]  [BUGGY]  alter(gval,  FieldUtils.getInstance(),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.getInstance(),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.getInstance(),  false);	  alter(gval,    FieldUtils.currentTimeMillis(),    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
127	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(TimeZone.getDefault());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(TimeZone.getDefault());	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
128	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)+  1,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field)+  1,  true);	  mod(gval,    FieldUtils.safeAdd(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
129	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  -  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
130	[BUG]  [BUGGY]  modify(gval,  field,  false,  cal1,  cal2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  modify(gval,  field,  false,  cal1,  cal2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	modify(gval,  field,  false,  cal1,  cal2);	  modify(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
131	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field)+  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field)+  1);	  mod(gval,    FieldUtils.safeMultiply(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
132	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field)+  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeMultiply(field)+  1,  false);	  alter(gval,    FieldUtils.safeMultiply(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field)+  1,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(),  field)+  1,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getValue(),  field)+  1,  true);	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getFieldType(),  field),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getFieldType(),  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getFieldType(),  field),  true);	  mod(gval,    FieldUtils.safeAdd(getValue(),    field),    true);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field,  null);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  field,  null);	  mod(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
136	[BUG]  [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.currentTimeMillis(),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.currentTimeMillis(),  field);	  mod(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
137	[BUG]  [BUGGY]  alter(gval,  field,  false,  cal1,  cal2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  field,  false,  cal1,  cal2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  field,  false,  cal1,  cal2);	  alter(gval,    field,    false,    cal1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  gval.setMillis(getMillis();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setMillis(getMillis();  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setMillis(getMillis();	  gval.setTime(getMillis()    +    1);    	non-compiled	[CE]  ')'  expected	20	None	replace
139	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  *  DateTimeConstants.MILLISECOND);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  *  DateTimeConstants.MILLISECOND);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  alter(gval,  FieldUtils.separatorChar(),  field,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.separatorChar(),  field,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.separatorChar(),  field,  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
141	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)-  1,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)-  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field)-  1,  false);	  mod(gval,    FieldUtils.safeAdd(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
142	[BUG]  [BUGGY]  gval.set(getChronology());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(getChronology());  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(getChronology());	  gval.setTime(getChronology());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
143	[BUG]  [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  RANGE_WEEK_RELATIVE,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.SEMI_MONTH,  RANGE_WEEK_RELATIVE,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.SEMI_MONTH,  RANGE_WEEK_RELATIVE,  true);	  alter(gval,    FieldUtils.SEMI_MONTH,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
144	[BUG]  [BUGGY]  gval.set(0,  field  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.set(0,  field  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.set(0,  field  -  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
145	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeMultiply(field,  false),  c);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeMultiply(field,  false),  c);	  mod(gval,    FieldUtils.safeMultiply(field,    false));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
146	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field),  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeMultiply(field),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeMultiply(field),  0);	  alter(gval,    FieldUtils.safeMultiply(field));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
147	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(field)),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(getValue(field)),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(getValue(field)),  false);	  mod(gval,    FieldUtils.safeNegate(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
148	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentSecond(),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentSecond(),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentSecond(),  true);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  alter(gval,  FieldUtils.currentMillis(),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.currentMillis(),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.currentMillis(),  false);	  alter(gval,    FieldUtils.currentTimeMillis(),    true);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
150	[BUG]  [BUGGY]  alter(gval,  FieldUtils.safeAdd(field),  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  alter(gval,  FieldUtils.safeAdd(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	alter(gval,  FieldUtils.safeAdd(field),  false);	  alter(gval,    FieldUtils.safeMultiply(field),    false);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
151	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  fields);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  fields);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  fields);	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
152	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field  +  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.MILLISECOND,  field  +  1);	  Calendar    gval    =    Calendar.getInstance(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
153	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  -  1);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  field  -  1);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  this.field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  this.field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(Calendar.DATE,  this.field);	  Calendar    gval    =    Calendar.getInstance(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  gval  =  Calendar.getInstance(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval  =  Calendar.getInstance(Calendar.MILLISECOND);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval  =  Calendar.getInstance(Calendar.MILLISECOND);	  gval    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
156	[BUG]  [BUGGY]  gval  =  Calendar.getInstance(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval  =  Calendar.getInstance(Calendar.DATE,  field);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval  =  Calendar.getInstance(Calendar.DATE,  field);	  gval    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
157	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  this.calendarField);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  gval.setTime(new  Date(field),  this.calendarField);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	gval.setTime(new  Date(field),  this.calendarField);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
158	[BUG]  [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  this.calendarField);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  Calendar  gval  =  Calendar.getInstance(field,  this.calendarField);  [BUGGY]      modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	Calendar  gval  =  Calendar.getInstance(field,  this.calendarField);	  Calendar    gval    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
159	[BUG]  [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)-  1,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);      [BUGGY]  mod(gval,  FieldUtils.safeAdd(field)-  1,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	mod(gval,  FieldUtils.safeAdd(field)-  1,  true);	  mod(gval,    FieldUtils.safeAdd(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
