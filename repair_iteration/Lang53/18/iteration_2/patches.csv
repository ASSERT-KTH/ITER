bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  time  =  val.get(Calendar.MILLISECOND  +  1);	  int    time    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND,  seconds);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND,  seconds);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  time  =  val.get(Calendar.MILLISECOND,  seconds);	  int    time    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  time  =  val.get(Calendar.MILLISECOND)-  1;	  int    time    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  minutes  =  val.get(Calendar.MINUTE,  seconds);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  minutes  =  val.get(Calendar.MINUTE,  seconds);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	minutes  =  val.get(Calendar.MINUTE,  seconds);	  minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  minutes  =  val.get(Calendar.MINUTE  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  minutes  =  val.get(Calendar.MINUTE  +  1);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	minutes  =  val.get(Calendar.MINUTE  +  1);	  minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  minutes  =  val.get(Calendar.MINUTE,  time);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  minutes  =  val.get(Calendar.MINUTE,  time);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	minutes  =  val.get(Calendar.MINUTE,  time);	  minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND,  time);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND,  time);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND,  time);	  int    seconds    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  time  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MINUTE,  time  -  1);	  int    seconds    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  time  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MINUTE,  time  +  1);	  int    seconds    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  field);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MINUTE,  field);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MINUTE,  field);	  int    seconds    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  1;	  int    field    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  +  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND  +  2);	  int    field    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  1);	  int    field    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  millisecs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  millisecs);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  millisecs);	  int    field    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  3);	  int    field    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND)+  1;	  int    millisecs    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND  +  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND  +  2);	  int    millisecs    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)+  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE)+  1;	  int    minutes    =    val.get(Calendar.MINUTE    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND  -  1);	  int    seconds    =    val.get(Calendar.MINUTE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
20	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.DATE  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.DATE  -  1);	  int    seconds    =    val.get(Calendar.MINUTE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
21	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  field  -  1);	  int    minutes    =    val.get(Calendar.MINUTE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
22	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND)/  1;	  int    millisecs    =    val.get(Calendar.MILLISECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)-  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND)-  2;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND)-  2;	  int    millisecs    =    val.get(Calendar.MILLISECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  1);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  3);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  1000);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  1000);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  1000);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  field);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)/  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND)/  1;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  2;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND)+  2;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)+  3;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND)+  3;	  int    seconds    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  time  +  1);	  int    minutes    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  time  -  1);	  int    minutes    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  1);	  int    minutes    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  field  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  field  +  1);	  int    minutes    =    val.get(Calendar.MINUTE,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  millisecs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  millisecs);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  millisecs);	  int    minutes    =    val.get(Calendar.MINUTE,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND)+  1;	  int    seconds    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND  +  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND  +  2);	  int    seconds    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND)-  1;	  int    field    =    val.get(Calendar.MILLISECOND    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)/  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE)/  1;	  int    minutes    =    val.get(Calendar.MINUTE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  2;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE)-  2;	  int    minutes    =    val.get(Calendar.MINUTE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE)-  1L;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE)-  1L;	  int    minutes    =    val.get(Calendar.MINUTE)-    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND  +  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND  +  2);	  int    seconds    =    val.get(Calendar.SECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.SECOND)-  2;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.SECOND)-  2;	  int    seconds    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  time);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  time);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.DATE,  time);	  int    seconds    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  field);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.DATE,  field);	  int    seconds    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.DATE,  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.DATE,  1);	  int    seconds    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int    seconds    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND,  field);	  int    seconds    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND,  1);	  int    seconds    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int    seconds    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  millisecs  =  val.get(Calendar.MILLISECOND,  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  millisecs  =  val.get(Calendar.MILLISECOND,  2);	  int    millisecs    =    val.get(Calendar.MILLISECOND,    seconds);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.DATE)-  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.DATE)-  1;	  int    seconds    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  time  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  time  =  val.get(Calendar.MILLISECOND  -  1);	  int    time    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  minutes  =  val.get(Calendar.MINUTE  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  minutes  =  val.get(Calendar.MINUTE  -  1);  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	minutes  =  val.get(Calendar.MINUTE  -  1);	  minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  minutes  =  val.get(Calendar.MINUTE)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  minutes  =  val.get(Calendar.MINUTE)-  1;  [BUGGY]      time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	minutes  =  val.get(Calendar.MINUTE)-  1;	  minutes    =    val.get(Calendar.MINUTE);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  -  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND  -  2);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND  -  2);	  int    field    =    val.get(Calendar.MILLISECOND    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
61	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  minutes);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  minutes);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  minutes);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  this.field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  this.field);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  this.field);	  int    minutes    =    val.get(Calendar.MINUTE,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  seconds  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  seconds  =  val.get(Calendar.MILLISECOND)-  1;	  int    seconds    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  int  seconds  =  val.get(Calendar.SECOND);      [BUGGY]  int  minutes  =  val.get(Calendar.MINUTE,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      if  (!done  &&  (!round  ||  seconds  <  30))  {  time  =  time  -  (seconds  *  1000L);  if  (field  ==  Calendar.MINUTE)  {  done  =  true;  }  }  int  minutes  =  val.get(Calendar.MINUTE);  if  (!done  &&  (!round  ||  minutes  <  30))  {  time  =  time  -  (minutes  *  60000L);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	int  minutes  =  val.get(Calendar.MINUTE,  time  *  DateTimeConstants.MILLISECOND);	  int    minutes    =    val.get(Calendar.MINUTE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
