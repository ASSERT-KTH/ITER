bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  val.add(fields[i][0],  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  3);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  3);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
2	[BUG]  [BUGGY]  val.add(fields[i][0],  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  2);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  2);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
3	[BUG]  [BUGGY]  val.add(fields[i][0],  1);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  1);  break;  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  1);  break;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
4	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
5	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
6	[BUG]  [BUGGY]  switch(fields[offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offsetSet)  {	  switch(offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
7	[BUG]  [BUGGY]  switch(fields.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields.length)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields.length)  {	  switch(offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
8	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  offset);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
9	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  round);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
10	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  1);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
11	[BUG]  [BUGGY]  switch(fields[offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[offset)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset)  {	  switch(offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
12	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
13	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND  +  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
14	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
15	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  1);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
16	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  offset  =  val.get(Calendar.DATE);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE);	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
17	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
18	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
19	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1);	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
20	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset);	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
21	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1;	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
22	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  1);	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
23	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
24	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
25	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
26	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
27	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0]    {    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
28	[BUG]  [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  Calendar.DATE)  {	  switch(fields[i][0]    {    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
29	[BUG]  [BUGGY]  switch(fields[i][0]!=  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]!=  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]!=  Calendar.DATE)  {	  switch(fields[i][0]    {    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
30	[BUG]  [BUGGY]  switch(val.get(Calendar.DATE))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(val.get(Calendar.DATE))  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.DATE))  {	  switch(fields[i].get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
31	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)+  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i].get(Calendar.DATE)+  1)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)+  1)  {	  switch(fields[i].get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
32	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)-  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i].get(Calendar.DATE)-  1)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)-  1)  {	  switch(fields[i].get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
33	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  offset);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
34	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  1);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
35	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE)-  1;	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
36	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE  +  1);	      int    field    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
37	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)-  1;	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
38	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
39	[BUG]  [BUGGY]  if(offsetSet  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
40	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
41	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
42	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
43	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  offset);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND  +  1);	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
46	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1;	      int[][]    fields    =    val.get(Calendar.SECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
47	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY  +  1);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  1);	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
50	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1;	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
51	[BUG]  [BUGGY]  switch(fields[i][0]  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  {	  switch(fields[i][0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
52	[BUG]  [BUGGY]  switch(fields)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields)  {	  switch(offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
53	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
54	[BUG]  [BUGGY]  switch(fields[i][0]  >>  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  >>  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >>  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
55	[BUG]  [BUGGY]  switch(fields[i][0]  >=  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  >=  Calendar.DATE)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >=  Calendar.DATE)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
56	[BUG]  [BUGGY]  switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
57	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  1;	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
58	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE  +  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE  +  1);	      int[][]    fields    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
59	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1);	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
60	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1;	      int    field    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
61	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1;	      int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
62	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
63	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  fields.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]  &  1  <  <  fields.length)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  fields.length)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
64	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
65	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1;	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
66	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  -  1)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.DATE  -  1)  {	  switch(fields[i][0]    {    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
67	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  break;  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  break;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
68	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  }  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
69	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
70	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
71	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
72	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)||  offsetSet)  {	  switch(fields[i].get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
73	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
74	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
75	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
76	[BUG]  [BUGGY]  if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	      if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
77	[BUG]  [BUGGY]  switch(fields[i][1]),  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][1]),  offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]),  offsetSet)  {	  switch(fields[i][1])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
78	[BUG]  [BUGGY]  Switch(fields[i][0])  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  Switch(fields[i][0])  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0])  {	  switch(fields[i][1])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
79	[BUG]  [BUGGY]  val.add(fields[i][0],  Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  val.add(fields[i][0],  Calendar.DATE);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  Calendar.DATE);	      val.add(fields[i][0],    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
80	[BUG]  [BUGGY]  switch(fields[i][0]),  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  switch(fields[i][0]),  offsetSet)  {  [BUGGY]    case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]),  offsetSet)  {	  switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
81	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]    val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);  [BUGGY]    switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  round);	      int[][]    fields    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
