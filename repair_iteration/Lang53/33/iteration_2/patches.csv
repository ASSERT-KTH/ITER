bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0]  &  DateUtils.SEMI_MONTH)  {	  Switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
2	[BUG]  [BUGGY]  Switch(fields[i][0]),  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0]),  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0]),  offsetSet)  {	  Switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
3	[BUG]  [BUGGY]  Switch(fields[i][0],  fieldSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0],  fieldSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0],  fieldSet)  {	  Switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
4	[BUG]  [BUGGY]  switch(fields.length  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields.length  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields.length  -  1)  {	  switch(fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
6	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  roundUp);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
7	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
8	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
9	[BUG]  [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);	  switch(fields[i][0]    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
10	[BUG]  [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:	  switch(fields[i][0]    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
11	[BUG]  [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0]    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
12	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
13	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
14	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.SECOND)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][0]  ==  Calendar.SECOND)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.SECOND)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
15	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
16	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
17	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
18	[BUG]  [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    >    0)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
19	[BUG]  [BUGGY]  if(offset  <  1)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    >    0)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
20	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)/  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
21	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
22	[BUG]  [BUGGY]  val.add(fields[i][0],  Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][0],  Calendar.DATE,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  Calendar.DATE,  1);	  val.add(fields[i][0],    Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
23	[BUG]  [BUGGY]  switch(fields[i][0]),  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]),  roundUp)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]),  roundUp)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
24	[BUG]  [BUGGY]  switch(fields[i][0]),  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]),  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]),  offset)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
25	[BUG]  [BUGGY]  switch(fields[i][0]),  round)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]),  round)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]),  round)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
26	[BUG]  [BUGGY]  switch(val.get(Calendar.DATE)+  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.DATE)+  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.DATE)+  1)  {	  switch(fields[i].get(Calendar.DATE)+    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
27	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)/  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)/  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)/  1)  {	  switch(fields[i].get(Calendar.DATE)+    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
28	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
29	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE  +  1);	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
30	[BUG]  [BUGGY]  switch(fields[offset  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset  -  1)  {	  switch(fields[offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
31	[BUG]  [BUGGY]  switch(fields[offset  +  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  +  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset  +  1)  {	  switch(fields[offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
32	[BUG]  [BUGGY]  switch(fields[offset  +  1])  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  +  1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset  +  1])  {	  switch(fields[offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
33	[BUG]  [BUGGY]  switch(fields[offset][0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset][0)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset][0)  {	  switch(fields[offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
34	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
35	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
36	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE,  1);	  offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
37	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE  +  1);	  offset    =    val.get(Calendar.DATE);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
38	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {	  switch(fields[i][1]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
39	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  2);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
40	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  3);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
41	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  0);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
42	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
43	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
44	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  +  1);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
45	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  0,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  0,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  0,  offset);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
46	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.SEMI_MONTH)  {	  switch(fields[i][0]    ==    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
47	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.MONTH)  {	  switch(fields[i][0]    ==    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
48	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
49	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
50	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  -  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  offset  -  1);	  int    field    =    val.get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
51	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  2);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
52	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  3);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
53	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0,  1);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
54	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
55	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
56	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
57	[BUG]  [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
58	[BUG]  [BUGGY]  switch(fields[offsetSet  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offsetSet  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offsetSet  -  1)  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
59	[BUG]  [BUGGY]  switch(fields[offsetSet  -  1])  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offsetSet  -  1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offsetSet  -  1])  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
60	[BUG]  [BUGGY]  switch(fields[i][1]  ==  Calendar.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  Calendar.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  Calendar.SEMI_MONTH)  {	  switch(fields[i][1]    ==    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
61	[BUG]  [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  Calendar.DATE  -  1)  {	  switch(fields[i][1]    ==    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
62	[BUG]  [BUGGY]  switch(val.get(Calendar.DATE)-  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.DATE)-  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.DATE)-  1)  {	  switch(val.get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
63	[BUG]  [BUGGY]  switch(val.get(Calendar.SECOND))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.SECOND))  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.SECOND))  {	  switch(val.get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
64	[BUG]  [BUGGY]  switch(val.get(Calendar.MONTH))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.MONTH))  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.MONTH))  {	  switch(val.get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
65	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0]    ==    Calendar.DATE    -    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
66	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE,  offset  -  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.DATE,  offset  -  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.DATE,  offset  -  1)  {	  switch(fields[i][0]    ==    Calendar.DATE    -    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
67	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  2);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  2);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  2);  break;	  case    DateUtils.SEMI_MONTH:    val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
68	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  3);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  3);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  3);  break;	  case    DateUtils.SEMI_MONTH:    val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
69	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
70	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
71	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
72	[BUG]  [BUGGY]  if(offsetSet)  {  if(fields[i][1]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  if(fields[i][1]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  if(fields[i][1]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
73	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
74	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offsetSet)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
75	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.SEMI_MONTH,  offset)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
76	[BUG]  [BUGGY]  switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  -  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
77	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  2);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
78	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0,  1);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
79	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  field);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
80	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0,  round);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
81	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE)/  1;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
82	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE)-  1  +  1;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
83	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE)-  2;	  int    field    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
84	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  2);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
85	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
86	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  fieldSet  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  fieldSet  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  fieldSet  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
87	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  2);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
88	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  3);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
89	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  0);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
90	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.SECOND)-  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.SECOND)-  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.SECOND)-  1)  {	  switch(fields[i].get(Calendar.DATE)-    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
91	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset!=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
92	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offsetSet)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
93	[BUG]  [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  DateUtils.SEMI_MONTH,  offset)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
94	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  2;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
95	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)/  1;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
96	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)/  1;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
97	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)-  1  +  1;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
98	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
99	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  offset  +  1);	  int    field    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
100	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  0,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  0,  offset);	  int    field    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
101	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  round);	  int    field    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
102	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  fieldSet.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  1  <  <  fieldSet.length)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  fieldSet.length)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
103	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  1  <  <  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  offsetSet)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
104	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  field.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  1  <  <  field.length)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  field.length)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
105	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)&&  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)&&  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)&&  offsetSet)  {	  switch(fields[i].get(Calendar.DATE)||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
106	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)||  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)||  roundUp)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)||  roundUp)  {	  switch(fields[i].get(Calendar.DATE)||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
107	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  <  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  <  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)||  offset  <  1)  {	  switch(fields[i].get(Calendar.DATE)||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
108	[BUG]  [BUGGY]  if(offset  <  0  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  0  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  0  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    ||    offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
109	[BUG]  [BUGGY]  if(offset  <  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    ||    offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
110	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  2;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
111	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
112	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)/  1;	  offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
113	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)-  1  +  1;	  offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
114	[BUG]  [BUGGY]  offset  =  val.get(Calendar.DATE)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  offset  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	offset  =  val.get(Calendar.DATE)-  2;	  offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
115	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	81	None	replace
116	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  round  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    round);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	81	None	replace
117	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  2);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  2);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
118	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  0);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
119	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  3);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
120	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
121	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  1;	  int[][]    fields    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
122	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE)+  1;	  int    field    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
123	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.MILLISECOND);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
124	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.MILLISECOND);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
125	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.MILLISECOND)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.MILLISECOND)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.MILLISECOND)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.MILLISECOND);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
126	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)/  1;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
127	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  2;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
128	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  offset  +  1);	  int[][]    fields    =    val.get(Calendar.SECOND    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
129	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
130	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  1);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
131	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  field);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
132	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  round);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
133	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
134	[BUG]  [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
135	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)+  1  +  1;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
136	[BUG]  [BUGGY]  val.add(fields[i][0],  3);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][0],  3);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  3);  break;	  val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
137	[BUG]  [BUGGY]  val.add(fields[i][0],  2);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  val.add(fields[i][0],  2);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	val.add(fields[i][0],  2);  break;	  val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
138	[BUG]  [BUGGY]  case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  val.add(fields[i][0],  1);  break;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  val.add(fields[i][0],  1);  break;  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.SEMI_MONTH)  {  val.add(fields[i][0],  1);  break;  }	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    break;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
139	[BUG]  [BUGGY]  case  DateUtils.DATE:  val.add(fields[i][0],  1);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.DATE:  val.add(fields[i][0],  1);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.DATE:  val.add(fields[i][0],  1);  break;	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    break;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
140	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offsetSet)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
141	[BUG]  [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  DateUtils.DAY_OF_MONTH,  offset)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
142	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  roundUp);	  int[][]    fields    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
143	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  roundUp);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
144	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)+  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)+  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
145	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  offset  +  1)-  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
146	[BUG]  [BUGGY]  Switch(fields[i][0]),  offsetSet  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0]),  offsetSet  =  false;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0]),  offsetSet  =  false;	  Switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
147	[BUG]  [BUGGY]  switch(fields[i][0]  -  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  -  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  -  offset)  {	  switch(fields[i][0]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
148	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  0);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
149	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  3);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  3);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
150	[BUG]  [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
151	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
152	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY  -  1  +  1);	  int    field    =    val.get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
153	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)-  1)||  offsetSet  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)-  1)||  offsetSet  >  0)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)-  1)||  offsetSet  >  0)  {	  switch(fields[i].get(Calendar.DATE)-    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
154	[BUG]  [BUGGY]  switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    ==    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
155	[BUG]  [BUGGY]  switch(fields[i][0]  ==  Calendar.SEMI)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  Calendar.SEMI)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  Calendar.SEMI)  {	  switch(fields[i][0]    ==    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
156	[BUG]  [BUGGY]  switch(fields[offset  -  1])  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset  -  1])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset  -  1])  {	  switch(fields[offset)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
157	[BUG]  [BUGGY]  switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >>  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
158	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  else  {  offset  =  val.get(Calendar.DATE)-  1;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
159	[BUG]  [BUGGY]  if(offset  >=  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  >=  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  >=  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
160	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  0,  1);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  0,  1);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  0,  1);  break;	  case    DateUtils.SEMI_MONTH:    val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
161	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
162	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (off  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (off  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (off	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
163	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.MILLISECOND);  }	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.MILLISECOND);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
164	[BUG]  [BUGGY]  switch(fields,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields,  offsetSet)  {	  switch(fields)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
165	[BUG]  [BUGGY]  switch(val.get(Calendar.DATE),  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.DATE),  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.DATE),  offsetSet)  {	  switch(val.get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
166	[BUG]  [BUGGY]  switch(val.get(Calendar.YEAR))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(val.get(Calendar.YEAR))  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(val.get(Calendar.YEAR))  {	  switch(val.get(Calendar.DATE))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
167	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  -1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  -1);	  int    field    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
168	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  round  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    round);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
169	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0);	  int[][]    fields    =    val.get(Calendar.DATE,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
170	[BUG]  [BUGGY]  Switch(fields[i][0]  ==  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0]  ==  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0]  ==  Calendar.DATE)  {	  switch(fields[i][0]    ==    Calendar.DATE    -    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
171	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  <  0)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)||  offset  <  0)  {	  switch(fields[i].get(Calendar.DATE)||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
172	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  +  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)||  offset  +  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)||  offset  +  1)  {	  switch(fields[i].get(Calendar.DATE)||    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
173	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
174	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  0,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  0,  offset);	  int[][]    fields    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
175	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
176	[BUG]  [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  16)  {  offset  -=  15;  }	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
177	[BUG]  [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
178	[BUG]  [BUGGY]  switch(fields[i][1]  >>  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  >>  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  >>  Calendar.DATE)  {	  switch(fields[i][0]    >>    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
179	[BUG]  [BUGGY]  switch(fields[i][1]!=  Calendar.DATE)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]!=  Calendar.DATE)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]!=  Calendar.DATE)  {	  switch(fields[i][0]!=    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
180	[BUG]  [BUGGY]  switch(fields[i][0]  &  1  <  <  fields.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  &  1  <  <  fields.length)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  &  1  <  <  fields.length)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
181	[BUG]  [BUGGY]  switch(fields[i][0]  ==  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==	  switch(fields[i][0]    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
182	[BUG]  [BUGGY]  switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >>  case  DateUtils.SEMI_MONTH:	  switch(fields[i][0]    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
183	[BUG]  [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset!=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
184	[BUG]  [BUGGY]  switch(fields[i][1]  {  case  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  {  case  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  {  case  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][1]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
185	[BUG]  [BUGGY]  switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  >>  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
186	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY  +  1)-  1;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
187	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  1  +  1;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
188	[BUG]  [BUGGY]  switch(fields[i][1]),  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]),  offset)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]),  offset)  {	  switch(fields[i][1]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
189	[BUG]  [BUGGY]  case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.DATE:  if(fields[i][0]  ==  Calendar.DATE)  {  val.add(fields[i][0],  1);  break;  }	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    break;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
190	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  12);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  12);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  12);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
191	[BUG]  [BUGGY]  switch(fields[i][0]  >>  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >>  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >>  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
192	[BUG]  [BUGGY]  switch(fields[i][0]  {  case  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  {  case  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  {  case  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
193	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
194	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >>	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
195	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
196	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)-  2;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
197	[BUG]  [BUGGY]  switch(fields[i][0]  ==  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  ==  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  ==  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
198	[BUG]  [BUGGY]  switch(fields[i][0]  <  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  <  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  <  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][0]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
199	[BUG]  [BUGGY]  switch(fields[i][1]  >>  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  >>  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  >>  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][1]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
200	[BUG]  [BUGGY]  switch(fields[i][1]  ==  DateUtils.DAY_OF_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  DateUtils.DAY_OF_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  DateUtils.DAY_OF_MONTH)  {	  switch(fields[i][1]    &    DateUtils.DAY_OF_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
201	[BUG]  [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE,  offsetSet)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  ==  Calendar.DATE,  offsetSet)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  ==  Calendar.DATE,  offsetSet)  {	  switch(fields[i][1]    ==    Calendar.DATE)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
202	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
203	[BUG]  [BUGGY]  switch(fields[i][1]),  round)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]),  round)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]),  round)  {	  switch(fields[i][1]),    offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
204	[BUG]  [BUGGY]  if(offset  <  1  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1  ||  offsetSet)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    ||    offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
205	[BUG]  [BUGGY]  Switch(fields[i][0]),  offsetSet  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  Switch(fields[i][0]),  offsetSet  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	Switch(fields[i][0]),  offsetSet  {	  Switch(fields[i][0])    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
206	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  ==  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  ==  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  }	  if(offsetSet    >    0)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
207	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  1  <  <  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  DateUtils.SEMI_MONTH)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
208	[BUG]  [BUGGY]  switch(fields[i][1]  &  1  <  <  calendarField.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  &  1  <  <  calendarField.length)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  &  1  <  <  calendarField.length)  {	  switch(fields[i][1]    &    1    <    <    fields.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
209	[BUG]  [BUGGY]  case  DateUtils.MONTH:  val.add(fields[i][0],  1);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.MONTH:  val.add(fields[i][0],  1);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.MONTH:  val.add(fields[i][0],  1);  break;	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    break;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
210	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  1);case  DateUtils.SEMI_MONTH:  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;	  case    DateUtils.SEMI_MONTH:    if(fields[i][0]    ==    Calendar.DATE)    {    val.add(fields[i][0],    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
211	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  2;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
212	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)-  3;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)-  3;	  int[][]    fields    =    val.get(Calendar.SECOND)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
213	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY,  round);	  int    field    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
214	[BUG]  [BUGGY]  switch(fields[offset])  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[offset])  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[offset])  {	  switch(fields[offsetSet)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
215	[BUG]  [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  Calendar.DATE);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  Calendar.DATE);  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	case  DateUtils.SEMI_MONTH:  val.add(fields[i][0],  Calendar.DATE);  break;	  case    DateUtils.SEMI_MONTH:    val.add(fields[i][0],    1);    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
216	[BUG]  [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  offset  =  val.get(Calendar.DATE)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  offset  =  val.get(Calendar.DATE)-  1;	  fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
217	[BUG]  [BUGGY]  switch(fields[i].get(Calendar.DATE)%  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i].get(Calendar.DATE)%  1)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i].get(Calendar.DATE)%  1)  {	  switch(fields[i].get(Calendar.DATE)+    1)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
218	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  time);	  int[][]    fields    =    val.get(Calendar.SECOND,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
219	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR_OF_DAY)+  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR_OF_DAY)+  2;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
220	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  2;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY)-  2;	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
221	[BUG]  [BUGGY]  if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet  >  0)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
222	[BUG]  [BUGGY]  if(offsetSet  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offsetSet  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offsetSet  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(fields[i][0]    ==    Calendar.DATE)    {    if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
223	[BUG]  [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
224	[BUG]  [BUGGY]  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
225	[BUG]  [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][1]  {  case  DateUtils.SEMI_MONTH:  break;	  switch(fields[i][1]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
226	[BUG]  [BUGGY]  if(offset  <  1  ||  offsetSet  >  fields.length)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(offset  <  1  ||  offsetSet  >  fields.length)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(offset  <  1  ||  offsetSet  >  fields.length)  {  if(fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE);  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
227	[BUG]  [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  {  case  DateUtils.SEMI_MONTH:  break;	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
228	[BUG]  [BUGGY]  switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {  [BUGGY]      case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	switch(fields[i][0]  >=  DateUtils.SEMI_MONTH)  {	  switch(fields[i][0]    &    DateUtils.SEMI_MONTH)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
229	[BUG]  [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(fields[i][1]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
230	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE,  this.offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE,  this.offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE,  this.offset);	  int    field    =    val.get(Calendar.DATE,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
231	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1,  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.DATE  +  1,  offset);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.DATE  +  1,  offset);	  int    field    =    val.get(Calendar.DATE    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
232	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.HOUR)-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int  field  =  val.get(Calendar.HOUR)-  1;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int  field  =  val.get(Calendar.HOUR)-  1;	  int    field    =    val.get(Calendar.HOUR_OF_DAY)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
233	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  roundUp  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    offset    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
234	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  3;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  3;  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  3;	  int[][]    fields    =    val.get(Calendar.DATE)-    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
235	[BUG]  [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][1]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset!=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
236	[BUG]  [BUGGY]  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]!=  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset!=  15)  {  offset  -=  15;  }	  if(offsetSet)    {    if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset!=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
237	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	int[][]  fields  =  val.get(Calendar.HOUR_OF_DAY,  round);	  int[][]    fields    =    val.get(Calendar.HOUR_OF_DAY,    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
238	[BUG]  [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      val.add(fields[i][0],  1);  }  }  return;  }  }  int  offset  =  0;  boolean  offsetSet  =  false;        [BUGGY]  if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }  [BUGGY]      switch  (field)  {  case  DateUtils.SEMI_MONTH:  if  (fields[i][0]  ==  Calendar.DATE)  {    offset  =  val.get(Calendar.DATE)  -  1;    if  (offset  >=  15)  {  offset  -=  15;  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	if(fields[i][0]  ==  Calendar.DATE  ||  fields[i][0]  ==  Calendar.DATE)  {  offset  =  val.get(Calendar.DATE)-  1;  if  (offset  >=  15)  {  offset  -=  15;  }	  if(fields[i][0]    ==    Calendar.DATE)    {    offset    =    val.get(Calendar.DATE)-    1;    if    (offset    >=    15)    {    offset    -=    15;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
