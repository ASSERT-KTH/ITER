bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!doneSet  &&  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!doneSet  &&  roundUp)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!doneSet  &&  roundUp)  {	  if    (!offsetSet    &&    roundUp)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
2	[BUG]  [BUGGY]  if  (offsetSet  ||  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (offsetSet  ||  roundUp)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (offsetSet  ||  roundUp)  {	  if    (!offsetSet    &&    roundUp)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
3	[BUG]  [BUGGY]  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    roundUp    =    offset    >    ((    max    -    min)    /    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
4	[BUG]  [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  max  -  min;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  max  -  min;  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  max  -  min;	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    roundUp    =    offset    >    ((    max    -    min)    /    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
5	[BUG]  [BUGGY]  offset  =  val.get(fields[i][0])-  min;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  offset  =  val.get(fields[i][0])-  min;  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	offset  =  val.get(fields[i][0])-  min;	      int    min    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
6	[BUG]  [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.getIntValue(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;	      int    min    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
7	[BUG]  [BUGGY]  int  min  =  val.get(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.get(fields[i][0]);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.get(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
8	[BUG]  [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.getActualMinimum(fields[i][0]  +  1);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.getActualMinimum(fields[i][0]  +  1);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
9	[BUG]  [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.getIntValue(fields[i][0]);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.getIntValue(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
10	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  <  =  0)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  <  =  0)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
11	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  >=  0)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  >=  0)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
12	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  ==  0)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  ==  0)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
13	[BUG]  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  1);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	val.set(fields[i][0],  val.get(fields[i][0])/  1);	      val.set(fields[i][0],    val.get(fields[i][0])-    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
14	[BUG]  [BUGGY]  if(fields[i][0]!=  val.get(fields[i][0]))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  val.get(fields[i][0]))  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  val.get(fields[i][0]))  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
15	[BUG]  [BUGGY]  if(fields[i][0]  ==  val.get(fields[i][0]))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]  ==  val.get(fields[i][0]))  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]  ==  val.get(fields[i][0]))  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
16	[BUG]  [BUGGY]  if(fields[i][0]  ==  val.get(fields[i][0])-  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]  ==  val.get(fields[i][0])-  offset)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]  ==  val.get(fields[i][0])-  offset)  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
17	[BUG]  [BUGGY]  int  min  =  val.get(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.get(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.get(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
18	[BUG]  [BUGGY]  if(fields[i][0]!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  null)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  null)  {	  if    (offset    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
19	[BUG]  [BUGGY]  if(fields[i][0]  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]  ==  null)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]  ==  null)  {	  if    (offset    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
20	[BUG]  [BUGGY]  if  (offset  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (offset  <  0)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (offset  <  0)  {	  if    (offset    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
21	[BUG]  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  2);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	val.set(fields[i][0],  val.get(fields[i][0])/  2);	      val.set(fields[i][0],    val.get(fields[i][0])-    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
22	[BUG]  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])-  offset,  roundUp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])-  offset,  roundUp);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	val.set(fields[i][0],  val.get(fields[i][0])-  offset,  roundUp);	      val.set(fields[i][0],    val.get(fields[i][0])-    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
23	[BUG]  [BUGGY]  if(fields[i][0]!=  val.get(fields[i][0])-  offset)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  val.get(fields[i][0])-  offset)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  val.get(fields[i][0])-  offset)  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
24	[BUG]  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])/  offset);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	val.set(fields[i][0],  val.get(fields[i][0])/  offset);	      val.set(fields[i][0],    val.get(fields[i][0])-    offset);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
25	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  ||  offset  >  fields.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  ||  offset  >  fields.length)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  ||  offset  >  fields.length)  {	  if    (!offsetSet    &&    roundUp)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
26	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  >  6)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  >  6)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  >  6)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
27	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  >  1)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  >  1)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  >  1)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
28	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  fields.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  fields.length)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  fields.length)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
29	[BUG]  [BUGGY]  int  min  =  val.getActualMaximum(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  int  min  =  val.getActualMaximum(fields[i][0]);  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	int  min  =  val.getActualMaximum(fields[i][0]);	      int    min    =    val.getActualMinimum(fields[i][0]);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
30	[BUG]  [BUGGY]  if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    roundUp    =    offset    >    ((    max    -    min)    /    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
31	[BUG]  [BUGGY]  if(offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    roundUp    =    offset    >    ((    max    -    min)    /    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
32	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
33	[BUG]  [BUGGY]  if(fields[i][0]!=  field)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  field)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  field)  {	  if    (offset    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
34	[BUG]  [BUGGY]  if(offset  >=  0)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(offset  >=  0)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(offset  >=  0)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  }	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    roundUp    =    offset    >    ((    max    -    min)    /    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
35	[BUG]  [BUGGY]  if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  field)  {  int  min  =  val.getActualMinimum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    min    =    val.getActualMinimum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
36	[BUG]  [BUGGY]  if(fields[i][0]!=  Calendar.HOUR_OF_DAY)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  Calendar.HOUR_OF_DAY)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  Calendar.HOUR_OF_DAY)  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
37	[BUG]  [BUGGY]  if(offset!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(offset!=  0)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(offset!=  0)  {	  if    (offset    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
38	[BUG]  [BUGGY]  if  (!done  &&  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!done  &&  roundUp)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!done  &&  roundUp)  {	  if    (!offsetSet    &&    roundUp)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
39	[BUG]  [BUGGY]  if  (!offsetSet  ||  roundUp)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  ||  roundUp)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  ||  roundUp)  {	  if    (!offsetSet    &&    roundUp)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
40	[BUG]  [BUGGY]  if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }  [BUGGY]    if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]  ==  field)  {  int  min  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])-  min;  }	      int    min    =    val.getActualMaximum(fields[i][0]);    offset    =    val.get(fields[i][0])-    min;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
41	[BUG]  [BUGGY]  if(fields[i][0]!=  Calendar.DECEMBER)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if(fields[i][0]!=  Calendar.DECEMBER)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if(fields[i][0]!=  Calendar.DECEMBER)  {	  if    (offset    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
42	[BUG]  [BUGGY]  if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  min)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]      offset  =  val.get(Calendar.HOUR_OF_DAY);  if  (offset  >=  12)  {  offset  -=  12;  }  roundUp  =  offset  >  6;  offsetSet  =  true;  }  break;  }    [BUGGY]  if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  min)  {  [BUGGY]    int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	if  (!offsetSet  &&  roundUp  >  0  &&  offset  <  min)  {	  if    (!offsetSet    &&    roundUp    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
