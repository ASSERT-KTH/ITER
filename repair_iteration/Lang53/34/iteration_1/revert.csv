projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMinimum(fields[i][0]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])-offset);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMaximum(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offset==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offset>=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!doneSet&&roundUp){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offsetSet||roundUp){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>max-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729offset=val.get(fields[i][0])-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getIntValue(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.get(fields[i][0]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMinimum(fields[i][0]+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getIntValue(fields[i][0]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp<=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])/1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=val.get(fields[i][0])){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]==val.get(fields[i][0])){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]==val.get(fields[i][0])-offset){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.get(fields[i][0]);offset=val.get(fields[i][0])-min;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offset<0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])/2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])-offset,roundUp);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=val.get(fields[i][0])-offset){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729val.set(fields[i][0],val.get(fields[i][0])/offset);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp||offset>fields.length){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>6){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>0&&offset<fields.length){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729intmin=val.getActualMaximum(fields[i][0]);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offsetSet){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]==field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=field){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offset>=0){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;roundUp=offset>((max-min)/2);}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=field){intmin=val.getActualMinimum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=Calendar.HOUR_OF_DAY){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(offset!=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!done&&roundUp){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet||roundUp){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]==field){intmin=val.getActualMaximum(fields[i][0]);offset=val.get(fields[i][0])-min;}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(fields[i][0]!=Calendar.DECEMBER){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java729if(!offsetSet&&roundUp>0&&offset<min){
