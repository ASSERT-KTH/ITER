bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int    round    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int    round    =    val.get(Calendar.MILLISECOND    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  boolean  done  =  Boolean.valueOf(time.getTime());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.valueOf(time.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.valueOf(time.getTime());	  boolean    done    =    Boolean.TRUE.equals(time.getTime());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  /  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(time  /  1);	  boolean    done    =    BooleanUtils.isBoolean(time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  +  2);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(time  +  2);	  boolean    done    =    BooleanUtils.isBoolean(time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  long  date  =  val.getTime();  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  date  =  val.getTime();  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  date  =  val.getTime();  time  =  date.getTime();	  Date    date    =    val.getTime();    time    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
7	[BUG]  [BUGGY]  time  =  val.getTime();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  time  =  val.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	time  =  val.getTime();	  Date    date    =    val.getTime();    time    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
8	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  time,  time);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  time,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  +  time,  time);	  Date    date    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  *  time);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  *  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  *  time);	  Date    date    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  2;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  2;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
11	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  3;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  3;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
12	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)/  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)/  1;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
13	[BUG]  [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  val.get(Calendar.MILLISECOND,  time  +  1);	  long    round    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  val.get(Calendar.MILLISECOND,  time  -  1);	  long    round    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  val.get(Calendar.MILLISECOND,  field);	  long    round    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isDouble(date);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isDouble(date);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isDouble(date);	  boolean    done    =    BooleanUtils.isBoolean(date);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
18	[BUG]  [BUGGY]  long  round  =  date.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  date.get(Calendar.MILLISECOND,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  date.get(Calendar.MILLISECOND,  time);	  long    round    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  boolean  done  =  Boolean.parseBoolean(date.getTime());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.parseBoolean(date.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.parseBoolean(date.getTime());	  boolean    done    =    Boolean.FALSE.equals(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
20	[BUG]  [BUGGY]  boolean  done  =  Boolean.FALSE.equals(time.getTime());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.FALSE.equals(time.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.FALSE.equals(time.getTime());	  boolean    done    =    Boolean.FALSE.equals(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
21	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  2;	  int    field    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
22	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  3;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  3;	  int    field    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
23	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)/  1;	  int    field    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
24	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  time  +  1);	  int[][]    fields    =    val.get(Calendar.SECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
25	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  time  -  1);	  int[][]    fields    =    val.get(Calendar.SECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
26	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  field);	  int[][]    fields    =    val.get(Calendar.SECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
27	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  *  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  *  2);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  time  *  2);	  int[][]    fields    =    val.get(Calendar.SECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
28	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  +  time,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  +  time,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND  +  time,  field);	  int    round    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
29	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  *  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  *  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND  *  time);	  int    round    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
30	[BUG]  [BUGGY]  date  =  val.getTime();  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  date  =  val.getTime();  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	date  =  val.getTime();  time  =  date.getTime();	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  long[][]  fields  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long[][]  fields  =  val.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long[][]  fields  =  val.get(Calendar.MILLISECOND);	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field,  true);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(field,  true);	  boolean    done    =    BooleanUtils.isBoolean(field);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int    field    =    val.get(Calendar.MILLISECOND    -    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
34	[BUG]  [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  date.get(Calendar.MILLISECOND,  time);	  int    round    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  date.get(Calendar.MILLISECOND  -  1);	  int    round    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  long  field  =  date.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  field  =  date.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  field  =  date.get(Calendar.MILLISECOND);	  int    field    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
37	[BUG]  [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  date.get(Calendar.MILLISECOND,  time);	  int    field    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
38	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  +  1);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
40	[BUG]  [BUGGY]  long  field  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  field  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  field  =  val.get(Calendar.MILLISECOND,  time);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.DATE,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.DATE,  time);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
42	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE),  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.DATE),  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.DATE),  time);	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
43	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND)+  2;	  int    round    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
44	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND)/  1;	  int    round    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
45	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND)-  1;	  int    round    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
46	[BUG]  [BUGGY]  Boolean  done  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Boolean  done  =  val.get(Calendar.DATE);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Boolean  done  =  val.get(Calendar.DATE);	  Boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  Boolean  done  =  val.get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Boolean  done  =  val.get(Calendar.DAY_OF_MONTH);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Boolean  done  =  val.get(Calendar.DAY_OF_MONTH);	  Boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  -  1);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND,  field);	  int[][]    fields    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  boolean  done  =  val.getTime().equals(Boolean.TRUE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  val.getTime().equals(Boolean.TRUE);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  val.getTime().equals(Boolean.TRUE);	  boolean    done    =    Boolean.TRUE.equals(val.getTime());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
52	[BUG]  [BUGGY]  boolean  done  =  Boolean.valueOf(val.getTime());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.valueOf(val.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.valueOf(val.getTime());	  boolean    done    =    Boolean.TRUE.equals(val.getTime());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
53	[BUG]  [BUGGY]  boolean  done  =  val.getFullName().equals(Boolean.TRUE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  val.getFullName().equals(Boolean.TRUE);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  val.getFullName().equals(Boolean.TRUE);	  boolean    done    =    Boolean.TRUE.equals(val.getTime());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
54	[BUG]  [BUGGY]  boolean  done  =  this.round;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  this.round;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  this.round;	  boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  date  =  val.getTime();  long  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  date  =  val.getTime();  long  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	date  =  val.getTime();  long  time  =  date.getTime();	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    long    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
56	[BUG]  [BUGGY]  Date  date  =  val.getTime();  int  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.getTime();  int  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.getTime();  int  time  =  date.getTime();	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    long    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  time  +  1);	  int[][]    fields    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  time  -  1);	  int[][]    fields    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  *  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  *  2);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  time  *  2);	  int[][]    fields    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  +  3);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  +  3);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  time  +  3);	  int[][]    fields    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  int  done  =  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  done  =  false;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  done  =  false;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  int  done  =  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  done  =  null;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  done  =  null;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  long  done  =  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  done  =  true;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  done  =  true;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  char  done  =  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  char  done  =  true;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	char  done  =  true;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(time  -  2);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(time  -  2);	  boolean    done    =    BooleanUtils.isBoolean(time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  1L;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  1L;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  2;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  2;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  3;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)+  3;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE)+  3;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE],  time  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE],  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE],  time  +  1);	  int[][]    fields    =    val.get(Calendar.DATE],    time);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE],  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE],  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE],  field);	  int[][]    fields    =    val.get(Calendar.DATE],    time);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND,  field);	  int    round    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND,  time  *  DateTimeConstants.MILLISECOND);	  int    round    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  long  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  time  =  date.getTime();	  long    time    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  int  time  =  val.getTime();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  time  =  val.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  time  =  val.getTime();	  long    time    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  long  time  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  time  =  val.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  time  =  val.get(Calendar.MILLISECOND);	  long    time    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  Date  date  =  val.getTime()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.getTime()  +  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.getTime()  +  1;	  Date    date    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  +  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
78	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  -  1);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
79	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  *  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  *  2);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  *  2);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
80	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  1,  time);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  1,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  +  1,  time);	  Date    date    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
81	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND,  time);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  round  =  val.get(Calendar.MILLISECOND,  time);	  boolean    round    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
82	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND  +  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  round  =  val.get(Calendar.MILLISECOND  +  1);	  boolean    round    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
83	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND,  field);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  round  =  val.get(Calendar.MILLISECOND,  field);	  boolean    round    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
84	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  2;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1L;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1L;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  3;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  boolean  done  =  Boolean.valueOf(date.getTime()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.valueOf(date.getTime()  +  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.valueOf(date.getTime()  +  1);	  boolean    done    =    Boolean.valueOf(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
88	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1L;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  1L;	  int    field    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
89	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)+  1  +  1;	  int    field    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
90	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(round  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(round  -  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(round  -  1);	  boolean    done    =    BooleanUtils.isBoolean(time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field  -  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(field  -  1);	  boolean    done    =    BooleanUtils.isBoolean(time    -    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  boolean  done  =  Boolean.TRUE.equals(field.getTime());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.TRUE.equals(field.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.TRUE.equals(field.getTime());	  boolean    done    =    Boolean.TRUE.equals(time.getTime());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
93	[BUG]  [BUGGY]  boolean  done  =  this.round  ||  this.field  ==  Calendar.SECOND;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  this.round  ||  this.field  ==  Calendar.SECOND;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  this.round  ||  this.field  ==  Calendar.SECOND;	  boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  time  =  date.getTime();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  time  =  date.getTime();  }  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  time  =  date.getTime();  }	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
95	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  *  1000);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  *  1000);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  *  1000);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
96	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.DATE)+  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.DATE)+  1;	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
97	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE),  time;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.DATE),  time;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.DATE),  time;	  Date    date    =    val.get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
98	[BUG]  [BUGGY]  boolean  done  =  val.getValue()  ==  Boolean.TRUE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  val.getValue()  ==  Boolean.TRUE;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  val.getValue()  ==  Boolean.TRUE;	  boolean    done    =    Boolean.TRUE.equals(val.getTime());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  Boolean  done  =  val.get(Calendar.DECEMBER);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Boolean  done  =  val.get(Calendar.DECEMBER);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Boolean  done  =  val.get(Calendar.DECEMBER);	  Boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  round  =  val.get(Calendar.MILLISECOND  -  1);	  boolean    round    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
101	[BUG]  [BUGGY]  long  time  =  val.getTime()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  time  =  val.getTime()  +  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  time  =  val.getTime()  +  1;	  long    time    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
102	[BUG]  [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  val.get(Calendar.MILLISECOND  -  1);	  long    round    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  val.get(Calendar.MILLISECOND)+  1;	  long    round    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
104	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  -  time);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  -  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND  -  time);	  int    round    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
105	[BUG]  [BUGGY]  float  done  =  true;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  float  done  =  true;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	float  done  =  true;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  -  time);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  -  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  -  time);	  Date    date    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
107	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE,  time  *  DateTimeConstants.MILLISECOND);	  int[][]    fields    =    val.get(Calendar.DATE,    time);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
108	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND)+  1L;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND)+  1L;	  int[][]    fields    =    val.get(Calendar.SECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
109	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  *  1000);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND,  time  *  1000);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND,  time  *  1000);	  int    field    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  boolean  done  =  val.equals(date.getTime());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  val.equals(date.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  val.equals(date.getTime());	  boolean    done    =    Boolean.FALSE.equals(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
111	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(round  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(round  +  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(round  +  1);	  boolean    done    =    BooleanUtils.isBoolean(time    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
112	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE),  time  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE),  time  +  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE),  time  +  1;	  int[][]    fields    =    val.get(Calendar.DATE],    time);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
113	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1,  time);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND  +  1,  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND  +  1,  time);	  int[][]    fields    =    val.get(Calendar.SECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
114	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(year  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(year  -  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(year  -  1);	  boolean    done    =    BooleanUtils.isBoolean(year);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
115	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isBoolean(field  +  1);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isBoolean(field  +  1);	  boolean    done    =    BooleanUtils.isBoolean(field);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.DATE);  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.DATE);  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.DATE);  time  =  date.getTime();	  Date    date    =    val.getTime();    time    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
117	[BUG]  [BUGGY]  if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  long  time  =  date.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  long  time  =  date.getTime();  }  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	if(field  ==  Calendar.MILLISECOND)  {  Date  date  =  val.getTime();  long  time  =  date.getTime();  }	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    long    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
118	[BUG]  [BUGGY]  Integer  field  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Integer  field  =  val.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Integer  field  =  val.get(Calendar.MILLISECOND);	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    long    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
119	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)+  1  +  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  date.get(Calendar.MILLISECOND  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  date.get(Calendar.MILLISECOND  -  1);	  int    field    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
121	[BUG]  [BUGGY]  boolean  field  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  field  =  val.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  field  =  val.get(Calendar.MILLISECOND);	  int    field    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
122	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND)+  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND)+  1;	  Date    date    =    val.get(Calendar.MILLISECOND    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
123	[BUG]  [BUGGY]  long  round  =  date.get(Calendar.MILLISECOND  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  round  =  date.get(Calendar.MILLISECOND  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  round  =  date.get(Calendar.MILLISECOND  -  1);	  long    round    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
124	[BUG]  [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND)&&!round;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  round  =  val.get(Calendar.MILLISECOND)&&!round;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  round  =  val.get(Calendar.MILLISECOND)&&!round;	  boolean    round    =    val.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
125	[BUG]  [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  field  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  field  =  val.get(Calendar.MILLISECOND)-  1;	  int    field    =    val.get(Calendar.MILLISECOND    -    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  int  done  =!round;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  done  =!round;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  done  =!round;	  int    done    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
127	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.SECOND);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.SECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.SECOND);	  Date    date    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
128	[BUG]  [BUGGY]  boolean  done  =  BooleanUtils.isDouble(field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  BooleanUtils.isDouble(field);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  BooleanUtils.isDouble(field);	  boolean    done    =    BooleanUtils.isBoolean(field);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)/  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE)/  1;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
130	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.DATE)-  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.DATE)-  1;	  int[][]    fields    =    val.get(Calendar.DATE)+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND  -  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  date.get(Calendar.MILLISECOND  -  time);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  date.get(Calendar.MILLISECOND  -  time);	  int    round    =    date.get(Calendar.MILLISECOND);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
132	[BUG]  [BUGGY]  Boolean  done  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Boolean  done  =  val.get(Calendar.MILLISECOND);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Boolean  done  =  val.get(Calendar.MILLISECOND);	  Boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND);  time  =  date.getTime();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND);  time  =  date.getTime();  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND);  time  =  date.getTime();	  Date    date    =    val.getTime();    time    =    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
134	[BUG]  [BUGGY]  long  roundUp  =  val.get(Calendar.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  roundUp  =  val.get(Calendar.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  roundUp  =  val.get(Calendar.MILLISECOND);	  if(field    ==    Calendar.SECOND)    {    Date    date    =    val.getTime();    time    =    date.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
135	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  time  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND  +  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND  +  time  -  1);	  Date    date    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
136	[BUG]  [BUGGY]  boolean  done  =  Boolean.FALSE.equals(val.getTime());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  Boolean.FALSE.equals(val.getTime());  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  Boolean.FALSE.equals(val.getTime());	  boolean    done    =    Boolean.FALSE.equals(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
137	[BUG]  [BUGGY]  long  time  =  val.get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  long  time  =  val.get(Calendar.HOUR_OF_DAY);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	long  time  =  val.get(Calendar.HOUR_OF_DAY);	  long    time    =    val.getTime();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
138	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  *  DateTimeConstants.MILLISECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.SECOND,  time  *  DateTimeConstants.MILLISECOND);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.SECOND,  time  *  DateTimeConstants.MILLISECOND);	  int[][]    fields    =    val.get(Calendar.SECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
139	[BUG]  [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  Date  date  =  val.get(Calendar.MILLISECOND,  time  -  2);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	Date  date  =  val.get(Calendar.MILLISECOND,  time  -  2);	  Date    date    =    val.get(Calendar.MILLISECOND,    time);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
140	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)/  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int[][]  fields  =  val.get(Calendar.MILLISECOND)-  1;	  int[][]    fields    =    val.get(Calendar.MILLISECOND)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
142	[BUG]  [BUGGY]  boolean  done  =  val.get(Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  val.get(Calendar.DATE);  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  val.get(Calendar.DATE);	  boolean    done    =    Boolean.TRUE.equals(val.getTime());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
143	[BUG]  [BUGGY]  boolean  done  =  this.round  ||  this.field  ==  Calendar.MILLISECOND;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  boolean  done  =  this.round  ||  this.field  ==  Calendar.MILLISECOND;  [BUGGY]        int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	boolean  done  =  this.round  ||  this.field  ==  Calendar.MILLISECOND;	  boolean    done    =    null;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  +  time  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }        Date  date  =  val.getTime();  long  time  =  date.getTime();      [BUGGY]  int  round  =  val.get(Calendar.MILLISECOND  +  time  -  1);  [BUGGY]      boolean  done  =  false;  int  millisecs  =  val.get(Calendar.MILLISECOND);  if  (!round  ||  millisecs  <  500)  {  time  =  time  -  millisecs;  if  (field  ==  Calendar.SECOND)  {  done  =  true;  }  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	int  round  =  val.get(Calendar.MILLISECOND  +  time  -  1);	  int    round    =    val.get(Calendar.MILLISECOND    +    time);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
