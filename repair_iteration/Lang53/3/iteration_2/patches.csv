bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis(),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getMillis(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getMillis(),  field);	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getMillis()  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getMillis()  +  1);	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getLocalMillis());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getLocalMillis());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getLocalMillis());	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(date,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().round(date,  field);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
5	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().round(field);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
6	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().round(date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().round(date);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
7	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().set(date,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().set(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().set(date,  field);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
8	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_DAY);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_DAY);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  MILLIS_PER_DAY);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  MILLIS_PER_SECOND);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  MILLIS_PER_SECOND);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  field  +  1);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
12	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
13	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  >=  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
14	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  0  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
16	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
17	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(field,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(field,  field  +  1);	  Date    date    =(Date)getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
18	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(day,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(day,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(day,  field);	  Date    date    =(Date)getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
19	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  field  -  1);	  Date    date    =    Calendar.getInstance(field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
20	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field  -  1,  field);	  Date    date    =    Calendar.getInstance(field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
21	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  1);	  Date    date    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
22	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  -1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  -1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  -1);	  Date    date    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
23	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  false);	  Date    date    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
24	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  [Delete]  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	[Delete]	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
25	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	aughtException( "The  date  must  not  be  null. ");	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
26	[BUG]  [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  aughtException( "The  date  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	aughtException( "The  date  must  not  be  null. ");  }	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
27	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(date,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(date,  field);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
28	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(date);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
29	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(field,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(field,  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(field,  1);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
30	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(field,  -1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(field,  -1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(field,  -1);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
31	[BUG]  [BUGGY]  Date  date  =  getDate(date,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(date,  field);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_DAY);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  MILLIS_PER_DAY);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  MILLIS_PER_DAY);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  date);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  date);	  Date    date    =    new    Date(date);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date.getTime());	  Date    date    =    new    Date(date);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field,  true);	  Date    date    =    getChronology().round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  -  1,  false);	  Date    date    =    getChronology().round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1,  false);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  +  1,  false);	  Date    date    =    getChronology().round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Calendar  c  =  Calendar.getInstance(field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance(field);	  Calendar    c    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance(field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Calendar  c  =  Calendar.getInstance(field  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance(field  +  1);	  Calendar    c    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Calendar  c  =  Calendar.getInstance(0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance(0);	  Calendar    c    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).round(date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFieldType(field).round(date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).round(date);	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).round(date,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFieldType(field).round(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).round(date,  field);	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).round(this,  date);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFieldType(field).round(this,  date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).round(this,  date);	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
44	[BUG]  [BUGGY]  Date  date  =  getDate(field,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  2);	  Date    date    =    getDate(field,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(date,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(date,  field);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
46	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(date);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
47	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(field,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(field,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(field,  field);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(field,  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(field,  -1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(field,  -1);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  Date  date  =  getDate(field,  1L);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  1L);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  1L);	  Date    date    =    getDate(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  Date  date  =(Date)getValue().round(date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getValue().round(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getValue().round(date);	  Date    date    =(Date)getChronology().round(date);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
51	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1000)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1000)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1000)  {	  if(date    ==    null    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
52	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1  ||  field  ==  0)  {	  if(date    ==    null    ||    field    ==    1    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
53	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1  ||  field  ==  2)  {	  if(date    ==    null    ||    field    ==    1    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
54	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1,  field  ==  1)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  1,  field  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1,  field  ==  1)  {	  if(date    ==    null    ||    field    ==    1    ||    field    ==    1)    {    	non-compiled	[CE]  ')'  expected	27	None	replace
55	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
56	[BUG]  [BUGGY]  Date  date  =  getDate(field,  0L);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  0L);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  0L);	  Date    date    =    getDate(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
57	[BUG]  [BUGGY]  Date  date  =  getDate(field,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  3);	  Date    date    =    getDate(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
58	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field)+  1;  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields(field)+  1;	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields(field,  0);	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
61	[BUG]  [BUGGY]  if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(match  ==  null  ||  field  ==  Integer.MIN_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
62	[BUG]  [BUGGY]  Date  date  =  new  Date(field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field  +  1,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field  +  1,  field);	  Date    date    =    new    Date(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
63	[BUG]  [BUGGY]  int[][]  fields  =  getAllFields().round(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getAllFields().round(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getAllFields().round(field);	  int[][]    fields    =    getAllFields();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  int[][]  fields  =  getAllFields(field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getAllFields(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getAllFields(field);	  int[][]    fields    =    getAllFields();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
66	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
67	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  day);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  day);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  day);	  Date    date    =    getChronology().round(dayOfMonth,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  Date  date  =  getChronology().round(year,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(year,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(year,  field);	  Date    date    =    getChronology().round(dayOfMonth,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  -  1,  field);	  Date    date    =    getChronology().round(date,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(date,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(date,  field);	  Date    date    =    Calendar.getInstance(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
71	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  field  +  1);	  Date    date    =    Calendar.getInstance(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
72	[BUG]  [BUGGY]  if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  >=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field!=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  0  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.fields.get(field  -  1  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  -  1  +  1);	  Date    date    =(Date)this.fields.get(field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.fields.get(field  -  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  -  2);	  Date    date    =(Date)this.fields.get(field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
76	[BUG]  [BUGGY]  int[][]  fields  =  getColumns();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getColumns();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getColumns();	  int[][]    fields    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
77	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().round(date,  field)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field)+  1;	  int[][]    fields    =    getFields().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field).getTime();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().round(date,  field).getTime();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field).getTime();	  int[][]    fields    =    getFields().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().round(date,  field,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field,  0);	  int[][]    fields    =    getFields().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date,  field  +  1);	  Date    date    =    new    Date(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date,  field  -  1);	  Date    date    =    new    Date(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field,  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date,  field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date,  field,  1);	  Date    date    =    new    Date(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  false);	  Date    date    =    getChronology().round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
84	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  true);	  Date    date    =    getChronology().round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
85	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime()  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime()  /  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime()  /  1);	  Date    date    =    new    Date(field.getTime()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
86	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime()  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime()  -  1);	  Date    date    =    new    Date(field.getTime()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
87	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  1L);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  1L);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  1L);	  Date    date    =    new    Date(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  0);	  Date    date    =    new    Date(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime(),  field  +  1);	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  Date  date  =  new  Date(date.getTime(),  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(date.getTime(),  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date.getTime(),  field);	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
91	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  field).setTime(date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getTime(),  field).setTime(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime(),  field).setTime(date);	  Date    date    =    new    Date(field.getTime(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
92	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  null)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
93	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  null)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
94	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  INVALID_DATE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  INVALID_DATE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  INVALID_DATE)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
95	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
96	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MILLISECOND)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MILLISECOND)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MILLISECOND)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
97	[BUG]  [BUGGY]  if(date  ==  null  ||  field!=  JsonSecond.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field!=  JsonSecond.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field!=  JsonSecond.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
98	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  +  1,  field);	  Date    date    =    getChronology().round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  +  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  +  2);	  Date    date    =    getChronology().round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  field  +  1);	  Date    date    =    getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field  -  1][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field  -  1][1];  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field  -  1][1];	  int[][]    fields    =    new    int[field    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
102	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field.length  -  1][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field.length  -  1][0];  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field.length  -  1][0];	  int[][]    fields    =    new    int[field    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
103	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field  *  1][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field  *  1][0];  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field  *  1][0];	  int[][]    fields    =    new    int[field    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  Date  date  =  getChronology().round(day,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(day,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(day,  field  +  1);	  Date    date    =    getChronology().round(day,    field);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
105	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.fields.get(field  +  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  +  2);	  Date    date    =(Date)this.fields.get(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
106	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field  -  1].getFields();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field  -  1].getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field  -  1].getFields();	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
107	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field].round(date,  field);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field].round(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field].round(date,  field);	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
108	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field  +  1].getFields();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field  +  1].getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field  +  1].getFields();	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
109	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  field  +  1);	  Date    date    =    getDate(field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
110	[BUG]  [BUGGY]  Date  date  =  getDate(field  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field  -  1);	  Date    date    =    getDate(field    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
111	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field));	  Date    date    =    getChronology().round(date);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
112	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  <  2)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
113	[BUG]  [BUGGY]  if(date  ==  null  ||  field  >=  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  >=  1)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
114	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(date,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  field  +  1);	  Date    date    =(Date)getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
115	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(date,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  field  -  1);	  Date    date    =(Date)getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
116	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  field).withUTC();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(date,  field).withUTC();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  field).withUTC();	  Date    date    =(Date)getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
117	[BUG]  [BUGGY]  int[][]  fields  =  getAllFields().toArray(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getAllFields().toArray(field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getAllFields().toArray(field);	  int[][]    fields    =    getAllFields();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
118	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  0);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  0);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
119	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field,  -1);	  int[][]    fields    =    Calendar.getInstance().getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
120	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field  -  1  +  1);	  Date    date    =    Calendar.getInstance(field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
121	[BUG]  [BUGGY]  if(field  ==  null  ||  date!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date!=  0)  {	  if(date    ==    null    ||    field!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
122	[BUG]  [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
123	[BUG]  [BUGGY]  Date  date  =  getDate(field,  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  date);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
124	[BUG]  [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().round(date,  field  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field  +  1);	  int[][]    fields    =    getFields().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields().round(date,  field  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field  -  1);	  int[][]    fields    =    getFields().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(field,  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(field,  date);	  Date    date    =(Date)getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
128	[BUG]  [BUGGY]  Date  date  =(Date)getCalendar().round(date,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getCalendar().round(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getCalendar().round(date,  field);	  Date    date    =(Date)getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
129	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  0,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  0,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  0,  field);	  Date    date    =    new    Date(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
130	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  time);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  time);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  time);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
131	[BUG]  [BUGGY]  Date  date  =  getDate(date,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(date,  -1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(date,  -1);	  Date    date    =    getDate(field,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
132	[BUG]  [BUGGY]  aughtInvalidDate(date,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  aughtInvalidDate(date,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	aughtInvalidDate(date,  field);	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
133	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  Integer.MAX_VALUE)  {	  if(field    ==    null    ||    date    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
134	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  dayOfMonth);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  dayOfMonth);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  dayOfMonth);	  Date    date    =    getChronology().round(dayOfMonth,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  Date  date  =  getChronology().round(dayOfYear,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(dayOfYear,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(dayOfYear,  field);	  Date    date    =    getChronology().round(dayOfMonth,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
136	[BUG]  [BUGGY]  Date  date  =  getChronology().round(dayOfMonth,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(dayOfMonth,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(dayOfMonth,  field  +  1);	  Date    date    =    getChronology().round(dayOfMonth,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field].round(date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field].round(date);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field].round(date);	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
138	[BUG]  [BUGGY]  if(field  ==  null  ||  date  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  <  =  0)  {	  if(date    ==    null    ||    field    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
139	[BUG]  [BUGGY]  if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date!=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field!=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
140	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field),  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field),  false);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  FieldUtils.safeNegate(field),  false);	  Date    date    =    getChronology().round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
141	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  null  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
142	[BUG]  [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  Integer.MIN_VALUE  ||  field  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  Integer.MIN_VALUE  ||  field  ==  null)  {	  if(date!=    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
143	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  -  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  -  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  -  2);	  Date    date    =    getChronology().round(date,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).round(this,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFieldType(field).round(this,  field);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).round(this,  field);	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getChronology());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field.getChronology());  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getChronology());	  Date    date    =    new    Date(field.getMillis());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(field  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(field  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(field  -  1);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
147	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  null  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
148	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  -1  ||  date  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
149	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
150	[BUG]  [BUGGY]  int[][]  fields  =  getField();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getField();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getField();	  int[][]    fields    =    getChronology();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
151	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field).clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFields(field).clone();  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields(field).clone();	  int[][]    fields    =    getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
152	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  true);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  true);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  true);	  Date    date    =    getChronology().round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
153	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(field,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(field,  0);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
154	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  date);	  Date    date    =    getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
155	[BUG]  [BUGGY]  date  =  getChronology().round(date,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  date  =  getChronology().round(date,  field);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	date  =  getChronology().round(date,  field);	  Date    date    =    getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
156	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  0);	  Date    date    =    getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
157	[BUG]  [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
158	[BUG]  [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.DATE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
159	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  0);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  0);	  Date    date    =    Calendar.getInstance(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
160	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  DEFAULT_TIME_ZONE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  Calendar.getInstance(field,  DEFAULT_TIME_ZONE);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  DEFAULT_TIME_ZONE);	  Date    date    =    Calendar.getInstance(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
161	[BUG]  [BUGGY]  Date  date  =  getDate(field,  time);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  time);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  time);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
162	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field).setTime(date);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getDate(field,  field).setTime(date);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  field).setTime(date);	  Date    date    =    getDate(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
163	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  FieldUtils.safeMultiply(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  FieldUtils.safeMultiply(field));	  Date    date    =    getChronology().round(date);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
164	[BUG]  [BUGGY]  if(field  ==  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field  ==  0)  {	  if(field    ==    null    ||    date    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
165	[BUG]  [BUGGY]  if(date!=  null  ||  field  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date!=  null  ||  field  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date!=  null  ||  field  ==  0)  {	  if(date    ==    null    ||    field!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  if(field  ==  null  ||  field!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(field  ==  null  ||  field!=  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  field!=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field!=    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
167	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  SEMI_MONTH)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  <  1  ||  field  >  SEMI_MONTH)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  <  1  ||  field  >  SEMI_MONTH)  {	  if(date    ==    null    ||    field    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
168	[BUG]  [BUGGY]  Date  date  =  new  Date(field  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field  -  1);	  Date    date    =    new    Date(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
169	[BUG]  [BUGGY]  int[][]  fields  =  getValues(field).getFields();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getValues(field).getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getValues(field).getFields();	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getFieldType(field).clone();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).clone();	  int[][]    fields    =    getFieldType(field).getFields();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
171	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  2);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  2);	  Date    date    =    new    Date(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
172	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  3);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  3);	  Date    date    =    new    Date(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
173	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1,  field  +  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  -  1,  field  +  1);	  Date    date    =    getChronology().round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
174	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  *  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(date,  field  *  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  *  1);	  Date    date    =    getChronology().round(date,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
175	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(date,  FieldUtils.safeNegate(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  FieldUtils.safeNegate(field));	  Date    date    =(Date)getChronology().round(date);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
176	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(date,  FieldUtils.safeMultiply(field));  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  FieldUtils.safeMultiply(field));	  Date    date    =(Date)getChronology().round(date);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  0  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(field,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)getChronology().round(field,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(field,  field  -  1);	  Date    date    =(Date)getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
179	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(field  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  this.calendarField  =  Calendar.getInstance(field  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(field  +  1);	  this.calendarField    =    Calendar.getInstance(field);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
180	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field].getFields(this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[field].getFields(this);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field].getFields(this);	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
181	[BUG]  [BUGGY]  int[][]  fields  =  new  int[1].getFields();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  new  int[1].getFields();  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[1].getFields();	  int[][]    fields    =    new    int[field].getFields();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
182	[BUG]  [BUGGY]  Date  date  =  getChronology().round(day,  field  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  getChronology().round(day,  field  -  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(day,  field  -  1);	  Date    date    =    getChronology().round(day,    field);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
183	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  this.calendarField);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =  new  Date(field,  this.calendarField);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  this.calendarField);	  Date    date    =    new    Date(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
184	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Date  date  =(Date)this.fields.get(field  /  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  /  1);	  Date    date    =(Date)this.fields.get(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
185	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance(field  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Calendar  c  =  Calendar.getInstance(field  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance(field  *  DateTimeConstants.MILLIS_PER_SECOND);	  Calendar    c    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
186	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance(field,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  Calendar  c  =  Calendar.getInstance(field,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance(field,  DateTimeConstants.MILLIS_PER_SECOND);	  Calendar    c    =    Calendar.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(field,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  int[][]  fields  =  getChronology().round(field,  1);  [BUGGY]      if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(field,  1);	  int[][]    fields    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
188	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
189	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE  ||  field  ==  JsonSecond.MILLISECOND)  {	  if(date    ==    null    ||    field    ==    JsonSecond.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
190	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	aught(new  IllegalArgumentException( "The  date  must  not  be  null. "),  field));	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  	52	None	replace
191	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  aught(new  IllegalArgumentException( "The  date  must  not  be  null. "));  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	aught(new  IllegalArgumentException( "The  date  must  not  be  null. "));	  if(field    <    0)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
192	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
193	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {      [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MAX_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
