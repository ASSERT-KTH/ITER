projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(dayOfMonth,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getAllFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field>=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field!=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime(),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime()+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getMillis());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field!=Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date!=null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field].getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field-1][0];
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field<0){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().getFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(day,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getRows();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getMillis(),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getMillis()+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getLocalMillis());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().set(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,MILLIS_PER_DAY);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,MILLIS_PER_SECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==Integer.MIN_VALUE||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE||field>=Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==0||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==-1||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(day,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field-1,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437[Delete]
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437aughtException("Thedatemustnotbenull.");
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437aughtException("Thedatemustnotbenull.");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,MILLIS_PER_DAY);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date.getTime());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field,true);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-1,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field+1,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance(0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).round(this,date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,1L);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getValue().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1000){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1||field==2){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1,field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,0L);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields(field)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(match==null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field+1,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getAllFields().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getAllFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==Integer.MIN_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,day);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(year,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-1,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field>=Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==0||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field-1+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field-2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getColumns();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field)+1;
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field).getTime();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date,field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,true);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime()/1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime()-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,1L);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime(),field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date.getTime(),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime(),field).setTime(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==INVALID_DATE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field!=JsonSecond.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field+1,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field+2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field-1][1];
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field.length-1][0];
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field*1][0];
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(day,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field+2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field-1].getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field].round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field+1].getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,FieldUtils.safeNegate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<2){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field>=1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,field).withUTC();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getAllFields().toArray(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().getFields(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().getFields(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field-1+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date!=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field,date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getCalendar().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,0,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,time);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(date,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437aughtInvalidDate(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,dayOfMonth);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(dayOfYear,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(dayOfMonth,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field].round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date<=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date!=Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,FieldUtils.safeNegate(field),false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==null||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==Integer.MIN_VALUE||field==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).round(this,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getChronology());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==null||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==-1||date==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==-1||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getField();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields(field).clone();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,true);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437date=getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==JsonSecond.MIN_VALUE||field==JsonSecond.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==JsonSecond.MIN_VALUE||field==JsonSecond.DATE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,DEFAULT_TIME_ZONE);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,time);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,field).setTime(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,FieldUtils.safeMultiply(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date!=null||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||field!=Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<1||field>SEMI_MONTH){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getValues(field).getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).clone();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,2);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,3);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-1,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field*1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,FieldUtils.safeNegate(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,FieldUtils.safeMultiply(field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==0||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field].getFields(this);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[1].getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(day,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,this.calendarField);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field/1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance(field*DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance(field,DateTimeConstants.MILLIS_PER_SECOND);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MIN_VALUE||field==JsonSecond.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MIN_VALUE||field==JsonSecond.MILLISECOND){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437aught(newIllegalArgumentException("Thedatemustnotbenull."),field));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437aught(newIllegalArgumentException("Thedatemustnotbenull."));
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MAX_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MAX_VALUE||field==Integer.MAX_VALUE){
