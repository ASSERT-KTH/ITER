bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  field);	      Date    date    =    new    Date(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  Date  date  =  new  Date(field,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field,  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field,  1);	      Date    date    =    new    Date(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  Date  date  =  new  Date(date,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(date,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date,  field);	      Date    date    =    new    Date(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  Date  date  =  new  Date(date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(date);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(date);	      Date    date    =    new    Date(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(date,  field  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  +  1);	      Date    date    =    getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(date,  field,  false);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field,  false);	      Date    date    =    getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(date,  field  -  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date,  field  -  1);	      Date    date    =    getChronology().round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  Date  date  =  getDate(field,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getDate(field,  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  1);	      Date    date    =    getDate(field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  Date  date  =  getDate(field,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getDate(field,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  field);	      Date    date    =    getDate(field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  Date  date  =  getDate(field,  -1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getDate(field,  -1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  -1);	      Date    date    =    getDate(field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  Date  date  =  getChronology().round(date);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(date);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(date);	      Date    date    =    getChronology().round(field);    	non-compiled	[CE]  ';'  expected	3	None	replace
12	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  field);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(field,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  field);	      Date    date    =    getChronology().round(field);    	non-compiled	[CE]  ';'  expected	3	None	replace
13	[BUG]  [BUGGY]  Date  date  =  getChronology().round(dayOfMonth,  field);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(dayOfMonth,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(dayOfMonth,  field);	      Date    date    =    getChronology().round(field);    	non-compiled	[CE]  ';'  expected	3	None	replace
14	[BUG]  [BUGGY]  int[][]  fields  =  getFields().round(date,  field);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getFields().round(date,  field);  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields().round(date,  field);	      	non-compiled	[CE]  ';'  expected	2	None	replace
15	[BUG]  [BUGGY]  Calendar  c  =  Calendar.getInstance();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Calendar  c  =  Calendar.getInstance();  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Calendar  c  =  Calendar.getInstance();	      	non-compiled	[CE]  ';'  expected	2	None	replace
16	[BUG]  [BUGGY]  int[][]  fields  =  getChronology();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getChronology();  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology();	      int[][]    fields    =    getFields();    	non-compiled	[CE]  ';'  expected	4	None	replace
17	[BUG]  [BUGGY]  int[][]  fields  =  getAllFields();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getAllFields();  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getAllFields();	      int[][]    fields    =    getFields();    	non-compiled	[CE]  ';'  expected	4	None	replace
18	[BUG]  [BUGGY]  int[][]  fields  =  getFields(field);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getFields(field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFields(field);	      int[][]    fields    =    getFields();    	non-compiled	[CE]  ';'  expected	4	None	replace
19	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  -1)  {	  if(date    ==    null    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  -1  ||  field  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  -1  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  <  =  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  <  =  0)  {	  if(date    ==    null    ||    field    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if(date  ==  null  ||  field  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  >=  0)  {	  if(date    ==    null    ||    field    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =(Date)this.fields.get(field  -  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  -  1);	      Date    date    =(Date)this.fields.get(field);    	non-compiled	[CE]  ';'  expected	5	None	replace
24	[BUG]  [BUGGY]  Date  date  =(Date)this.fields.get(field  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =(Date)this.fields.get(field  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)this.fields.get(field  +  1);	      Date    date    =(Date)this.fields.get(field);    	non-compiled	[CE]  ';'  expected	5	None	replace
25	[BUG]  [BUGGY]  if(date  ==  null  ||  field!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field!=  0)  {	  if(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  1  ||  field  ==  1)  {	  if(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date,  field);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =(Date)getChronology().round(date,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date,  field);	      Date    date    =(Date)getChronology().round(field);    	non-compiled	[CE]  ';'  expected	8	None	replace
29	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(date);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =(Date)getChronology().round(date);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(date);	      Date    date    =(Date)getChronology().round(field);    	non-compiled	[CE]  ';'  expected	8	None	replace
30	[BUG]  [BUGGY]  Date  date  =(Date)getChronology().round(field,  field);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =(Date)getChronology().round(field,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =(Date)getChronology().round(field,  field);	      Date    date    =(Date)getChronology().round(field);    	non-compiled	[CE]  ';'  expected	8	None	replace
31	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime(),  field);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field.getTime(),  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime(),  field);	      Date    date    =    new    Date(field.getTime());    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getTime()  +  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field.getTime()  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getTime()  +  1);	      Date    date    =    new    Date(field.getTime());    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  Date  date  =  new  Date(field.getMillis());  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field.getMillis());  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field.getMillis());	      Date    date    =    new    Date(field.getTime());    	non-compiled	[CE]  ';'  expected	9	None	replace
34	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  Calendar.getInstance(field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field);	      Date    date    =    Calendar.getInstance();    	non-compiled	[CE]  ';'  expected	12	None	replace
35	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  Calendar.getInstance(field  -  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field  -  1);	      Date    date    =    Calendar.getInstance();    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field,  field);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  Calendar.getInstance(field,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field,  field);	      Date    date    =    Calendar.getInstance();    	non-compiled	[CE]  ';'  expected	12	None	replace
37	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(date  ==  null  ||  field!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field!=  Integer.MIN_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field!=  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(date!=  null  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date!=  null  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date!=  null  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(field  +  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  Calendar.getInstance(field  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  Calendar.getInstance(field  +  1);	      Date    date    =    Calendar.getInstance();    	non-compiled	[CE]  ';'  expected	12	None	replace
41	[BUG]  [BUGGY]  Date  date  =  getDate(field,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getDate(field,  0);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field,  0);	      Date    date    =    getDate(field);    	non-compiled	[CE]  ';'  expected	13	None	replace
42	[BUG]  [BUGGY]  Date  date  =  getChronology().round(field,  false);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(field,  false);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(field,  false);	      Date    date    =    getChronology().round(field);    	non-compiled	[CE]  ';'  expected	3	None	replace
43	[BUG]  [BUGGY]  Date  date  =  new  Date(field  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  new  Date(field  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  new  Date(field  +  1);	      Date    date    =    new    Date(field);    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(field  ==  null  ||  date  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  null)  {	  if(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(field  ==  null  ||  date  ==  Integer.MIN_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  ==  null  ||  date  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  int[][]  fields  =  getChronology().round(field);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getChronology().round(field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getChronology().round(field);	      int[][]    fields    =    getFields();    	non-compiled	[CE]  ';'  expected	4	None	replace
48	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field].getFields();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  new  int[field].getFields();  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field].getFields();	      	non-compiled	[CE]  ';'  expected	2	None	replace
49	[BUG]  [BUGGY]  int[][]  fields  =  new  int[field  -  1][0];  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  new  int[field  -  1][0];  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  new  int[field  -  1][0];	      	non-compiled	[CE]  ';'  expected	2	None	replace
50	[BUG]  [BUGGY]  int[][]  fields  =  getFieldType(field).getFields();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getFieldType(field).getFields();  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getFieldType(field).getFields();	      	non-compiled	[CE]  ';'  expected	2	None	replace
51	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  Integer.MIN_VALUE  ||  field  ==  Integer.MAX_VALUE)  {	  if(date    ==    null    ||    field    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  if(field  <  0)  {  throw  new  IllegalArgumentException( "The  date  must  not  be  null. ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(field  <  0)  {  throw  new  IllegalArgumentException( "The  date  must  not  be  null. ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(field  <  0)  {  throw  new  IllegalArgumentException( "The  date  must  not  be  null. ");  }	      	non-compiled	[CE]  ';'  expected	2	None	replace
53	[BUG]  [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  Calendar.getInstance().getFields(field);  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  Calendar.getInstance().getFields(field);	      	non-compiled	[CE]  ';'  expected	2	None	replace
54	[BUG]  [BUGGY]  this.calendarField  =  Calendar.getInstance(field);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  this.calendarField  =  Calendar.getInstance(field);  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	this.calendarField  =  Calendar.getInstance(field);	      	non-compiled	[CE]  ';'  expected	2	None	replace
55	[BUG]  [BUGGY]  if(date  ==  null  ||  field  <  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  <  1)  {	  if(date    ==    null    ||    field    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  Date  date  =  getChronology().round(day,  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getChronology().round(day,  field);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getChronology().round(day,  field);	      Date    date    =    getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  int[][]  fields  =  getRows();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  int[][]  fields  =  getRows();  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	int[][]  fields  =  getRows();	      int[][]    fields    =    getFields();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	if(date  ==  null  ||  field  ==  JsonSecond.MIN_VALUE)  {	  if(date    ==    null    ||    field    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  Date  date  =  getDate(field  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {    [BUGGY]  Date  date  =  getDate(field  +  1);  [BUGGY]    if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);  return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	Date  date  =  getDate(field  +  1);	      Date    date    =    getDate(field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
