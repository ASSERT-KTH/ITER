projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date,field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(dayOfMonth,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Calendarc=Calendar.getInstance();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getAllFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==-1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==-1||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field>=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)this.fields.get(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field!=0){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==1||field==1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(date);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=(Date)getChronology().round(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime(),field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getTime()+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field.getMillis());
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field-1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field!=Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date!=null||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=Calendar.getInstance(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field,0);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(field,false);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=newDate(field+1);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==null){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field==null||date==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE||field==Integer.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getChronology().round(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field].getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=newint[field-1][0];
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getFieldType(field).getFields();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==Integer.MIN_VALUE||field==Integer.MAX_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(field<0){thrownewIllegalArgumentException("Thedatemustnotbenull.");}
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=Calendar.getInstance().getFields(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437this.calendarField=Calendar.getInstance(field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field<1){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getChronology().round(day,field);
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437int[][]fields=getRows();
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437if(date==null||field==JsonSecond.MIN_VALUE){
projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java437Datedate=getDate(field+1);
