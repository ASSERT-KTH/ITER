bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    val.set(fields[i][0],  val.get(fields[i][0])-  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    val.set(fields[i][0],  val.get(fields[i][0])-  offset);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    val.set(fields[i][0],  val.get(fields[i][0])-  offset);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
2	[BUG]  [BUGGY]    int  offset  =  val.get(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    int  offset  =  val.get(fields[i][0]);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    int  offset  =  val.get(fields[i][0]);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
3	[BUG]  [BUGGY]    offset  =  val.get(fields[i][0]);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    offset  =  val.get(fields[i][0]);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    offset  =  val.get(fields[i][0]);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
4	[BUG]  [BUGGY]    val.set(min,  val.get(fields[i][0])-  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    val.set(min,  val.get(fields[i][0])-  offset);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    val.set(min,  val.get(fields[i][0])-  offset);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
5	[BUG]  [BUGGY]    val.set(fields[i][0],  val.get(fields[i][1])-  offset);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    val.set(fields[i][0],  val.get(fields[i][1])-  offset);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    val.set(fields[i][0],  val.get(fields[i][1])-  offset);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
6	[BUG]  [BUGGY]  if(offset  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]  if(offset  ==  0)  {  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	if(offset  ==  0)  {	if  (offset  !=  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
7	[BUG]  [BUGGY]  if(offset  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]  if(offset  >=  0)  {  [BUGGY]  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	if(offset  >=  0)  {	if  (offset  !=  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
8	[BUG]  [BUGGY]    int  offset  =  val.getActualOffset(fields[i][0],  max);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    int  offset  =  val.getActualOffset(fields[i][0],  max);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    int  offset  =  val.getActualOffset(fields[i][0],  max);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
9	[BUG]  [BUGGY]    if(offset!=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])-  offset);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    if(offset!=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])-  offset);  }  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    if(offset!=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])-  offset);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
10	[BUG]  [BUGGY]    offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      AssertionFailedError  [CONTEXT]  }  if  (!offsetSet)  {  int  min  =  val.getActualMinimum(fields[i][0]);  int  max  =  val.getActualMaximum(fields[i][0]);  offset  =  val.get(fields[i][0])  -  min;  roundUp  =  offset  >  ((max  -  min)  /  2);  }    [BUGGY]    offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);  [BUGGY]  if  (offset  !=  0)  {  val.set(fields[i][0],  val.get(fields[i][0])  -  offset);  }  }  throw  new  IllegalArgumentException( "The  field   "  +  field  +   "  is  not  supported ");  }  [CLASS]  DateUtils  DateIterator  [METHOD]  modify  [RETURN_TYPE]  void  Calendar  val  int  field  boolean  round  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  done  offsetSet  round  roundUp  Calendar  c  cal1  cal2  date  endFinal  gval  rounded  spot  startFinal  truncated  val  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  time  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  j  max  millisecs  min  minutes  offset  seconds  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	    offset  =  val.get(fields[i][0])-  min;  roundUp  =  offset  >  ((  max  -  min)/  2);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	add
