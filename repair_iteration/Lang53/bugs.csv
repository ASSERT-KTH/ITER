bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (field == DateUtils.SEMI_MONTH) { [FE] AssertionFailedError [CONTEXT] val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { [BUGGY] if (field == DateUtils.SEMI_MONTH) { [BUGGY]    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	676	676	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { [BUGGY] [BUGGY] if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	676	676	1	add	
3	[BUG] [BUGGY] val.add(fields[i][0], 1); [FE] AssertionFailedError [CONTEXT]  if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   [BUGGY] val.add(fields[i][0], 1); [BUGGY] } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   [BUGGY] [BUGGY] val.add(fields[i][0], 1); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.7071067811865475	689	689	1	add	
5	[BUG] [BUGGY] if (date == null) { [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { [BUGGY] if (date == null) { [BUGGY] throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { [BUGGY] [BUGGY] if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	437	437	1	add	
7	[BUG] [BUGGY] Calendar gval = Calendar.getInstance(); [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] Calendar gval = Calendar.getInstance(); [BUGGY] gval.setTime(date); modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	440	440	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } [BUGGY] [BUGGY] Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	440	440	1	add	
9	[BUG] [BUGGY] gval.setTime(date); [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); [BUGGY] gval.setTime(date); [BUGGY] modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	441	441	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); [BUGGY] [BUGGY] gval.setTime(date); modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	441	441	1	add	
11	[BUG] [BUGGY] modify(gval, field, true); [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); [BUGGY] modify(gval, field, true); [BUGGY] return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); [BUGGY] [BUGGY] modify(gval, field, true); return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	442	442	1	add	
13	[BUG] [BUGGY] return gval.getTime(); [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, true); [BUGGY] return gval.getTime(); [BUGGY] } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Date round(Date date, int field) { if (date == null) { throw new IllegalArgumentException("The date must not be null"); } Calendar gval = Calendar.getInstance(); gval.setTime(date); modify(gval, field, true); [BUGGY] [BUGGY] return gval.getTime(); } [CLASS] DateUtils DateIterator [METHOD] round [RETURN_TYPE] Date  Date date int field [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean Calendar c cal1 cal2 endFinal gval spot startFinal long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	add	
15	[BUG] [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { [BUGGY] throw new ArithmeticException("Calendar value too large for accurate calculations"); } if (field == Calendar.MILLISECOND) { return; }     [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	621	621	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { [BUGGY] [BUGGY] if (val.get(Calendar.YEAR) > 280000000) { throw new ArithmeticException("Calendar value too large for accurate calculations"); } if (field == Calendar.MILLISECOND) { return; }     [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	621	621	1	add	
17	[BUG] [BUGGY] if (field == Calendar.MILLISECOND) { [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { if (val.get(Calendar.YEAR) > 280000000) { throw new ArithmeticException("Calendar value too large for accurate calculations"); } [BUGGY] if (field == Calendar.MILLISECOND) { [BUGGY] return; }       Date date = val.getTime(); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	625	625	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static void modify(Calendar val, int field, boolean round) { if (val.get(Calendar.YEAR) > 280000000) { throw new ArithmeticException("Calendar value too large for accurate calculations"); } [BUGGY] [BUGGY] if (field == Calendar.MILLISECOND) { return; }       Date date = val.getTime(); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	625	625	1	add	
19	[BUG] [BUGGY] Date date = val.getTime(); [FE] AssertionFailedError [CONTEXT] if (field == Calendar.MILLISECOND) { return; }       [BUGGY] Date date = val.getTime(); [BUGGY] long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (field == Calendar.MILLISECOND) { return; }       [BUGGY] [BUGGY] Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	635	635	1	add	
21	[BUG] [BUGGY] long time = date.getTime(); [FE] AssertionFailedError [CONTEXT] return; }       Date date = val.getTime(); [BUGGY] long time = date.getTime(); [BUGGY] boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	636	636	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return; }       Date date = val.getTime(); [BUGGY] [BUGGY] long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	636	636	1	add	
23	[BUG] [BUGGY] boolean done = false; [FE] AssertionFailedError [CONTEXT] }       Date date = val.getTime(); long time = date.getTime(); [BUGGY] boolean done = false; [BUGGY]   int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }       Date date = val.getTime(); long time = date.getTime(); [BUGGY] [BUGGY] boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	637	637	1	add	
25	[BUG] [BUGGY] int millisecs = val.get(Calendar.MILLISECOND); [FE] AssertionFailedError [CONTEXT]     Date date = val.getTime(); long time = date.getTime(); boolean done = false;  [BUGGY] int millisecs = val.get(Calendar.MILLISECOND); [BUGGY] if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	640	640	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     Date date = val.getTime(); long time = date.getTime(); boolean done = false;  [BUGGY] [BUGGY] int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	640	640	1	add	
27	[BUG] [BUGGY] if (!round || millisecs < 500) { [FE] AssertionFailedError [CONTEXT]    Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); [BUGGY] if (!round || millisecs < 500) { [BUGGY] time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	641	641	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); [BUGGY] [BUGGY] if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	641	641	1	add	
29	[BUG] [BUGGY] time = time - millisecs; [FE] AssertionFailedError [CONTEXT]   Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { [BUGGY] time = time - millisecs; [BUGGY] if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	642	642	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { [BUGGY] [BUGGY] time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	642	642	1	add	
31	[BUG] [BUGGY] if (field == Calendar.SECOND) { [FE] AssertionFailedError [CONTEXT]  Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; [BUGGY] if (field == Calendar.SECOND) { [BUGGY] done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	643	643	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  Date date = val.getTime(); long time = date.getTime(); boolean done = false;  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; [BUGGY] [BUGGY] if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	643	643	1	add	
33	[BUG] [BUGGY] int seconds = val.get(Calendar.SECOND); [FE] AssertionFailedError [CONTEXT]  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  [BUGGY] int seconds = val.get(Calendar.SECOND); [BUGGY] if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  [BUGGY] [BUGGY] int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	649	649	1	add	
35	[BUG] [BUGGY] if (!done && (!round || seconds < 30)) { [FE] AssertionFailedError [CONTEXT] int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); [BUGGY] if (!done && (!round || seconds < 30)) { [BUGGY] time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int millisecs = val.get(Calendar.MILLISECOND); if (!round || millisecs < 500) { time = time - millisecs; if (field == Calendar.SECOND) { done = true; } }  int seconds = val.get(Calendar.SECOND); [BUGGY] [BUGGY] if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	650	650	1	add	
37	[BUG] [BUGGY] int minutes = val.get(Calendar.MINUTE); [FE] AssertionFailedError [CONTEXT]  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  [BUGGY] int minutes = val.get(Calendar.MINUTE); [BUGGY] if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	658	658	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  [BUGGY] [BUGGY] int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	658	658	1	add	
39	[BUG] [BUGGY] if (!done && (!round || minutes < 30)) { [FE] AssertionFailedError [CONTEXT] int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); [BUGGY] if (!done && (!round || minutes < 30)) { [BUGGY] time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	659	659	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int seconds = val.get(Calendar.SECOND); if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); [BUGGY] [BUGGY] if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	659	659	1	add	
41	[BUG] [BUGGY] time = time - (minutes * 60000L); [FE] AssertionFailedError [CONTEXT] if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { [BUGGY] time = time - (minutes * 60000L); [BUGGY] }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	660	660	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!done && (!round || seconds < 30)) { time = time - (seconds * 1000L); if (field == Calendar.MINUTE) { done = true; } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { [BUGGY] [BUGGY] time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	660	660	1	add	
43	[BUG] [BUGGY] if (date.getTime() != time) { [FE] AssertionFailedError [CONTEXT] } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  [BUGGY] if (date.getTime() != time) { [BUGGY] date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	664	664	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  [BUGGY] [BUGGY] if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	664	664	1	add	
45	[BUG] [BUGGY] date.setTime(time); [FE] AssertionFailedError [CONTEXT] }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { [BUGGY] date.setTime(time); [BUGGY] val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	665	665	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { [BUGGY] [BUGGY] date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	665	665	1	add	
47	[BUG] [BUGGY] val.setTime(date); [FE] AssertionFailedError [CONTEXT]  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); [BUGGY] val.setTime(date); [BUGGY] }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  int minutes = val.get(Calendar.MINUTE); if (!done && (!round || minutes < 30)) { time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); [BUGGY] [BUGGY] val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	666	666	1	add	
49	[BUG] [BUGGY] boolean roundUp = false; [FE] AssertionFailedError [CONTEXT] time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  [BUGGY] boolean roundUp = false; [BUGGY] for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	670	670	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] time = time - (minutes * 60000L); }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  [BUGGY] [BUGGY] boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	670	670	1	add	
51	[BUG] [BUGGY] for (int i = 0; i < fields.length; i++) { [FE] AssertionFailedError [CONTEXT] }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; [BUGGY] for (int i = 0; i < fields.length; i++) { [BUGGY] for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; [BUGGY] [BUGGY] for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	671	671	1	add	
53	[BUG] [BUGGY] for (int j = 0; j < fields[i].length; j++) { [FE] AssertionFailedError [CONTEXT]  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { [BUGGY] for (int j = 0; j < fields[i].length; j++) { [BUGGY] if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { [BUGGY] [BUGGY] for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	672	672	1	add	
55	[BUG] [BUGGY] if (fields[i][j] == field) { [FE] AssertionFailedError [CONTEXT]  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { [BUGGY] if (fields[i][j] == field) { [BUGGY]  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (date.getTime() != time) { date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { [BUGGY] [BUGGY] if (fields[i][j] == field) {  if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	673	673	1	add	
57	[BUG] [BUGGY] if (round && roundUp) { [FE] AssertionFailedError [CONTEXT] date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [BUGGY] if (round && roundUp) { [BUGGY] if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	675	675	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] date.setTime(time); val.setTime(date); }  boolean roundUp = false; for (int i = 0; i < fields.length; i++) { for (int j = 0; j < fields[i].length; j++) { if (fields[i][j] == field) {  [BUGGY] [BUGGY] if (round && roundUp) { if (field == DateUtils.SEMI_MONTH) {    if (val.get(Calendar.DATE) == 1) { val.add(Calendar.DATE, 15); } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	675	675	1	add	
59	[BUG] [BUGGY] return; [FE] AssertionFailedError [CONTEXT] } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   val.add(fields[i][0], 1); } } [BUGGY] return; [BUGGY] } }  int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { val.add(Calendar.DATE, -15); val.add(Calendar.MONTH, 1); } } else {   val.add(fields[i][0], 1); } } [BUGGY] [BUGGY] return; } }  int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	692	692	1	add	
61	[BUG] [BUGGY] int offset = 0; [FE] AssertionFailedError [CONTEXT] } else {   val.add(fields[i][0], 1); } } return; } }  [BUGGY] int offset = 0; [BUGGY] boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	696	696	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else {   val.add(fields[i][0], 1); } } return; } }  [BUGGY] [BUGGY] int offset = 0; boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	696	696	1	add	
63	[BUG] [BUGGY] boolean offsetSet = false; [FE] AssertionFailedError [CONTEXT]   val.add(fields[i][0], 1); } } return; } }  int offset = 0; [BUGGY] boolean offsetSet = false; [BUGGY]  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	697	697	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   val.add(fields[i][0], 1); } } return; } }  int offset = 0; [BUGGY] [BUGGY] boolean offsetSet = false;  switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	697	697	1	add	
65	[BUG] [BUGGY] switch (field) { [FE] AssertionFailedError [CONTEXT] val.add(fields[i][0], 1); } } return; } }  int offset = 0; boolean offsetSet = false;  [BUGGY] switch (field) { [BUGGY] case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   if (offset >= 15) { offset -= 15; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] val.add(fields[i][0], 1); } } return; } }  int offset = 0; boolean offsetSet = false;  [BUGGY] [BUGGY] switch (field) { case DateUtils.SEMI_MONTH: if (fields[i][0] == Calendar.DATE) {    offset = val.get(Calendar.DATE) - 1;   if (offset >= 15) { offset -= 15; [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	699	699	1	add	
67	[BUG] [BUGGY] if (!offsetSet) { [FE] AssertionFailedError [CONTEXT]  offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } [BUGGY] if (!offsetSet) { [BUGGY] int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } [BUGGY] [BUGGY] if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	729	729	1	add	
69	[BUG] [BUGGY] int min = val.getActualMinimum(fields[i][0]); [FE] AssertionFailedError [CONTEXT] offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { [BUGGY] int min = val.getActualMinimum(fields[i][0]); [BUGGY] int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	730	730	1	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] offset = val.get(Calendar.HOUR_OF_DAY); if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { [BUGGY] [BUGGY] int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	730	730	1	add	
71	[BUG] [BUGGY] int max = val.getActualMaximum(fields[i][0]); [FE] AssertionFailedError [CONTEXT] if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); [BUGGY] int max = val.getActualMaximum(fields[i][0]); [BUGGY]  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	731	731	1	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (offset >= 12) { offset -= 12; } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); [BUGGY] [BUGGY] int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	731	731	1	add	
73	[BUG] [BUGGY] offset = val.get(fields[i][0]) - min; [FE] AssertionFailedError [CONTEXT] } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  [BUGGY] offset = val.get(fields[i][0]) - min; [BUGGY]  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported");  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	733	733	1	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } roundUp = offset > 6; offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  [BUGGY] [BUGGY] offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported");  [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	733	733	1	add	
75	[BUG] [BUGGY] roundUp = offset > ((max - min) / 2); [FE] AssertionFailedError [CONTEXT] offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  [BUGGY] roundUp = offset > ((max - min) / 2); [BUGGY] }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	735	735	1	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] offsetSet = true; } break; } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  [BUGGY] [BUGGY] roundUp = offset > ((max - min) / 2); }  if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	735	735	1	add	
77	[BUG] [BUGGY] if (offset != 0) { [FE] AssertionFailedError [CONTEXT] } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  [BUGGY] if (offset != 0) { [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  [BUGGY] [BUGGY] if (offset != 0) { val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	738	738	1	add	
79	[BUG] [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); [FE] AssertionFailedError [CONTEXT] if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); [BUGGY] } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	739	739	1	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!offsetSet) { int min = val.getActualMinimum(fields[i][0]); int max = val.getActualMaximum(fields[i][0]);  offset = val.get(fields[i][0]) - min;  roundUp = offset > ((max - min) / 2); }  if (offset != 0) { [BUGGY] [BUGGY] val.set(fields[i][0], val.get(fields[i][0]) - offset); } } throw new IllegalArgumentException("The field " + field + " is not supported"); } [CLASS] DateUtils DateIterator [METHOD] modify [RETURN_TYPE] void  Calendar val int field boolean round [VARIABLES] TimeZone UTC_TIME_ZONE int[][] fields boolean done offsetSet round roundUp Calendar c cal1 cal2 date endFinal gval rounded spot startFinal truncated val long MILLIS_PER_DAY MILLIS_PER_HOUR MILLIS_PER_MINUTE MILLIS_PER_SECOND time int MILLIS_IN_DAY MILLIS_IN_HOUR MILLIS_IN_MINUTE MILLIS_IN_SECOND RANGE_MONTH_MONDAY RANGE_MONTH_SUNDAY RANGE_WEEK_CENTER RANGE_WEEK_MONDAY RANGE_WEEK_RELATIVE RANGE_WEEK_SUNDAY SEMI_MONTH amount calendarField field i j max millisecs min minutes offset seconds Date date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.4082482904638631	739	739	1	add	
81	[BUG] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [FE] AssertionFailedError [CONTEXT] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [BUGGY]  [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.22360679774997896	45	45	1	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT"); [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.22360679774997896	45	45	1	add	
83	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public final static int SEMI_MONTH = 1001; [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.22360679774997896	73	73	1	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public final static int SEMI_MONTH = 1001; [CLASS] DateUtils DateIterator  [VARIABLES] 	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.22360679774997896	73	73	1	add	
