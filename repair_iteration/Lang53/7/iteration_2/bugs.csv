bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  gval.round(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(date,  field,  false);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field,  false);	  return    gval.round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  return  gval.round(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(date,  field  +  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  +  1);	  return    gval.round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  return  gval.round(date,  field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(date,  field,  true);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field,  true);	  return    gval.round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  gval.setTime(field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(field);	      gval.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  gval.setTime(date,  field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(date,  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(date,  field);	      gval.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  gval.setTime(year);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(year);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(year);	      gval.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  return  gval.round(field,  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(field,  field);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  field);	  return    gval.round(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  return  gval.round(this.calendarField,  field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(this.calendarField,  field);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(this.calendarField,  field);	  return    gval.round(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(new  Date(field,  field));  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  field));	      gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(new  Date(field),  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  field);	      gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  gval.setTime(new  Date(field  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(new  Date(field  +  1));  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field  +  1));	      gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.MILLISECOND,  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  1);	      gval.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  field);	      gval.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0L);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.MILLISECOND,  0L);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0L);	      gval.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(),  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(Calendar.getInstance(),  field);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(),  field);	  return    gval.round(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  return  gval.round(date.getTime());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(date.getTime());  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getTime());	  return    gval.round(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(Calendar.getInstance()  +  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance()  +  1);	  return    gval.round(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  return  gval.round(new  Date(field),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(new  Date(field),  field);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field),  field);	  return    gval.round(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  return  gval.round(new  Date(field,  field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(new  Date(field,  field));  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field,  field));	  return    gval.round(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  return  gval.round(new  Date(field  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(new  Date(field  +  1));  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field  +  1));	  return    gval.round(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  field);	      int[][]    fields    =    gval.getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  1);	      int[][]    fields    =    gval.getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  c);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  c);	      int[][]    fields    =    gval.getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  return  gval.round(day);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(day);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(day);	  return    gval.round(date);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.DATE,  field  +  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  +  1);	      gval.set(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.DATE,  field,  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  1);	      gval.set(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.DATE,  field,  false);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  false);	      gval.set(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.DATE,  field,  3);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  3);	      gval.set(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFields(field);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getFields(field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFields(field);	      int[][]    fields    =    gval.getFields();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  int[][]  fields  =  gval.getStartFields();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getStartFields();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getStartFields();	      int[][]    fields    =    gval.getFields();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  int[][]  fields  =  gval.getColumns();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getColumns();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getColumns();	      int[][]    fields    =    gval.getValues();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  int[][]  fields  =  gval.getAllFields();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getAllFields();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getAllFields();	      int[][]    fields    =    gval.getValues();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  1);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  false);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  false);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  date);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  date);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  return  gval.getSecond();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.getSecond();  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getSecond();	  return    gval.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  return  gval.getDate();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.getDate();  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getDate();	  return    gval.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setMillis(getChronology().round(date));  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date));	      gval.setMillis(getChronology().round(field));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setMillis(getChronology().round(field)+  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)+  1);	      gval.setMillis(getChronology().round(field));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field,  field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setMillis(getChronology().round(field,  field));  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field,  field));	      gval.setMillis(getChronology().round(field));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFieldNames();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getFieldNames();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFieldNames();	      int[][]    fields    =    gval.getValues();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  int[][]  fields  =  gval.getTime();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getTime();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getTime();	      int[][]    fields    =    gval.getValues();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  true);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(new  Date(field),  true);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  true);	      gval.setTime(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  0);	      int[][]    fields    =    gval.getChronology().round(field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field  +  1);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  0);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  0);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  return  gval.round(field  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(field  +  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field  +  1);	  return    gval.round(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  return  gval.round(new  Date(field)+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(new  Date(field)+  1);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field)+  1);	  return    gval.round(new    Date(field));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  gval.set(0,  field);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(0,  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  field);	      gval.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  return  gval.round(calendar.getTime());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(calendar.getTime());  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getTime());	  return    gval.round(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.DATE,  field  -  1);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  -  1);	      gval.set(Calendar.DATE,    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  gval.setTime(getMillis());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setTime(getMillis());  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(getMillis());	      gval.setTime(time);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setMillis(getChronology().round(field),  field);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field),  field);	      gval.setMillis(getChronology().round(field));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  3);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.set(Calendar.MILLISECOND,  3);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  3);	      gval.set(Calendar.MILLISECOND,    0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  return  gval.round(calendar.getInstance());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(calendar.getInstance());  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getInstance());	  return    gval.round(Calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  return  gval.getTimeInMillis();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.getTimeInMillis();  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getTimeInMillis();	  return    gval.getTime()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field),  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  gval.setMillis(getChronology().round(field),  0);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field),  0);	      gval.setMillis(getChronology().round(field));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  return  gval.round(field,  false);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(field,  false);  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  false);	  return    gval.round(field);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  return  gval.round(date,  field)+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  return  gval.round(date,  field)+  1;  [BUGGY]    }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field)+  1;	  return    gval.round(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology();  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology();	      int[][]    fields    =    gval.getFields();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(   "The  date  must  not  be  null   ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);    [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  2);  [BUGGY]    return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  2);	      int[][]    fields    =    gval.getChronology().round(this,    field);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
