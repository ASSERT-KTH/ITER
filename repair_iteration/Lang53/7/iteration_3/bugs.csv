bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[][]  fields  =  gval.getField(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getField(Calendar.DAY_OF_MONTH);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getField(Calendar.DAY_OF_MONTH);	  int[][]    fields    =    gval.getTime();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
2	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  -  1,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  -  1,  field);	  gval.set(Calendar.DATE,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  *  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  *  1);	  gval.set(Calendar.DATE,    field    -    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  2);	  gval.set(Calendar.DATE,    field,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
5	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  0,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field,  0,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  0,  1);	  gval.set(Calendar.DATE,    field,    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
6	[BUG]  [BUGGY]  return  gval.round(new  Date(date,  field));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(date,  field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(date,  field));	  return    gval.round(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  return  gval.round(new  Date(field,  field  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field,  field  +  1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field,  field  +  1));	  return    gval.round(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  return  gval.round(new  Date(field,  date));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field,  date));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field,  date));	  return    gval.round(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  return  gval.round(new  Date(field)/  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field)/  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field)/  1);	  return    gval.round(new    Date(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
10	[BUG]  [BUGGY]  return  gval.round(new  Date(field)+  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field)+  2);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field)+  2);	  return    gval.round(new    Date(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
11	[BUG]  [BUGGY]  return  gval.round(new  Date(field)+  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field)+  3);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field)+  3);	  return    gval.round(new    Date(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
12	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFields(field,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getFields(field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFields(field,  1);	  int[][]    fields    =    gval.getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  int[][]  fields  =  gval.round(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.round(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.round(field);	  int[][]    fields    =    gval.getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date,  field);	  int[][]    fields    =    gval.getChronology().round(this,    field,    date);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
15	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  0,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  0,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  0,  field);	  int[][]    fields    =    gval.getChronology().round(this,    field,    date);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
16	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  date,  MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  date,  MILLIS_PER_SECOND);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  date,  MILLIS_PER_SECOND);	  int[][]    fields    =    gval.getChronology().round(this,    field,    date);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
17	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  this.date);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  this.date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  this.date);	  int[][]    fields    =    gval.getChronology().round(this,    field,    date);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
18	[BUG]  [BUGGY]  return  gval.round(date,  field  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field  +  2);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  +  2);	  return    gval.round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  return  gval.round(date,  field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field  +  1,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  +  1,  field);	  return    gval.round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  return  gval.round(date,  field  +  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field  +  3);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  +  3);	  return    gval.round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  gval.setTime(dayOfMonth,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(dayOfMonth,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(dayOfMonth,  field);	  gval.setTime(field);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  0,  field);	  int[][]    fields    =    gval.getChronology().round(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
23	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0,  field.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  0,  field.length);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  0,  field.length);	  int[][]    fields    =    gval.getChronology().round(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
24	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  3);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  3);	  int[][]    fields    =    gval.getChronology().round(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  return  gval.round(new  Date(field),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field),  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field),  field  +  1);	  return    gval.round(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  return  gval.round(new  Date(field),  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field),  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field),  field,  false);	  return    gval.round(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  true);	  int[][]    fields    =    gval.getChronology().round(this,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
28	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date,  false);	  int[][]    fields    =    gval.getChronology().round(this,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
29	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  false,  date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  false,  date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  false,  date);	  int[][]    fields    =    gval.getChronology().round(this,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
30	[BUG]  [BUGGY]  return  gval.round(day,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(day,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(day,  field);	  return    gval.round(day);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  return  gval.round(year);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(year);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(year);	  return    gval.round(day);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  gval.setTime(field,  date);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(field,  date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(field,  date);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  gval.setTime(date,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(date,  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(date,  field  +  1);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  gval.setTime(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(date,  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(date,  field,  false);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date),  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date),  field);	  gval.setMillis(getChronology().round(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
36	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date,  field),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date,  field),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date,  field),  field);	  gval.setMillis(getChronology().round(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
37	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field),  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field),  field  +  1);	  gval.setMillis(getChronology().round(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
38	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(cal1),  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(cal1),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(cal1),  field);	  gval.setMillis(getChronology().round(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
39	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  +  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  fields);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  fields);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  field,  2);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date),  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date),  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
44	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date,  field),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date,  field),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date,  field),  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
45	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field),  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field),  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field),  1);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
46	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(cal1_year,  field),  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(cal1_year,  field),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(cal1_year,  field),  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
47	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  2);	  gval.set(Calendar.MILLISECOND,    3);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
48	[BUG]  [BUGGY]  return  gval.round(field,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  field  +  1);	  return    gval.round(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  return  gval.round(field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field  +  1,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field  +  1,  field);	  return    gval.round(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
50	[BUG]  [BUGGY]  return  gval.round(field  +  1L);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field  +  1L);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field  +  1L);	  return    gval.round(field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
51	[BUG]  [BUGGY]  gval.setMillis(getMillis());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getMillis());  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getMillis());	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
52	[BUG]  [BUGGY]  gval.setTime(getMillis(),  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(getMillis(),  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(getMillis(),  field);	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
53	[BUG]  [BUGGY]  gval.setTime(getMillis()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(getMillis()  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(getMillis()  +  1);	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
54	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  2);	  int[][]    fields    =    gval.getChronology().round(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
55	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  true);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
56	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  +  1,  false);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
57	[BUG]  [BUGGY]  int[][]  fields  =  gval.getCalendarFields();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getCalendarFields();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getCalendarFields();	  int[][]    fields    =    gval.getAllFields();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
58	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  3);	  int[][]    fields    =    gval.getChronology().round(this,    field,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
59	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  4);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field,  4);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field,  4);	  int[][]    fields    =    gval.getChronology().round(this,    field,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
60	[BUG]  [BUGGY]  return  gval.round(field,  true);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  true);	  return    gval.round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
61	[BUG]  [BUGGY]  return  gval.round(year,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(year,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(year,  false);	  return    gval.round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
62	[BUG]  [BUGGY]  return  gval.round(date,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  false);	  return    gval.round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
63	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date,  field));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date,  field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date,  field));	  gval.setMillis(getChronology().round(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field,  cal1));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field,  cal1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field,  cal1));	  gval.setMillis(getChronology().round(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field,  date));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field,  date));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field,  date));	  gval.setMillis(getChronology().round(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
66	[BUG]  [BUGGY]  int[][]  fields  =  gval.getEndFields();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getEndFields();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getEndFields();	  int[][]    fields    =    gval.getStartFields();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
67	[BUG]  [BUGGY]  int[][]  fields  =  field.getStartFields();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  field.getStartFields();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  field.getStartFields();	  int[][]    fields    =    gval.getStartFields();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field  +  2);	  int[][]    fields    =    gval.getChronology().round(this,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
69	[BUG]  [BUGGY]  return  gval.round(calendar.getTime(),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(calendar.getTime(),  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getTime(),  field);	  return    gval.round(calendar.getTime());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
70	[BUG]  [BUGGY]  return  gval.round(calendar.getTime()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(calendar.getTime()  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getTime()  +  1);	  return    gval.round(calendar.getTime());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
71	[BUG]  [BUGGY]  return  gval.round(calendar.getTime()  +  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(calendar.getTime()  +  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getTime()  +  field);	  return    gval.round(calendar.getTime());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
72	[BUG]  [BUGGY]  gval.round(date,  field,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.round(date,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.round(date,  field,  false);	  return    gval.round(date,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  return  gval.round(year,  field,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(year,  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(year,  field,  true);	  return    gval.round(date,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  return  gval.round(day,  field,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(day,  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(day,  field,  true);	  return    gval.round(date,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]  return  gval.getTimeInMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getTimeInMillis()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getTimeInMillis()  +  1;	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
76	[BUG]  [BUGGY]  return  gval.getTimeInMillis()  +  field;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getTimeInMillis()  +  field;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getTimeInMillis()  +  field;	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
77	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  +  1,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  +  1,  field);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  +  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  +  2);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
79	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstanceUTC());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstanceUTC());  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstanceUTC());	  return    gval.round(Calendar.getInstance()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
80	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(0));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(0));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(0));	  return    gval.round(Calendar.getInstance()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
81	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(1));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(1));	  return    gval.round(Calendar.getInstance()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  return  gval.round(year,  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(year,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(year,  field);	  return    gval.round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  return  gval.round(field,  cal1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  cal1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  cal1);	  return    gval.round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  return  gval.round(new  Date(field  +  1),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field  +  1),  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field  +  1),  field);	  return    gval.round(new    Date(field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
85	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  false);	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
86	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field),  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  field),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  field),  true);	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
87	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  false));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  false));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  false));	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
88	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(),  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(),  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(),  field  +  1);	  return    gval.round(Calendar.getInstance(),    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(),  field,  false);	  return    gval.round(Calendar.getInstance(),    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(),  field,  true);	  return    gval.round(Calendar.getInstance(),    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(Calendar.getInstance(),  field,  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(Calendar.getInstance(),  field,  1);	  return    gval.round(Calendar.getInstance(),    field);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  gval.round(date,  field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.round(date,  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.round(date,  field,  true);	  return    gval.round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  return  gval.round(date,  FieldUtils.safeNegate(field),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  FieldUtils.safeNegate(field),  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  FieldUtils.safeNegate(field),  false);	  return    gval.round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  return  gval.round(date,  FieldUtils.safeMultiply(field),  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  FieldUtils.safeMultiply(field),  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  FieldUtils.safeMultiply(field),  false);	  return    gval.round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  return  gval.round(date,  field)+  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field)+  2;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field)+  2;	  return    gval.round(date,    field)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
96	[BUG]  [BUGGY]  return  gval.round(date,  field)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field)/  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field)/  1;	  return    gval.round(date,    field)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  return  gval.round(date,  field)+  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field)+  3;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field)+  3;	  return    gval.round(date,    field)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
98	[BUG]  [BUGGY]  return  gval.round(this.calendarField,  field,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(this.calendarField,  field,  false);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(this.calendarField,  field,  false);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
99	[BUG]  [BUGGY]  return  gval.round(this.calendarField,  field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(this.calendarField,  field  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(this.calendarField,  field  +  1);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
100	[BUG]  [BUGGY]  return  gval.round(this.calendarField,  field,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(this.calendarField,  field,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(this.calendarField,  field,  true);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
101	[BUG]  [BUGGY]  return  gval.round(field,  this.calendarField);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  this.calendarField);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  this.calendarField);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  field  +  1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  field  +  1));	  gval.setTime(new    Date(field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
103	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  field  +  1);	  gval.setTime(new    Date(field    +    1));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
104	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0L  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0L  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0L  +  1);	  gval.set(Calendar.MILLISECOND,    0L);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  return  gval.round(calendar.getInstance(),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(calendar.getInstance(),  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(calendar.getInstance(),  field);	  return    gval.round(calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
106	[BUG]  [BUGGY]  return  gval.round(date.getInstance());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date.getInstance());  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getInstance());	  return    gval.round(calendar.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
107	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field,  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field,  4);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field,  4);	  gval.set(Calendar.DATE,    field,    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
108	[BUG]  [BUGGY]  return  gval.setTime(date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.setTime(date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.setTime(date);	  return    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)/  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)/  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)/  1);	  gval.setMillis(getChronology().round(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
110	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)+  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)+  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)+  2);	  gval.setMillis(getChronology().round(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
111	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)+  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)+  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)+  3);	  gval.setMillis(getChronology().round(field)+    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
112	[BUG]  [BUGGY]  return  gval.getSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getSecond()  +  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getSecond()  +  1;	  return    gval.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
113	[BUG]  [BUGGY]  return  gval.getStart();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getStart();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getStart();	  return    gval.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
114	[BUG]  [BUGGY]  int[][]  fields  =  c.getChronology().round(gval,  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  c.getChronology().round(gval,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  c.getChronology().round(gval,  field);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
115	[BUG]  [BUGGY]  int[][]  fields  =  c.getChronology().round(field,  gval);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  c.getChronology().round(field,  gval);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  c.getChronology().round(field,  gval);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
116	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(c,  field);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(c,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(c,  field);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
117	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  cal1);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  cal1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  cal1);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
118	[BUG]  [BUGGY]  gval.setTime(year,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(year,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(year,  field);	  gval.setTime(year);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
119	[BUG]  [BUGGY]  return  gval.round(date.getTime(),  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date.getTime(),  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getTime(),  field);	  return    gval.round(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
120	[BUG]  [BUGGY]  return  gval.round(date.getTime()  +  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date.getTime()  +  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getTime()  +  field);	  return    gval.round(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
121	[BUG]  [BUGGY]  return  gval.round(date.getTime()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date.getTime()  +  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getTime()  +  1);	  return    gval.round(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
122	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(date)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(date)+  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(date)+  1);	  gval.setMillis(getChronology().round(date));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
123	[BUG]  [BUGGY]  gval.set(0,  field  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(0,  field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  field  +  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
124	[BUG]  [BUGGY]  gval.set(0,  field,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(0,  field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  field,  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
125	[BUG]  [BUGGY]  gval.set(0,  field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(0,  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  field,  false);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
126	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  field,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  field,  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  field,  false);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
127	[BUG]  [BUGGY]  int[][]  fields  =  gval.getRows();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getRows();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getRows();	  int[][]    fields    =    gval.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
128	[BUG]  [BUGGY]  int[][]  fields  =  gval.getSeconds();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getSeconds();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getSeconds();	  int[][]    fields    =    gval.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
129	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  field),  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  field),  false);	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
130	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(date,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(date,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(date,  field);	  int[][]    fields    =    gval.getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
131	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(year,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(year,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(year,  field);	  int[][]    fields    =    gval.getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
132	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(cal1  +  field,  field);	  int[][]    fields    =    gval.getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
133	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFieldNames(field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getFieldNames(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFieldNames(field);	  int[][]    fields    =    gval.getFieldNames();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
134	[BUG]  [BUGGY]  return  gval.round(date,  field  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field  *  1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  *  1);	  return    gval.round(date,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)/  2,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)/  2,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)/  2,  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
136	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)+  1,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)+  1,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)+  1,  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
137	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFields(field,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getFields(field,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFields(field,  0);	  int[][]    fields    =    gval.getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
138	[BUG]  [BUGGY]  int[][]  fields  =  gval.getFields(field  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getFields(field  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getFields(field  +  1);	  int[][]    fields    =    gval.getFields(field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeNegate(field),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeNegate(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeNegate(field),  false);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
140	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeMultiply(field),  false);	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
141	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  *  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field  *  1);	  int[][]    fields    =    gval.getChronology().round(this,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
142	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  field  +  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  field  +  3);	  int[][]    fields    =    gval.getChronology().round(this,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
143	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field,  0));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field,  0));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field,  0));	  gval.setMillis(getChronology().round(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
144	[BUG]  [BUGGY]  if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }  else  {  gval.setMillis(getMillis());  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }  else  {  gval.setMillis(getMillis());  }  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }  else  {  gval.setMillis(getMillis());  }	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
145	[BUG]  [BUGGY]  if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	if(getMillis()!=  field)  {  gval.setMillis(getMillis());  }	  gval.setTime(getMillis());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
146	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date,  1);	  int[][]    fields    =    gval.getChronology().round(this,    field,    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
147	[BUG]  [BUGGY]  int[][]  fields  =  gval.getStartFieldNames();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getStartFieldNames();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getStartFieldNames();	  int[][]    fields    =    gval.getFieldNames();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
148	[BUG]  [BUGGY]  return  gval.getTimeInMillis(field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getTimeInMillis(field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getTimeInMillis(field);	  return    gval.getTimeInMillis();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
149	[BUG]  [BUGGY]  return  gval.round(field,  false,  date);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  false,  date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  false,  date);	  return    gval.round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
150	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  cal2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  cal2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  cal2);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
151	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeMultiply(field),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeMultiply(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeMultiply(field),  false);	  int[][]    fields    =    gval.getChronology().round(this,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  gval.set(0,  field  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(0,  field  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  field  -  1);	  gval.set(0,    field);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
153	[BUG]  [BUGGY]  gval.setTime(new  Date(field  +  1),  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field  +  1),  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field  +  1),  true);	  gval.setTime(new    Date(field),    true);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
154	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  999);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  999);	  gval.set(Calendar.MILLISECOND,    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
155	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  date);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
156	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  0);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
157	[BUG]  [BUGGY]  int[][]  fields  =  gval.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getTimeZone();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getTimeZone();	  int[][]    fields    =    gval.getTime();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
158	[BUG]  [BUGGY]  int[][]  fields  =  gval.getTimeZone(field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getTimeZone(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getTimeZone(field);	  int[][]    fields    =    gval.getTime();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
159	[BUG]  [BUGGY]  return  gval.round(field,  date);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  date);	  return    gval.round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
160	[BUG]  [BUGGY]  gval.setTime(round);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(round);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(round);	  gval.setTime(field);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
161	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  FieldUtils.safeNegate(field)));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
162	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  date));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  date));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  date));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
163	[BUG]  [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field,  FieldUtils.safeMultiply(field)));	  gval.setTime(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
164	[BUG]  [BUGGY]  return  gval.round(new  Date(field,  FieldUtils.safeNegate(field)));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field,  FieldUtils.safeNegate(field)));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field,  FieldUtils.safeNegate(field)));	  return    gval.round(new    Date(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date,  0);	  int[][]    fields    =    gval.getChronology().round(this,    field,    0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
166	[BUG]  [BUGGY]  int[][]  fields  =  gval.getStartFields(field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getStartFields(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getStartFields(field);	  int[][]    fields    =    gval.getStartFields();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
167	[BUG]  [BUGGY]  int[][]  fields  =  gval.getStartFinal();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getStartFinal();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getStartFinal();	  int[][]    fields    =    gval.getStartFields();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
168	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  field  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  field  +  3);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  field  +  3);	  gval.set(Calendar.DATE,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
169	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  date);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  date);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  date);	  int[][]    fields    =    gval.getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  gval);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(field,  gval);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(field,  gval);	  int[][]    fields    =    gval.getChronology().round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  return  this.calendarField.round(gval,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  this.calendarField.round(gval,  field);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  this.calendarField.round(gval,  field);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
172	[BUG]  [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.MILLISECOND,  0,  field  -  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.MILLISECOND,  0,  field  -  1);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
173	[BUG]  [BUGGY]  gval.set(0,  0,  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(0,  0,  field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(0,  0,  field);	  gval.set(Calendar.MILLISECOND,    0,    field);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
174	[BUG]  [BUGGY]  return  gval.round(new  Date(field),  date);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(new  Date(field),  date);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(new  Date(field),  date);	  return    gval.round(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
175	[BUG]  [BUGGY]  return  gval.getFirstDayOfMonth();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.getFirstDayOfMonth();  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.getFirstDayOfMonth();	  return    gval.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
176	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology(field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology(field);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology(field);	  int[][]    fields    =    gval.getChronology();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
177	[BUG]  [BUGGY]  return  gval.round(cal1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(cal1);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(cal1);	  return    gval.getDate();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
178	[BUG]  [BUGGY]  gval.setTime(new  Date(field),  this.calendarField);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(new  Date(field),  this.calendarField);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(new  Date(field),  this.calendarField);	  gval.setTime(new    Date(field),    field);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
179	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(cal1  +  field,  0);	  int[][]    fields    =    gval.getChronology().round(field,    0);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
180	[BUG]  [BUGGY]  return  gval.round(date,  field)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field)-  1;  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field)-  1;	  return    gval.round(date,    field)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
181	[BUG]  [BUGGY]  gval.setTime(dayOfMonth);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(dayOfMonth);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(dayOfMonth);	  gval.setTime(field);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
182	[BUG]  [BUGGY]  int[][]  fields  =  gval.getCalendarFieldNames();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getCalendarFieldNames();  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getCalendarFieldNames();	  int[][]    fields    =    gval.getFieldNames();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
183	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(cal1  +  field,  1);	  int[][]    fields    =    gval.getChronology().round(field,    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
184	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date  +  1);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date  +  1);	  int[][]    fields    =    gval.getChronology().round(this,    field    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
185	[BUG]  [BUGGY]  gval.setTime(getChronology().round(date));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(getChronology().round(date));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(getChronology().round(date));	  gval.setMillis(getChronology().round(date));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
186	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field,  -1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field,  -1));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field,  -1));	  gval.setMillis(getChronology().round(field,    field));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
187	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  date,  2);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  date,  2);	  int[][]    fields    =    gval.getChronology().round(this,    field,    2);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
188	[BUG]  [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.set(Calendar.DATE,  FieldUtils.safeNegate(field));  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.set(Calendar.DATE,  FieldUtils.safeNegate(field));	  gval.set(Calendar.DATE,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
189	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeNegate(field),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeNegate(field),  false);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(this,  FieldUtils.safeNegate(field),  false);	  int[][]    fields    =    gval.getChronology().round(this,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
190	[BUG]  [BUGGY]  gval.setTime(date,  field,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setTime(date,  field,  true);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setTime(date,  field,  true);	  gval.setTime(date,    field);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
191	[BUG]  [BUGGY]  return  gval.round(this.calendarField,  field,  this.endFinal);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(this.calendarField,  field,  this.endFinal);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(this.calendarField,  field,  this.endFinal);	  return    gval.round(this.calendarField,    field);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
192	[BUG]  [BUGGY]  gval.setMillis(getChronology().round(field)-  1,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  gval.setMillis(getChronology().round(field)-  1,  0);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	gval.setMillis(getChronology().round(field)-  1,  0);	  gval.setMillis(getChronology().round(field),    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
193	[BUG]  [BUGGY]  return  gval.round(date,  field  +  1,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  field  +  1,  true);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  field  +  1,  true);	  return    gval.round(date,    field,    true);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
194	[BUG]  [BUGGY]  return  gval.round(field,  false,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  false,  null);  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  false,  null);	  return    gval.round(field,    false);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
195	[BUG]  [BUGGY]  return  gval.round(field,  cal1.get(field));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(field,  cal1.get(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(field,  cal1.get(field));	  return    gval.round(field,    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
196	[BUG]  [BUGGY]  return  gval.round(date.getTime()  +  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date.getTime()  +  FieldUtils.safeNegate(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date.getTime()  +  FieldUtils.safeNegate(field));	  return    gval.round(date.getTime());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
197	[BUG]  [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  int[][]  fields  =  gval.getChronology().round(cal1  +  field,  c);  [BUGGY]      return  gval.getTime();  }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	int[][]  fields  =  gval.getChronology().round(cal1  +  field,  c);	  int[][]    fields    =    gval.getChronology().round(field,    c);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
198	[BUG]  [BUGGY]  return  gval.round(date,  FieldUtils.safeNegate(field));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  FieldUtils.safeNegate(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  FieldUtils.safeNegate(field));	  return    gval.round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
199	[BUG]  [BUGGY]  return  gval.round(date,  FieldUtils.safeMultiply(field));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  Date  round(Date  date,  int  field)  {  if  (date  ==  null)  {  throw  new  IllegalArgumentException(     "The  date  must  not  be  null     ");  }  Calendar  gval  =  Calendar.getInstance();  gval.setTime(date);  modify(gval,  field,  true);      [BUGGY]  return  gval.round(date,  FieldUtils.safeMultiply(field));  [BUGGY]      }  [CLASS]  DateUtils  DateIterator  [METHOD]  round  [RETURN_TYPE]  Date  Date  date  int  field  [VARIABLES]  TimeZone  UTC_TIME_ZONE  int[][]  fields  boolean  Calendar  c  cal1  cal2  endFinal  gval  spot  startFinal  long  MILLIS_PER_DAY  MILLIS_PER_HOUR  MILLIS_PER_MINUTE  MILLIS_PER_SECOND  int  MILLIS_IN_DAY  MILLIS_IN_HOUR  MILLIS_IN_MINUTE  MILLIS_IN_SECOND  RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  amount  calendarField  field  i  Date  date  	projects/Lang53/src/java/org/apache/commons/lang/time/DateUtils.java	0.5773502691896258	443	443	1	replace	return  gval.round(date,  FieldUtils.safeMultiply(field));	  return    gval.round(date,    field,    false);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
