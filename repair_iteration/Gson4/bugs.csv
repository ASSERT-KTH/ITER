bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalStateException( "JSON must start with an array or an object."); [FE] MalformedJsonException [CONTEXT] private void beforeValue(boolean root) throws IOException { switch (peek()) { case NONEMPTY_DOCUMENT: if (!lenient) { throw new IllegalStateException( "JSON must have only one top-level value."); }  case EMPTY_DOCUMENT: // first in document if (!lenient && !root) { [BUGGY] throw new IllegalStateException(   "JSON must start with an array or an object."); [BUGGY] "JSON must start with an array or an object."); } replaceTop(NONEMPTY_DOCUMENT); break; case EMPTY_ARRAY: // first in array replaceTop(NONEMPTY_ARRAY); newline(); break;  [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  boolean root [VARIABLES] boolean htmlSafe lenient root serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS replacements String closeBracket deferredName indent name openBracket replacement separator string value Writer out int context empty i last length newTop nonempty size stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	623	624	3	replace	
2	[BUG] [BUGGY] [FE] MalformedJsonException [CONTEXT] private void beforeValue(boolean root) throws IOException { switch (peek()) { case NONEMPTY_DOCUMENT: if (!lenient) { throw new IllegalStateException( "JSON must have only one top-level value."); }  case EMPTY_DOCUMENT: // first in document if (!lenient && !root) { [BUGGY] [BUGGY] throw new IllegalStateException(   "JSON must start with an array or an object."); "JSON must start with an array or an object."); } replaceTop(NONEMPTY_DOCUMENT); break; case EMPTY_ARRAY: // first in array replaceTop(NONEMPTY_ARRAY); newline(); break;  [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  boolean root [VARIABLES] boolean htmlSafe lenient root serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS replacements String closeBracket deferredName indent name openBracket replacement separator string value Writer out int context empty i last length newTop nonempty size stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.5773502691896258	623	624	3	add	
3	[BUG] [BUGGY] checkLenient(); [FE] MalformedJsonException [CONTEXT] } return peeked = PEEKED_DOUBLE_QUOTED; case '[': return peeked = PEEKED_BEGIN_ARRAY; case '{': return peeked = PEEKED_BEGIN_OBJECT; default: pos--; // Don't consume the first character in a literal value. } if (stackSize == 1) { [BUGGY] checkLenient(); [BUGGY] } int result = peekKeyword(); if (result != PEEKED_NONE) { return result; } result = peekNumber(); if (result != PEEKED_NONE) { return result; [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	
4	[BUG] [BUGGY] [FE] MalformedJsonException [CONTEXT] } return peeked = PEEKED_DOUBLE_QUOTED; case '[': return peeked = PEEKED_BEGIN_ARRAY; case '{': return peeked = PEEKED_BEGIN_OBJECT; default: pos--; // Don't consume the first character in a literal value. } if (stackSize == 1) { [BUGGY] [BUGGY] checkLenient(); } int result = peekKeyword(); if (result != PEEKED_NONE) { return result; } result = peekNumber(); if (result != PEEKED_NONE) { return result; [CLASS] JsonReader 1 [METHOD] doPeek [RETURN_TYPE] int  [VARIABLES] boolean lenient Reader in int[] pathIndices stack String peekedString String[] pathNames long MIN_INCOMPLETE_INTEGER peekedLong int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c limit lineNumber lineStart p peekStack peeked peekedNumberLength pos result stackSize char[] NON_EXECUTE_PREFIX buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	add	
5	[BUG] [BUGGY] throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); [FE] MalformedJsonException [CONTEXT] private void checkLenient() throws IOException { if (!lenient) { [BUGGY] throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); [BUGGY] } } [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	
6	[BUG] [BUGGY] [FE] MalformedJsonException [CONTEXT] private void checkLenient() throws IOException { if (!lenient) { [BUGGY] [BUGGY] throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"); } } [CLASS] JsonReader 1 [METHOD] checkLenient [RETURN_TYPE] void  [VARIABLES] boolean charsLoaded fitsInLong lenient negative throwOnEof Reader in int[] newPathIndices newStack pathIndices stack String keyword keywordUpper peekedString result String[] newPathNames pathNames long MIN_INCOMPLETE_INTEGER newValue peekedLong result value int NUMBER_CHAR_DECIMAL NUMBER_CHAR_DIGIT NUMBER_CHAR_EXP_DIGIT NUMBER_CHAR_EXP_E NUMBER_CHAR_EXP_SIGN NUMBER_CHAR_FRACTION_DIGIT NUMBER_CHAR_NONE NUMBER_CHAR_SIGN PEEKED_BEGIN_ARRAY PEEKED_BEGIN_OBJECT PEEKED_BUFFERED PEEKED_DOUBLE_QUOTED PEEKED_DOUBLE_QUOTED_NAME PEEKED_END_ARRAY PEEKED_END_OBJECT PEEKED_EOF PEEKED_FALSE PEEKED_LONG PEEKED_NONE PEEKED_NULL PEEKED_NUMBER PEEKED_SINGLE_QUOTED PEEKED_SINGLE_QUOTED_NAME PEEKED_TRUE PEEKED_UNQUOTED PEEKED_UNQUOTED_NAME c count i l last length limit lineNumber lineStart minimum newTop p peekStack peeked peekedNumberLength peeking pos result stackSize start total char[] NON_EXECUTE_PREFIX buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	add	
7	[BUG] [BUGGY] writeDeferredName(); [FE] MalformedJsonException [CONTEXT] public JsonWriter value(boolean value) throws IOException { [BUGGY] writeDeferredName(); [BUGGY] beforeValue(false); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value [VARIABLES] boolean htmlSafe lenient serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS String closeBracket deferredName indent name openBracket separator value Writer out int context empty newTop nonempty stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.20412414523193154	465	465	3	replace	
8	[BUG] [BUGGY] [FE] MalformedJsonException [CONTEXT] public JsonWriter value(boolean value) throws IOException { [BUGGY] [BUGGY] writeDeferredName(); beforeValue(false); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value [VARIABLES] boolean htmlSafe lenient serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS String closeBracket deferredName indent name openBracket separator value Writer out int context empty newTop nonempty stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.20412414523193154	465	465	3	add	
9	[BUG] [BUGGY] beforeValue(false); [FE] MalformedJsonException [CONTEXT] public JsonWriter value(boolean value) throws IOException { writeDeferredName(); [BUGGY] beforeValue(false); [BUGGY] out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value [VARIABLES] boolean htmlSafe lenient serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS String closeBracket deferredName indent name openBracket separator value Writer out int context empty newTop nonempty stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.20412414523193154	466	466	3	replace	
10	[BUG] [BUGGY] [FE] MalformedJsonException [CONTEXT] public JsonWriter value(boolean value) throws IOException { writeDeferredName(); [BUGGY] [BUGGY] beforeValue(false); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value [VARIABLES] boolean htmlSafe lenient serializeNulls value int[] newStack stack String[] HTML_SAFE_REPLACEMENT_CHARS REPLACEMENT_CHARS String closeBracket deferredName indent name openBracket separator value Writer out int context empty newTop nonempty stackSize topOfStack  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.20412414523193154	466	466	3	add	
