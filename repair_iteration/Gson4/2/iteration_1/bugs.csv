bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  [CE]  <identifier>  expected  [FE]    MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  checkLenient();  }	checkLenient();  	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  if(lenient)  {  checkLenient();  }  [CE]  orphaned  case  [FE]      MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(lenient)  {  checkLenient();  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  checkLenient();  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
3	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]        MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  checkLenient();  }  else  {  throw  new  IllegalArgumentException( " ");  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
4	[BUG]  [BUGGY]  if(!lenient)  {  checkLenient();  }  [CE]  orphaned  case  [FE]          MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(!lenient)  {  checkLenient();  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient)  {  checkLenient();  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
5	[BUG]  [BUGGY]  if(stackSize  >  1)  {  checkLenient();  }  [CE]  orphaned  case  [FE]            MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(stackSize  >  1)  {  checkLenient();  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >  1)  {  checkLenient();  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
6	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  else  {  peekedString();  }  [CE]  orphaned  case  [FE]              MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(stackSize  ==  1)  {  checkLenient();  }  else  {  peekedString();  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  checkLenient();  }  else  {  peekedString();  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
7	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]    [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	  	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
8	[BUG]  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  return  result;  }  [CE]  orphaned  case  [FE]    MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  return  result;  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  return  result;  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
9	[BUG]  [BUGGY]  checkLenient(stackSize);  [CE]  orphaned  case  [FE]      MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  checkLenient(stackSize);  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize);	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
10	[BUG]  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  break;  }  [CE]  orphaned  case  [FE]        MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  break;  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  break;  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
11	[BUG]  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  }  [CE]  orphaned  case  [FE]          MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  checkLenient();  }  else  {  System.arraycopy(pathNames,  0,  stack,  peekedString,  pathNames[stackSize]);  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
12	[BUG]  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  throw  new  JsonMappingException( " ");  }  [CE]  orphaned  case  [FE]            MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  if(lenient)  {  checkLenient();  }  else  {  throw  new  JsonMappingException( " ");  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  checkLenient();  }  else  {  throw  new  JsonMappingException( " ");  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
13	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  orphaned  case  [FE]    MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Throwable  t)  {  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
14	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  }  [CE]  orphaned  case  [FE]      MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ioe)  {  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
15	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  orphaned  case  [FE]        MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
16	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]          MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
17	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  }  [CE]  orphaned  case  [FE]            MalformedJsonException  [CONTEXT]  }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {  [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  }  [BUGGY]  }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Exception  e)  {  }	checkLenient();  	non-compiled	[CE]  orphaned  case	3	None	replace
