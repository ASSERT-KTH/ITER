bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
2	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
3	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
4	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
5	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
6	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
7	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
8	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
9	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
10	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
11	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]  +  1);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]  +  1);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
12	[BUG]  [BUGGY]  checkLenient(pathIndices);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathIndices);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathIndices);	  checkLenient(peeks);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
13	[BUG]  [BUGGY]  checkLenient(pathIndices,  pathNames);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathIndices,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathIndices,  pathNames);	  checkLenient(peeks);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
14	[BUG]  [BUGGY]  checkLenient(peekedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  pathNames);	  checkLenient(peeks);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
15	[BUG]  [BUGGY]  checkLenient(paths);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(paths);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(paths);	  checkLenient(peeks);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
16	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize])  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
17	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0])  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
18	[BUG]  [BUGGY]  safeMultiply(pathNames,  stack[stackSize])  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  stack[stackSize])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  stack[stackSize])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
19	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[peekedSize])  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[peekedSize])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[peekedSize])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
20	[BUG]  [BUGGY]  safeMultiply(pathIndices,  peekedString,  pathNames[stackSize])  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathIndices,  peekedString,  pathNames[stackSize])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathIndices,  peekedString,  pathNames[stackSize])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
21	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    stack,    peekedString,    pathNames[stackSize]);    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
22	[BUG]  [BUGGY]  parent  ==  null  ||  peekedLong)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedLong)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedLong)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    stack,    peekedString,    pathNames[stackSize]);    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
23	[BUG]  [BUGGY]  Parent  <?>  parent  ==  null  ||  lenient)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  <?>  parent  ==  null  ||  lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  <?>  parent  ==  null  ||  lenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    stack,    peekedString,    pathNames[stackSize]);    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
24	[BUG]  [BUGGY]  readFully();  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readFully();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readFully();	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
25	[BUG]  [BUGGY]  readString();  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readString();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readString();	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
26	[BUG]  [BUGGY]  readLong();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLong();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLong();	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
27	[BUG]  [BUGGY]  readFully(stackSize);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readFully(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readFully(stackSize);	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
28	[BUG]  [BUGGY]  readStructure();  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readStructure();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readStructure();	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
29	[BUG]  [BUGGY]  readFully(peekedString);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readFully(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readFully(peekedString);	  read();    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
30	[BUG]  [BUGGY]  allowNegated(false);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(false);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(false);	  allowNegated(true);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
31	[BUG]  [BUGGY]  allowNegated(true,  peekedString);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(true,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(true,  peekedString);	  allowNegated(true);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
32	[BUG]  [BUGGY]  enableNegated(false);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegated(false);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegated(false);	  allowNegated(true);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
33	[BUG]  [BUGGY]  allowNegated(true,  peeked);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(true,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(true,  peeked);	  allowNegated(true);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
34	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
35	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
36	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
37	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
38	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
39	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
40	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
41	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  checkLenient(t);  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  checkLenient(t);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  checkLenient(t);  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
42	[BUG]  [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
43	[BUG]  [BUGGY]  try  {  checkLenient(t,  pos);  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(t,  pos);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(t,  pos);  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
44	[BUG]  [BUGGY]  try  {  checkLenient(0);  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(0);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(0);  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
45	[BUG]  [BUGGY]  try  {  checkLenient(t);  }  catch(Exception  t)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(t);  }  catch(Exception  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(t);  }  catch(Exception  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
46	[BUG]  [BUGGY]  CheckState(stackSize  ==  1)||!lenient  &&  peeked.length  >  0)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(stackSize  ==  1)||!lenient  &&  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(stackSize  ==  1)||!lenient  &&  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
47	[BUG]  [BUGGY]  CheckState(!lenient  &&  peeked.length  >  0)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(!lenient  &&  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(!lenient  &&  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
48	[BUG]  [BUGGY]  CheckState(!lenient  &&  peeked.length  >  0);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(!lenient  &&  peeked.length  >  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(!lenient  &&  peeked.length  >  0);	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
49	[BUG]  [BUGGY]  CheckState(!lenient,  peeked.length  >  0);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(!lenient,  peeked.length  >  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(!lenient,  peeked.length  >  0);	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
50	[BUG]  [BUGGY]  CheckState(!lenient,  peeked.length  >  0)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(!lenient,  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(!lenient,  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
51	[BUG]  [BUGGY]  safeAdd(peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString,  PEEKED_SINGLE_QUOTED);	  safeNumber();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  safeAdd(peekedString,  PEEKED_SINGLE_QUOTED_NAME);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString,  PEEKED_SINGLE_QUOTED_NAME);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString,  PEEKED_SINGLE_QUOTED_NAME);	  safeNumber();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
53	[BUG]  [BUGGY]  safeAdd(peekedString.length(),  peekedLong.length());  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString.length(),  peekedLong.length());  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString.length(),  peekedLong.length());	  safeNumber();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
54	[BUG]  [BUGGY]  safeAdd(stackSize);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(stackSize);	  safeNumber();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.split( ": ");  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.split( ": ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.split( ": ");	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
56	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split(pathNames);  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split(pathNames);	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
57	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split(pathNames,   ": ");  [CE]  illegal  start  of  expression  [FE]                                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split(pathNames,   ": ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split(pathNames,   ": ");	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
58	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split( ": "+stackSize);  [CE]  illegal  start  of  expression  [FE]                                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split( ": "+stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split( ": "+stackSize);	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
59	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split(PEEKED_SINGLE_QUOTED);  [CE]  illegal  start  of  expression  [FE]                                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split(PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split(PEEKED_SINGLE_QUOTED);	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
60	[BUG]  [BUGGY]  while(pos  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(pos  ==  0)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(pos  ==  0)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
61	[BUG]  [BUGGY]  while(pos  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(pos  ==  1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(pos  ==  1)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
62	[BUG]  [BUGGY]  while(pos  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(pos  >=  0)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(pos  >=  0)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
63	[BUG]  [BUGGY]  while(pos  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(pos  >=  1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(pos  >=  1)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
64	[BUG]  [BUGGY]  bucket  <  =  0;  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  =  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  =  0;	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
65	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(pathNames);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(pathNames);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
66	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(peekedString);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
67	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedString);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(pathIndices,  peekedString);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
68	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(peekedString,  pathNames);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
69	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(pathNames,  peekedString);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(pathNames,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(pathNames,  peekedString);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
70	[BUG]  [BUGGY]  pendInt(peekedString,  peekedLong)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedString,  peekedLong)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedString,  peekedLong)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  pendInt(peeked,  peekedLong)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  peekedLong)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  peekedLong)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  pendInt(peekedLong,  peekedSize)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  peekedSize)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  peekedSize)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  pendInt(peekedLong,  stackSize)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  stackSize)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  stackSize)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  pendInt(peekSize,  peekedLong)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekSize,  peekedLong)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekSize,  peekedLong)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  pendInt(pos,  peekedLong)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(pos,  peekedLong)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(pos,  peekedLong)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  bucket(0)  {  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(0)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(0)  {  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  bucket(1)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  bucket(0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(0)  {  throw  new  IllegalArgumentException( " ");  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  bucket(2)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(2)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(2)  {  checkLenient();  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  bucket(stackSize);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(stackSize);	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  bucketStack.push(peekedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  pathNames);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
82	[BUG]  [BUGGY]  bucketStack.push(pathNames,  peekedString);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(pathNames,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(pathNames,  peekedString);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
83	[BUG]  [BUGGY]  bucketStack.push(stackSize,  peekedString);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize,  peekedString);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
84	[BUG]  [BUGGY]  bucketStack.push(peekedString,  pathIndices);  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  pathIndices);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  pathIndices);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
85	[BUG]  [BUGGY]  bucketStack.push(peedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peedString,  pathNames);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
86	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2]);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1]);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
87	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  3]);  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  3]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1]);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
88	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1]);  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1]);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
89	[BUG]  [BUGGY]  try  {  return  null;  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(Throwable  e)  {  }	  try    {    break;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
90	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e)  {  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e)  {	  try    {    break;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
91	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
92	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
93	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
94	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(JsonMappingException  e)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(JsonMappingException  e)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(JsonMappingException  e)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	throw  new  IllegalArgumentException( " ");	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
96	[BUG]  [BUGGY]  try  {  }  catch(IOException  e)  {  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(IOException  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(IOException  e)  {  }	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
97	[BUG]  [BUGGY]  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	catch(Throwable  e)  {  }	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
98	[BUG]  [BUGGY]  pendString(pathNames,  peekedString);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(pathNames,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(pathNames,  peekedString);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
99	[BUG]  [BUGGY]  pendString(stackSize,  pathNames);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(stackSize,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(stackSize,  pathNames);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
100	[BUG]  [BUGGY]  pendString(peekedString,  pathNames,  pos);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peekedString,  pathNames,  pos);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peekedString,  pathNames,  pos);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
101	[BUG]  [BUGGY]  pendString(peekedString,  pathNames,  STACKSIZE);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peekedString,  pathNames,  STACKSIZE);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peekedString,  pathNames,  STACKSIZE);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
102	[BUG]  [BUGGY]  pendString(peekedString,  pathNames,  1);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peekedString,  pathNames,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peekedString,  pathNames,  1);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
103	[BUG]  [BUGGY]  pendString(peedString,  pathNames,  pos);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peedString,  pathNames,  pos);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peedString,  pathNames,  pos);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
104	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
105	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
106	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
107	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack,  pathIndices[0]);  break;  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack,  pathIndices[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack,  pathIndices[0]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(JsonNullException  ioe)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(JsonNullException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(JsonNullException  ioe)  {  }	  try    {    checkLenient();    }    catch(JsonNullException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
111	[BUG]  [BUGGY]  try  {  break;  }  catch(JsonNullException  ioe)  {  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(JsonNullException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(JsonNullException  ioe)  {  }	  try    {    checkLenient();    }    catch(JsonNullException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
112	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  peekLenient();  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent  ==  peekLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent  ==  peekLenient();	  parent!=    null    &&    parent    ==    peekLenient();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
113	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  peekStackSize();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent  ==  peekStackSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent  ==  peekStackSize();	  parent!=    null    &&    parent    ==    peekLenient();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
114	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  peekedLenient();  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent  ==  peekedLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent  ==  peekedLenient();	  parent!=    null    &&    parent    ==    peekLenient();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
115	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  checkLenient();  }	  parent    ==    null    ||    lenient)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
116	[BUG]  [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked)  {  checkLenient();  }	  parent    ==    null    ||    lenient)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
117	[BUG]  [BUGGY]  parent  ==  null  ||  peekSize)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekSize)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekSize)  {  checkLenient();  }	  parent    ==    null    ||    lenient)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
118	[BUG]  [BUGGY]  parent  ==  null  ||  peeked.length)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked.length)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked.length)  {  checkLenient();  }	  parent    ==    null    ||    lenient)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
119	[BUG]  [BUGGY]  piedLong  =  peekIndices[pos  +  1];  [CE]  illegal  start  of  expression  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  peekIndices[pos  +  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  peekIndices[pos  +  1];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
120	[BUG]  [BUGGY]  piedLong  =  pathIndices[pos];  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  pathIndices[pos];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  pathIndices[pos];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
121	[BUG]  [BUGGY]  piedLong  =  peekIndices[pos  -  1];  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  peekIndices[pos  -  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  peekIndices[pos  -  1];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
122	[BUG]  [BUGGY]  piedLong  =  peekIndices[pos++];  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  peekIndices[pos++];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  peekIndices[pos++];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
123	[BUG]  [BUGGY]  piedLong  =  peekIndices[pos]  -  1;  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  peekIndices[pos]  -  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  peekIndices[pos]  -  1;	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
124	[BUG]  [BUGGY]  piedLong  =  peekIndices[pos]  +  1;  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  peekIndices[pos]  +  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  peekIndices[pos]  +  1;	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
125	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
126	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  return  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  unclosed  character  literal  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  return  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  return  checkLenient();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
127	[BUG]  [BUGGY]  try  {  return  peekedLenient();  }  catch(Throwable  t)  {  }  [CE]  unclosed  character  literal  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLenient();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
128	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(Throwable  t)  {  }  [CE]  unclosed  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
129	[BUG]  [BUGGY]  try  {  return  peekedLong();  }  catch(Throwable  t)  {  }  [CE]  unclosed  character  literal  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
130	[BUG]  [BUGGY]  try  {  return  peekedLong.length();  }  catch(Throwable  t)  {  }  [CE]  unclosed  character  literal  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong.length();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong.length();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
131	[BUG]  [BUGGY]  safeNumberIfNull(pathNames,  peekedString[pos])  {  [CE]  unclosed  character  literal  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames,  peekedString[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames,  peekedString[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  unclosed  character  literal	111	None	replace
132	[BUG]  [BUGGY]  safeNumberIfNull(pathNames[pos])  {  [CE]  unclosed  character  literal  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  unclosed  character  literal	111	None	replace
133	[BUG]  [BUGGY]  safeNumber(pathNames[pos])  {  [CE]  unclosed  character  literal  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  unclosed  character  literal	111	None	replace
134	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [CE]  unclosed  character  literal  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  unclosed  character  literal	90	None	replace
135	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [CE]  unclosed  character  literal  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  unclosed  character  literal	90	None	replace
136	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
137	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
138	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
139	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
140	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[0]);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[0]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
141	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[pos]);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[pos]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
142	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
143	[BUG]  [BUGGY]  pendIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  pathNames,  peekedLong[stackSize]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
144	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[1]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[1]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
145	[BUG]  [BUGGY]  pendIndices(in,  stack,  pathNames,  peekedString[stackSize]);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  pathNames,  peekedString[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  pathNames,  peekedString[stackSize]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
146	[BUG]  [BUGGY]  parent  ==  null)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null)  {  checkLenient();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
147	[BUG]  [BUGGY]  parent!=  null)  {  checkContent();  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null)  {  checkContent();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null)  {  checkContent();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
148	[BUG]  [BUGGY]  parent!=  null)  {  checkNew();  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null)  {  checkNew();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null)  {  checkNew();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
149	[BUG]  [BUGGY]  parent!=  null)  {  checkMonth();  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null)  {  checkMonth();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null)  {  checkMonth();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
150	[BUG]  [BUGGY]  allowIndices(in,  stack,  pathNames[stackSize]);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  stack,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  stack,  pathNames[stackSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
151	[BUG]  [BUGGY]  allowIndices(in,  peekedString,  pathNames[stackSize]);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedString,  pathNames[stackSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
152	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  pathNames[0]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  pathNames[0]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
153	[BUG]  [BUGGY]  allowIndices(pathNames,  in,  peekedLong[stackSize]);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  in,  peekedLong[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  in,  peekedLong[stackSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
154	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  pathNames[peekSize]);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  pathNames[peekSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  pathNames[peekSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
155	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize  -  1,  peekedLong));  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize  -  1,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize  -  1,  peekedLong));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
156	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize()  -  1,  peekedLong));  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize()  -  1,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize()  -  1,  peekedLong));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
157	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedString));  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedString));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  1,  peekedString));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
158	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  +  1,  peekedLong));  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  +  1,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  +  1,  peekedLong));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
159	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong  +  1));  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong  +  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong  +  1));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
160	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong),  pathNames);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong),  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  1,  peekedLong),  pathNames);	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
161	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
162	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[4],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
163	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
164	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
166	[BUG]  [BUGGY]  bucketStack.push(new  Integer(0));  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(0));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(0));	  bucketStack.push(new    Integer(PEEKED_DOUBLE_QUOTED));    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
167	[BUG]  [BUGGY]  bucketStack.push(new  Integer(stackSize));  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(stackSize));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(stackSize));	  bucketStack.push(new    Integer(PEEKED_DOUBLE_QUOTED));    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
168	[BUG]  [BUGGY]  bucketStack.push(new  Integer(peeked));  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(peeked));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(peeked));	  bucketStack.push(new    Integer(PEEKED_DOUBLE_QUOTED));    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
169	[BUG]  [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
170	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
171	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices!=  null)  {  return  pathIndices;  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices!=  null)  {  return  pathIndices;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices!=  null)  {  return  pathIndices;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
172	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split( ": ");  if(pathIndices!=  null)  {  return  pathIndices;  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split( ": ");  if(pathIndices!=  null)  {  return  pathIndices;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split( ": ");  if(pathIndices!=  null)  {  return  pathIndices;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
173	[BUG]  [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
174	[BUG]  [BUGGY]  int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices  ==  null)  {  return  pathIndices;  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices  ==  null)  {  return  pathIndices;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  peekedString.split( "n ");  if(pathIndices  ==  null)  {  return  pathIndices;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
175	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  else  {  peekedString  =  pathNames[stackSize];  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
176	[BUG]  [BUGGY]  checkLenient(stackSize,  peeked);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  peeked);	  checkLenient(peeked);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
177	[BUG]  [BUGGY]  checkLenient(pathNames,  peeked);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  peeked);	  checkLenient(peeked);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
178	[BUG]  [BUGGY]  try  {  checkIndices();  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkIndices();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkIndices();  }  catch(Throwable  e)  {  }	  try    {    checkLenient();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
179	[BUG]  [BUGGY]  enableNegatives();  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegatives();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegatives();	  allowNegatives();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
180	[BUG]  [BUGGY]  letNegatives();  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNegatives();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNegatives();	  allowNegatives();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
181	[BUG]  [BUGGY]  validateNegatives();  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  validateNegatives();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	validateNegatives();	  allowNegatives();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
182	[BUG]  [BUGGY]  allowNegative();  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegative();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegative();	  allowNegatives();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
183	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  pathSize[stackSize]));  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  pathSize[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  pathSize[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
184	[BUG]  [BUGGY]  allowIndices(int,  peekedString,  pathNames[stackSize]));  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(int,  peekedString,  pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(int,  peekedString,  pathNames[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
185	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  peekedLong[stackSize]));  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  peekedLong[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  peekedLong[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
186	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  pathNames[stackSize]));  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  pathNames[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
187	[BUG]  [BUGGY]  luate(stackSize);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
188	[BUG]  [BUGGY]  luate(stackSize,  1);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  1);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
189	[BUG]  [BUGGY]  append(stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  append(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	append(stackSize  -  1);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
190	[BUG]  [BUGGY]  luate(stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize  -  1);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
191	[BUG]  [BUGGY]  luate(stackSize,  0);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  0);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
192	[BUG]  [BUGGY]  append(stackSize  -  1,  peeked);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  append(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	append(stackSize  -  1,  peeked);	  luate();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
193	[BUG]  [BUGGY]  allowNegatives(false)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false)  {  checkLenient();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
194	[BUG]  [BUGGY]  allowNegatives(false)  {  checkStandard();  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false)  {  checkStandard();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false)  {  checkStandard();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
195	[BUG]  [BUGGY]  letNegatives(false)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNegatives(false)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNegatives(false)  {  checkLenient();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
196	[BUG]  [BUGGY]  allowNegatives(false)  {  checkStackSize();  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false)  {  checkStackSize();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false)  {  checkStackSize();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
197	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[0]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
198	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[pos]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
199	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
200	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
201	[BUG]  [BUGGY]  allowNegatives(true,  peekedString);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(true,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(true,  peekedString);	  allowNegatives(true);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
202	[BUG]  [BUGGY]  allowNegatives(false,  peekedString);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  peekedString);	  allowNegatives(true);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
203	[BUG]  [BUGGY]  allowNegatives(true,  peeked);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(true,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(true,  peeked);	  allowNegatives(true);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
204	[BUG]  [BUGGY]  allowNegatives(false,  peeked);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  peeked);	  allowNegatives(true);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
205	[BUG]  [BUGGY]  try  {  return  checkIndices();  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkIndices();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkIndices();  }  catch(Throwable  t)  {  }	  try    {    checkIndices();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
206	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  checkIndices();  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  checkIndices();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  checkIndices();  }  catch(Throwable  t)  {  }	  try    {    checkIndices();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
207	[BUG]  [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  }	  try    {    checkIndices();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
208	[BUG]  [BUGGY]  try  {  throw  new  JsonException( " ");  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonException( " ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonException( " ");  }  catch(Throwable  t)  {  }	  try    {    checkIndices();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
209	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
210	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
211	[BUG]  [BUGGY]  try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
212	[BUG]  [BUGGY]  try  {  peekedLong();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  peekedLong();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  peekedLong();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
213	[BUG]  [BUGGY]  while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
214	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
215	[BUG]  [BUGGY]  try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
216	[BUG]  [BUGGY]  try  {  return  peeked.getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked.getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked.getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
217	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
218	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
219	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
220	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathIndices[1]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathIndices[1]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathIndices[1]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
221	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[0]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[0]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[0]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
222	[BUG]  [BUGGY]  parent!=  null  &&  peeked.equals(pathIndices[0]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked.equals(pathIndices[0]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked.equals(pathIndices[0]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
223	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(pathIndices[0]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent.equals(pathIndices[0]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent.equals(pathIndices[0]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
224	[BUG]  [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
225	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
226	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
227	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
228	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
229	[BUG]  [BUGGY]  try  {  pos--;  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(Exception  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
230	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
231	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]));  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
232	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " "  +  pathNames[stackSize]);  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " "  +  pathNames[stackSize]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " "  +  pathNames[stackSize]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
233	[BUG]  [BUGGY]  reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
234	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[1]));  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[1]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[1]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
235	[BUG]  [BUGGY]  safeNumber(stackSize);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(stackSize);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
236	[BUG]  [BUGGY]  safeNumber(peekedString);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(peekedString);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
237	[BUG]  [BUGGY]  safeNumberIfNull(stackSize);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(stackSize);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
238	[BUG]  [BUGGY]  safeNumberIfNull(pathNames);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
239	[BUG]  [BUGGY]  readLenient(stackSize);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(stackSize);	  readLenient();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
240	[BUG]  [BUGGY]  readLenient(peekedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(peekedString,  pathNames);	  readLenient();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
241	[BUG]  [BUGGY]  readLenient(stackSize,  1);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(stackSize,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(stackSize,  1);	  readLenient();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
242	[BUG]  [BUGGY]  reader.readLenient();  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader.readLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader.readLenient();	  readLenient();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
243	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathNames[0]);  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathNames[0]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
244	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathNames[pos]);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathNames[pos]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
245	[BUG]  [BUGGY]  pendIndices.add(pathNames[stackSize]);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[stackSize]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
246	[BUG]  [BUGGY]  pendIndices.add(pathNames,  stack[stackSize]);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames,  stack[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames,  stack[stackSize]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
247	[BUG]  [BUGGY]  pendIndices.add(peek,  pathNames[stackSize]);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peek,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peek,  pathNames[stackSize]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
248	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathNames[1]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathNames[1]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
249	[BUG]  [BUGGY]  try  {  checkDelimiter();  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkDelimiter();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkDelimiter();  }  catch(Throwable  t)  {  }	  try    {    checkLenient();    }    catch(Exception    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
250	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(ThrowsException  t)  {  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(ThrowsException  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(ThrowsException  t)  {  }	  try    {    checkLenient();    }    catch(Exception    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
251	[BUG]  [BUGGY]  allowNegatives(2)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(2)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(2)  {  checkLenient();  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
252	[BUG]  [BUGGY]  allowNegatives(1)  {  checkStackSize();  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1)  {  checkStackSize();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1)  {  checkStackSize();  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
253	[BUG]  [BUGGY]  allowNegatives(1);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1);	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
254	[BUG]  [BUGGY]  allowNegatives(1)  {  checkStandard();  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1)  {  checkStandard();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1)  {  checkStandard();  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
255	[BUG]  [BUGGY]  letNegatives(1)  {  checkLenient();  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNegatives(1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNegatives(1)  {  checkLenient();  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
256	[BUG]  [BUGGY]  allowNegatives(1)  {  checkIndices();  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1)  {  checkIndices();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1)  {  checkIndices();  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
257	[BUG]  [BUGGY]  try  {  }  catch(Exception  t)  {  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Exception  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Exception  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
258	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Thread.currentThread().interrupt();	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
259	[BUG]  [BUGGY]  try  {  }  catch(JsonNullException  t)  {  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNullException  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNullException  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
260	[BUG]  [BUGGY]  try  {  }  catch(JsonStringException  t)  {  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringException  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringException  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
261	[BUG]  [BUGGY]  try  {  }  catch(JsonNull  t)  {  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNull  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNull  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
262	[BUG]  [BUGGY]  try  {  }  catch(IOException  t)  {  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(IOException  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(IOException  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
263	[BUG]  [BUGGY]  try  {  return  peekedLenient();  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLenient();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLenient();  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
264	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
265	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
266	[BUG]  [BUGGY]  try  {  return  peekedLenient();  }  catch(Exception  e)  {  }  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLenient();  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLenient();  }  catch(Exception  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
267	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(Exception  e)  {  }  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(Exception  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
268	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(Exception  e)  {  }  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(Exception  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
269	[BUG]  [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
270	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
271	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    pathIndices,    stack,    peekedString,    pathNames[stackSize]);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
272	[BUG]  [BUGGY]  bucket(1)  {  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
273	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
274	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_QUOTED  &&  clearTreeTree();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
275	[BUG]  [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED  ||  clearTreeTree();  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED  ||  clearTreeTree();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  NUMBER_CHAR_QUOTED  ||  clearTreeTree();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
276	[BUG]  [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER  ||  clearTreeTree();  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER  ||  clearTreeTree();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  MIN_INCOMPLETE_INTEGER  ||  clearTreeTree();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
277	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekSize();  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekSize();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
278	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekedLong();  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekedLong();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  ||  peekedLong();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
279	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED  ||  peekSize();  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED  ||  peekSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_QUOTED  ||  peekSize();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
280	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
281	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
282	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
283	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
284	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
285	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
286	[BUG]  [BUGGY]  bucketStack.push(stackSize);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize);	  bucketStack.push(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
287	[BUG]  [BUGGY]  bucketStack.push(pathNames[pos]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(pathNames[pos]);	  bucketStack.push(peekedString);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
288	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IllegalArgumentException  iae)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(IllegalArgumentException  iae)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IllegalArgumentException  iae)  {  throw  new  JsonMappingException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
289	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
290	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  -  1]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  -  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  -  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
291	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  +  1]);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  +  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  +  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
292	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ],  peekedString);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ],  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ],  peekedString);	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
293	[BUG]  [BUGGY]  throw  new  JsonMappingException( " ");  [CE]  illegal  start  of  expression  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  throw  new  JsonMappingException( " ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	throw  new  JsonMappingException( " ");	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
294	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
295	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "Malformed  JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "Malformed  JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "Malformed  JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
296	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMappingException: "  +  t.getMessage());  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
297	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t.getMessage());  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t.getMessage());  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
298	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
299	[BUG]  [BUGGY]  allowIndices(in,  peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedString,  PEEKED_SINGLE_QUOTED);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
300	[BUG]  [BUGGY]  allowIndices(in,  pathNames,  peekedLong);  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  pathNames,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  pathNames,  peekedLong);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
301	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  pathNames);  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  pathNames);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
302	[BUG]  [BUGGY]  allowIndices(in,  peekedString,  pathNames);  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedString,  pathNames);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
303	[BUG]  [BUGGY]  allowIndices(in,  peekedString,  PEEKED_BUFFERED);  [CE]  illegal  start  of  expression  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedString,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedString,  PEEKED_BUFFERED);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
304	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  pathNames.length);  [CE]  illegal  start  of  expression  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  pathNames.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  pathNames.length);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
305	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
306	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
307	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
308	[BUG]  [BUGGY]  parent!=  null  &&  peeked.equals(pathIndices[pos]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked.equals(pathIndices[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked.equals(pathIndices[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
309	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(pathIndices[pos]))  {  checkLenient();  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent.equals(pathIndices[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent.equals(pathIndices[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
310	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[stackSize]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
311	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
312	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathIndices[stackSize]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
313	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack,  pathIndices[0]);  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack,  pathIndices[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack,  pathIndices[0]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
314	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[2]);  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[2]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
315	[BUG]  [BUGGY]  bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED));  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED));	  bucketStack.push(new    Integer(PEEKED_BUFFERED));    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
316	[BUG]  [BUGGY]  bucketStack.push(new  Integer(peekedString,  PEEKED_BUFFERED));  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(peekedString,  PEEKED_BUFFERED));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(peekedString,  PEEKED_BUFFERED));	  bucketStack.push(new    Integer(PEEKED_BUFFERED));    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
317	[BUG]  [BUGGY]  bucketStack.push(stackSize  -  1);  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize  -  1);	  bucketStack.push(peeked);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
318	[BUG]  [BUGGY]  bucketStack.push(stackSize,  peeked);  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize,  peeked);	  bucketStack.push(peeked);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
319	[BUG]  [BUGGY]  parent  ==  null  &&  lenient  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
320	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
321	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
322	[BUG]  [BUGGY]  parent  ==  null  ||  peeked.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
323	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]).return;  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
324	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  pathNames[1]).return;  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  pathNames[1]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  pathNames[1]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
325	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]).return;  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[1]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
326	[BUG]  [BUGGY]  safeMultiply(pathNames[stackSize]).return;  [CE]  illegal  start  of  expression  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[stackSize]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[stackSize]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
327	[BUG]  [BUGGY]  try  {  }  catch(Exception  ioe)  {  }  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Exception  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Exception  ioe)  {  }	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
328	[BUG]  [BUGGY]  try  {  }  catch(Throwable  ioe)  {  }  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  ioe)  {  }	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
329	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	throw  new  IllegalStateException( " ");	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
330	[BUG]  [BUGGY]  attempt  {  }  catch(IOException  ioe)  {  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  attempt  {  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	attempt  {  }  catch(IOException  ioe)  {  }	  try    {    break;    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
331	[BUG]  [BUGGY]  bucketStack.push(new  Integer(pos,  PEEKED_BUFFERED));  [CE]  illegal  start  of  expression  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(pos,  PEEKED_BUFFERED));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(pos,  PEEKED_BUFFERED));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
332	[BUG]  [BUGGY]  bucketStack.push(new  Integer(stackSize,  pos));  [CE]  illegal  start  of  expression  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(stackSize,  pos));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(stackSize,  pos));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
333	[BUG]  [BUGGY]  bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED,  pos));  [CE]  illegal  start  of  expression  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED,  pos));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(PEEKED_SINGLE_QUOTED,  pos));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
334	[BUG]  [BUGGY]  bucketStack.push(new  Integer(peeked,  pos));  [CE]  illegal  start  of  expression  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(peeked,  pos));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(peeked,  pos));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
335	[BUG]  [BUGGY]  attempt  {  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  attempt  {  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	attempt  {  }  catch(Throwable  e)  {  }	  try    {    break;    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
336	[BUG]  [BUGGY]  try  {  return;  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return;  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return;  }  catch(Throwable  e)  {  }	  try    {    break;    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
337	[BUG]  [BUGGY]  try  {  return  null;  }  catch(Exception  e)  {  }  [CE]  illegal  start  of  expression  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(Exception  e)  {  }	  try    {    break;    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
338	[BUG]  [BUGGY]  pendInt(peekedString,  peekedLong);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedString,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedString,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
339	[BUG]  [BUGGY]  pendInt(peekedLong,  stackSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  stackSize);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
340	[BUG]  [BUGGY]  pendInt(peekedLong,  stack);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  stack);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
341	[BUG]  [BUGGY]  pendLong(peekedString,  peekedLong);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendLong(peekedString,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendLong(peekedString,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
342	[BUG]  [BUGGY]  pendInt(0,  peekedLong);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(0,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(0,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
343	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  1;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  stackSize  =  stack.size()  -  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  stackSize  =  stack.size()  -  1;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  	34	None	replace
344	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  +  1;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  stackSize  =  stack.size()  +  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  stackSize  =  stack.size()  +  1;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  	34	None	replace
345	[BUG]  [BUGGY]  int  stackSize  =  pathIndices.size();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  stackSize  =  pathIndices.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  stackSize  =  pathIndices.size();	  int    stackSize    =    stack.size();    	non-compiled	[CE]  	34	None	replace
346	[BUG]  [BUGGY]  int  stackSize  =  stack.size()  -  2;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  stackSize  =  stack.size()  -  2;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  stackSize  =  stack.size()  -  2;	  int    stackSize    =    stack.size();    	non-compiled	[CE]  	34	None	replace
347	[BUG]  [BUGGY]  int  stackSize  =  stack.length();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  stackSize  =  stack.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  stackSize  =  stack.length();	  int    stackSize    =    stack.size();    	non-compiled	[CE]  	34	None	replace
348	[BUG]  [BUGGY]  if(!lenient  &&  peekedString!=  null)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedString!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedString!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
349	[BUG]  [BUGGY]  if(!lenient  &&  peekedLong  ==  null)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedLong  ==  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedLong  ==  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
350	[BUG]  [BUGGY]  if(!lenient  ||  peekedLong!=  null)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  ||  peekedLong!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  ||  peekedLong!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
351	[BUG]  [BUGGY]  if(!lenient  &&  peekedInt!=  null)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedInt!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedInt!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
352	[BUG]  [BUGGY]  if(!lenient  &&  peekedLong.length  >  0)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedLong.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedLong.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
353	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
354	[BUG]  [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
355	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
356	[BUG]  [BUGGY]  parent  ==  null  ||  stackSize)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  stackSize)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  stackSize)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
357	[BUG]  [BUGGY]  parent  ==  null  ||  peekedLong)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedLong)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedLong)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
358	[BUG]  [BUGGY]  luate(pathNames,  peekedString,  PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  peekedString,  PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  peekedString,  PEEKED_DOUBLE_QUOTED);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
359	[BUG]  [BUGGY]  luate(stackSize,  PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  PEEKED_DOUBLE_QUOTED);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
360	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_BUFFERED);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
361	[BUG]  [BUGGY]  luate(pathNames,  SINGLE_QUOTED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  SINGLE_QUOTED);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
362	[BUG]  [BUGGY]  luate(pathNames,  peekedString);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  peekedString);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
363	[BUG]  [BUGGY]  luate(peekedString,  pathNames,  PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(peekedString,  pathNames,  PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(peekedString,  pathNames,  PEEKED_DOUBLE_QUOTED);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
364	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
365	[BUG]  [BUGGY]  bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
366	[BUG]  [BUGGY]  BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
367	[BUG]  [BUGGY]  bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
368	[BUG]  [BUGGY]  bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
369	[BUG]  [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	94	None	replace
370	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  sweepLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  sweepLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  sweepLenient();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
371	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  sweepLenient();  }  else  {  peekedString();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  sweepLenient();  }  else  {  peekedString();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  sweepLenient();  }  else  {  peekedString();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
372	[BUG]  [BUGGY]  if(stackSize  >  1)  {  sweepLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  >  1)  {  sweepLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >  1)  {  sweepLenient();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
373	[BUG]  [BUGGY]  if(stackSize  >  1)  {  sweepLenient();  }  else  {  peekedString();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  >  1)  {  sweepLenient();  }  else  {  peekedString();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >  1)  {  sweepLenient();  }  else  {  peekedString();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
374	[BUG]  [BUGGY]  if(stackSize  >=  1)  {  sweepLenient();  }  else  {  peekedString();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  >=  1)  {  sweepLenient();  }  else  {  peekedString();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  >=  1)  {  sweepLenient();  }  else  {  peekedString();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
375	[BUG]  [BUGGY]  if(stackSize  ==  2)  {  sweepLenient();  }  else  {  peekedString();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  2)  {  sweepLenient();  }  else  {  peekedString();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  2)  {  sweepLenient();  }  else  {  peekedString();  }	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
376	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  2]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  2]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
377	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
378	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  2]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  2]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
379	[BUG]  [BUGGY]  parent  ==  null  ||  peekSize)  {  checkLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekSize)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekSize)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    	non-compiled	[CE]  	125	None	replace
380	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  checkKeyword();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  checkKeyword();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  checkKeyword();	  parent    ==    null    ||    lenient)    {    checkLenient();    	non-compiled	[CE]  	125	None	replace
381	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize  -  pathNames.length));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize  -  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize  -  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
382	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize()  -  pathNames.length));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize()  -  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize()  -  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
383	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackNumber()  -  pathNames.length));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackNumber()  -  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackNumber()  -  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
384	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  pathNames.length  +  1));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  pathNames.length  +  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  pathNames.length  +  1));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
385	[BUG]  [BUGGY]  bucketStack.push(new  Long(pathNames.length()  -  peekedString.length));  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(pathNames.length()  -  peekedString.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(pathNames.length()  -  peekedString.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
386	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  *  pathNames.length));  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  *  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  *  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
387	[BUG]  [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[0]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  stack,  peekedString,  pathNames[0]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
388	[BUG]  [BUGGY]  readIndices(int,  stack,  pathNames,  peekedString[stackSize]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  stack,  pathNames,  peekedString[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  stack,  pathNames,  peekedString[stackSize]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
389	[BUG]  [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[pos]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  stack,  peekedString,  pathNames[pos]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
390	[BUG]  [BUGGY]  readIndices(int,  pathNames,  stack[stackSize]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  pathNames,  stack[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  pathNames,  stack[stackSize]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
391	[BUG]  [BUGGY]  readIndices(int,  peekedString,  pathNames[0]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  peekedString,  pathNames[0]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
392	[BUG]  [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[peekSize]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[peekSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  stack,  peekedString,  pathNames[peekSize]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
393	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString)  {  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString)  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	109	None	replace
394	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1)  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1)  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	109	None	replace
395	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]);	  safeNumberForSideEquals(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	109	None	replace
396	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]),  peekedString)  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]),  peekedString)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]),  peekedString)  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	109	None	replace
397	[BUG]  [BUGGY]  reader  ==  null  ||  lenient)  {  checkLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader  ==  null  ||  lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader  ==  null  ||  lenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	200	None	replace
398	[BUG]  [BUGGY]  luate(pathNames,  peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  peekedString,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
399	[BUG]  [BUGGY]  luate(peekedString,  pathNames,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(peekedString,  pathNames,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(peekedString,  pathNames,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
400	[BUG]  [BUGGY]  luate(stackSize,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
401	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedString);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedString);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
402	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  2];  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  2];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  2];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
403	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  1];  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  1];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
404	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  +  1];  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  +  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  +  1];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
405	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  *  1];  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  *  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  *  1];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
406	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  stackSize];  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  stackSize];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  stackSize];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
407	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&!lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&!lenient)  {  checkLenient();	  parent!=    null    &&!lenient)    {    checkLenient();    	non-compiled	[CE]  	147	None	replace
408	[BUG]  [BUGGY]  CheckState(stack.size()  >  1)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(stack.size()  >  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(stack.size()  >  1)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
409	[BUG]  [BUGGY]  CheckState(stack.size()  >  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(stack.size()  >  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(stack.size()  >  0);	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
410	[BUG]  [BUGGY]  CheckState(!lenient  &&  stack.size()  >  0);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState(!lenient  &&  stack.size()  >  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState(!lenient  &&  stack.size()  >  0);	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
411	[BUG]  [BUGGY]  CheckState.checkLenient();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckState.checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckState.checkLenient();	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
412	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[1]);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathIndices[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
413	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
414	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  peekedString,  pathNames[1]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  peekedString,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  peekedString,  pathNames[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
415	[BUG]  [BUGGY]  safeMultiply(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize);	  safely();    	non-compiled	[CE]  	26	None	replace
416	[BUG]  [BUGGY]  safeMultiply(stackSize,  1);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize,  1);	  safely();    	non-compiled	[CE]  	26	None	replace
417	[BUG]  [BUGGY]  safe(stackSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(stackSize);	  safely();    	non-compiled	[CE]  	26	None	replace
418	[BUG]  [BUGGY]  safeMultiply(stackSize  -  1);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize  -  1);	  safely();    	non-compiled	[CE]  	26	None	replace
419	[BUG]  [BUGGY]  safeMultiply(stackSize,  true);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize,  true);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize,  true);	  safely();    	non-compiled	[CE]  	26	None	replace
420	[BUG]  [BUGGY]  parent!=  null  &&  peekedString.length();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
421	[BUG]  [BUGGY]  parent  ==  null  &&  peekedString.length();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
422	[BUG]  [BUGGY]  parent!=  null  &&  peekedString.length()  >  0;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peekedString.length()  >  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peekedString.length()  >  0;	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
423	[BUG]  [BUGGY]  parent!=  peekedString.length();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
424	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize])  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
425	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0])  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
426	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[pos])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[pos])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
427	[BUG]  [BUGGY]  safeMultiply(pathNames,  stack[stackSize])  {  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  stack[stackSize])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  stack[stackSize])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
428	[BUG]  [BUGGY]  checkLenient(pathNames,  peekedSize);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  peekedSize);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
429	[BUG]  [BUGGY]  checkLenient(stack,  peekedSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stack,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stack,  peekedSize);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
430	[BUG]  [BUGGY]  checkLenient(stackSize,  peekedString);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  peekedString);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
431	[BUG]  [BUGGY]  checkLenient(peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  PEEKED_SINGLE_QUOTED);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
432	[BUG]  [BUGGY]  try  {  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
433	[BUG]  [BUGGY]  while(stackSize  >  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
434	[BUG]  [BUGGY]  while(stackSize  ==  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  ==  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  ==  1)  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
435	[BUG]  [BUGGY]  try  {  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
436	[BUG]  [BUGGY]  try  {  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
437	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
438	[BUG]  [BUGGY]  checkLenient(pathNames,  peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  peekedString);	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
439	[BUG]  [BUGGY]  if(!lenient  Reader)  {  checkLenient(pathNames);  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  Reader)  {  checkLenient(pathNames);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  Reader)  {  checkLenient(pathNames);  }	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
440	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.length  ]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.length  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.length  ]);	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
441	[BUG]  [BUGGY]  int[]  pathNames  =  peekedString.split( "n ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  peekedString.split( "n ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  peekedString.split( "n ");	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
442	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
443	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
444	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
445	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
446	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
447	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
448	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
449	[BUG]  [BUGGY]  parent  ==  null  &&!lenient)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&!lenient)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&!lenient)  {  checkLenient();  }	  parent!=    null    &&!lenient)    {    checkLenient();    }    	non-compiled	[CE]  	145	None	replace
450	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  -  1]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  -  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  -  1]);	  int[]    pathNames    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  	161	None	replace
451	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  +  1]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  +  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  +  1]);	  int[]    pathNames    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  	161	None	replace
452	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ],  peekedString);	  int[]    pathNames    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  	161	None	replace
453	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  *  2]);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  *  2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  *  2]);	  int[]    pathNames    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  	161	None	replace
454	[BUG]  [BUGGY]  parent!=  null  &&  peekedString.equals(peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peekedString.equals(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peekedString.equals(peekedString);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
455	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[0]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[0]);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
456	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[peekedString]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[peekedString]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[peekedString]);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
457	[BUG]  [BUGGY]  parent!=  null  &&  child.equals(peekedString);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  child.equals(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  child.equals(peekedString);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
458	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[pos]);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
459	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
460	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString[stackSize]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString[stackSize]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
461	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
462	[BUG]  [BUGGY]  safeMultiply(pathNames,  stack[stackSize]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  stack[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  stack[stackSize]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
463	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathSize[pos]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathSize[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathSize[pos]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
464	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[0]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
465	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[pos]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
466	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedString[stackSize]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
467	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
468	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekSize]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekSize]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
469	[BUG]  [BUGGY]  try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
470	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
471	[BUG]  [BUGGY]  while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
472	[BUG]  [BUGGY]  while(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
473	[BUG]  [BUGGY]  while(stackSize  >=  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >=  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >=  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
474	[BUG]  [BUGGY]  try  {  pos--;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
475	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[0]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
476	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
477	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[peekSize]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
478	[BUG]  [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices(in,  stack,  peekedString,  pathNames[0]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
479	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[1]);  break;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[1]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
480	[BUG]  [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices(in,  stack,  peekedString,  pathNames[pos]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
481	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
482	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
483	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
484	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
485	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
486	[BUG]  [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
487	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
488	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
489	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
490	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
491	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
492	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
493	[BUG]  [BUGGY]  try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
494	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
495	[BUG]  [BUGGY]  while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(true)  {  try  {  return  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
496	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
497	[BUG]  [BUGGY]  try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
498	[BUG]  [BUGGY]  try  {  return  peekedLong.length();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong.length();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong.length();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
499	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
500	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong()  :  null;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong()  :  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong()  :  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
501	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong  :  null;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong  :  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  peekedLong  :  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
502	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedString()  :  null;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekedString()  :  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  peekedString()  :  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
503	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
504	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_BUFFERED;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
505	[BUG]  [BUGGY]  ensureLenient();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  ensureLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	ensureLenient();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
506	[BUG]  [BUGGY]  safe(peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(peekedString);	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
507	[BUG]  [BUGGY]  safe();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
508	[BUG]  [BUGGY]  parent  ==  null)  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    pathIndices,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	199	None	replace
509	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
510	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  return  result;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[pos]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[pos]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
511	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  return  result;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedLong[stackSize]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
512	[BUG]  [BUGGY]  reader.readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader.readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader.readIndices(in,  stack,  peekedString,  pathNames[0]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
513	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
514	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
515	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(NumberFormatException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(NumberFormatException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(NumberFormatException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
516	[BUG]  [BUGGY]  try  {  }  catch(Exception  t)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Exception  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Exception  t)  {  }	  try    {    break;    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	20	None	replace
517	[BUG]  [BUGGY]  while(t.hasNext())  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {	  try    {    break;    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	20	None	replace
518	[BUG]  [BUGGY]  try  {  break;  }  catch(Exception  t)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Exception  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Exception  t)  {  }	  try    {    break;    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	20	None	replace
519	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
520	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
521	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
522	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
523	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
524	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
525	[BUG]  [BUGGY]  pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
526	[BUG]  [BUGGY]  luate(pathNames,  stack,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  stack,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  stack,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
527	[BUG]  [BUGGY]  luate(stackSize,  pos,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  pos,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  pos,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
528	[BUG]  [BUGGY]  luate(peekedString,  pos,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(peekedString,  pos,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(peekedString,  pos,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
529	[BUG]  [BUGGY]  luate(stack,  pos,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stack,  pos,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stack,  pos,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
530	[BUG]  [BUGGY]  luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peekedString);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peekedString);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
531	[BUG]  [BUGGY]  luate(peek,  pos,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(peek,  pos,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(peek,  pos,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
532	[BUG]  [BUGGY]  pendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
533	[BUG]  [BUGGY]  pendInt(peekedLong,  peekedSize,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  peekedSize,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  peekedSize,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
534	[BUG]  [BUGGY]  pendInt(peekSize,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekSize,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekSize,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
535	[BUG]  [BUGGY]  pendInt(peeked,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
536	[BUG]  [BUGGY]  PendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendInt(peekedString,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
537	[BUG]  [BUGGY]  pendInt(0,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(0,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(0,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
538	[BUG]  [BUGGY]  checkLenient(pos,  peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos,  peekedString);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
539	[BUG]  [BUGGY]  checkLenient(stackSize,  pos);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  pos);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  pos);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
540	[BUG]  [BUGGY]  int  pos  =  stack.size();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  pos  =  stack.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  pos  =  stack.size();	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
541	[BUG]  [BUGGY]  checkLenient(pos  +  1,  peekedString);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos  +  1,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos  +  1,  peekedString);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
542	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length  +  1);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length  +  1);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
543	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
544	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  peekedString.length);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  peekedString.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  peekedString.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
545	[BUG]  [BUGGY]  Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
546	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
547	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
548	[BUG]  [BUGGY]  BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	BucketTree  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
549	[BUG]  [BUGGY]  bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
550	[BUG]  [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  MIN_INCOMPLETE_INTEGER)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
551	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkEnd();  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkEnd();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_SINGLE_QUOTED)  {  checkEnd();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
552	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
553	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
554	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
555	[BUG]  [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
556	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
557	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
558	[BUG]  [BUGGY]  allowIndices(pathIndices,  int[])  {  checkLenient();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathIndices,  int[])  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathIndices,  int[])  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
559	[BUG]  [BUGGY]  allowIndices(int[]  pathIndices)  {  checkLenient();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(int[]  pathIndices)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(int[]  pathIndices)  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
560	[BUG]  [BUGGY]  allowIndices(peekedString,  int[])  {  checkLenient();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(peekedString,  int[])  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(peekedString,  int[])  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
561	[BUG]  [BUGGY]  allowIndices(int[])  {  checkKeyword();  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(int[])  {  checkKeyword();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(int[])  {  checkKeyword();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
562	[BUG]  [BUGGY]  allowIndices(int[])  {  peekedString();  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(int[])  {  peekedString();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(int[])  {  peekedString();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
563	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.throwInternal();	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
564	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
565	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_BUFFERED);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
566	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.throwAsJsonError( "msg.bad.keyword ",  peekedString,  PEEKED_SINGLE_QUOTED);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
567	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsJsonError( "Can  not  consume  the  first  character  ' "  +  peekedString  + "'. ");  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.throwAsJsonError( "Can  not  consume  the  first  character  ' "  +  peekedString  + "'. ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.throwAsJsonError( "Can  not  consume  the  first  character  ' "  +  peekedString  + "'. ");	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
568	[BUG]  [BUGGY]  bucket  <  =  PEEKED_BUFFERED;  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  =  PEEKED_BUFFERED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  =  PEEKED_BUFFERED;	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
569	[BUG]  [BUGGY]  checkLenient(pathIndices,  peekedString);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathIndices,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathIndices,  peekedString);	  checkLenient(peekedString);    	non-compiled	[CE]  	32	None	replace
570	[BUG]  [BUGGY]  safeNumber(pathNames[0],  pathNames[1])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames[0],  pathNames[1])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames[0],  pathNames[1])  {	  safeNumberIfNull(peekedString,    pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	112	None	replace
571	[BUG]  [BUGGY]  allowNonLenient(peek);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNonLenient(peek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNonLenient(peek);	  allowNonLenient(stackSize);    	non-compiled	[CE]  	58	None	replace
572	[BUG]  [BUGGY]  allowNonLenient(peeked);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNonLenient(peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNonLenient(peeked);	  allowNonLenient(stackSize);    	non-compiled	[CE]  	58	None	replace
573	[BUG]  [BUGGY]  allowNonLenient(peekedString);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNonLenient(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNonLenient(peekedString);	  allowNonLenient(stackSize);    	non-compiled	[CE]  	58	None	replace
574	[BUG]  [BUGGY]  allowNonLenient(peekSize);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNonLenient(peekSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNonLenient(peekSize);	  allowNonLenient(stackSize);    	non-compiled	[CE]  	58	None	replace
575	[BUG]  [BUGGY]  luate(pathNames,  peekedString,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  peekedString,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  peekedString,  NUMBER_CHAR_DECIMAL);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
576	[BUG]  [BUGGY]  luate(pathNames,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  MIN_INCOMPLETE_INTEGER);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
577	[BUG]  [BUGGY]  luate(pathNames,  STACKSIZE);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STACKSIZE);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STACKSIZE);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
578	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_NULL);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_NULL);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_NULL);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
579	[BUG]  [BUGGY]  luate(pathNames,  stack);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  stack);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
580	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
581	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length  +  1);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length  +  1);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
582	[BUG]  [BUGGY]  Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Integer  pathIndices  =  stack.toArray(new  Integer[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
583	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
584	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  0]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  0]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  0]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
585	[BUG]  [BUGGY]  if(lenient)  {  allowNonLenient();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  allowNonLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  allowNonLenient();  }	  allowNonLenient();    	non-compiled	[CE]  	60	None	replace
586	[BUG]  [BUGGY]  enableNonLenient();  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNonLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNonLenient();	  allowNonLenient();    	non-compiled	[CE]  	60	None	replace
587	[BUG]  [BUGGY]  if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  PEEKED_SINGLE_QUOTED;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  PEEKED_SINGLE_QUOTED;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  PEEKED_SINGLE_QUOTED;  }	  allowNonLenient();    	non-compiled	[CE]  	60	None	replace
588	[BUG]  [BUGGY]  if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  pathNames[stackSize];  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  pathNames[stackSize];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  allowNonLenient();  }  else  {  peekedString  =  pathNames[stackSize];  }	  allowNonLenient();    	non-compiled	[CE]  	60	None	replace
589	[BUG]  [BUGGY]  parent  ==  null  &&  peeked!=  null;  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  peeked!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  peeked!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  	136	None	replace
590	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  parent!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  parent!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  	136	None	replace
591	[BUG]  [BUGGY]  parent  ==  null  &&  peeked  >=  null;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  peeked  >=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  peeked  >=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  	136	None	replace
592	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  clear();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
593	[BUG]  [BUGGY]  try  {  clearCharacters();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearCharacters();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearCharacters();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
594	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  }  try  {  clear();  }  catch(Throwable  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  }  try  {  clear();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  }  try  {  clear();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
595	[BUG]  [BUGGY]  try  {  clearChar();  }  catch(Throwable  t)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearChar();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearChar();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
596	[BUG]  [BUGGY]  luate(stackSize,  NUMBER_CHAR_EXP_SIGN);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  NUMBER_CHAR_EXP_SIGN);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  NUMBER_CHAR_EXP_SIGN);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
597	[BUG]  [BUGGY]  luate(pathNames,  peekedString,  NUMBER_CHAR_EXP_SIGN);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  peekedString,  NUMBER_CHAR_EXP_SIGN);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  peekedString,  NUMBER_CHAR_EXP_SIGN);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
598	[BUG]  [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_EXP_SIGN);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_EXP_SIGN);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_NUMBER_CHAR_EXP_SIGN);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
599	[BUG]  [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_SIGN);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_SIGN);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_NUMBER_CHAR_SIGN);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
600	[BUG]  [BUGGY]  while(true)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(true)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(true)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
601	[BUG]  [BUGGY]  while(stackSize  >  1)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >  1)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >  1)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
602	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
603	[BUG]  [BUGGY]  while(!lenient  Reader)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(!lenient  Reader)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(!lenient  Reader)  {  try  {  throw  new  JsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
604	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
605	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize(),  peekedLong));  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize(),  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize(),  peekedLong));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
606	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber(),  stackSize));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber(),  stackSize));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber(),  stackSize));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
607	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackSize,  peekedLong));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackSize,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackSize,  peekedLong));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
608	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekSize(),  peekedLong));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekSize(),  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekSize(),  peekedLong));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
609	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber(),  peekedString));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber(),  peekedString));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber(),  peekedString));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
610	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber(),  peekedLong  +  1));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber(),  peekedLong  +  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber(),  peekedLong  +  1));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
611	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
612	[BUG]  [BUGGY]  luate(stackSize  -  1,  peeked);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize  -  1,  peeked);	  bucket();    	non-compiled	[CE]  	21	None	replace
613	[BUG]  [BUGGY]  luate(stackSize,  peekedLong);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  peekedLong);	  bucket();    	non-compiled	[CE]  	21	None	replace
614	[BUG]  [BUGGY]  luate(stackSize,  peekedString);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  peekedString);	  bucket();    	non-compiled	[CE]  	21	None	replace
615	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1)];  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
616	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  1)+  1];  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  1)+  1];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  1)+  1];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
617	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1)];  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  1)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
618	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
619	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[1]);  break;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathIndices[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathIndices[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
620	[BUG]  [BUGGY]  pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pédIndices.add(pathNames[0],  stack,  peekedString,  pathIndices[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
621	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
622	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
623	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
624	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
625	[BUG]  [BUGGY]  while(stackSize  >  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >  1)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
626	[BUG]  [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  Reader)  {  try  {  checkLenient();  }  catch(Exception  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
627	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  pathSize[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  pathSize[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  pathSize[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
628	[BUG]  [BUGGY]  allowIndices(int,  peekedString,  pathNames[stackSize]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(int,  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(int,  peekedString,  pathNames[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
629	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  peekedLong[stackSize]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  peekedLong[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  peekedLong[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
630	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedString,  pathNames[stackSize]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedString,  pathNames[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
631	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  checkLenient();  }	  parent!=    null    ||!lenient)    {    checkLenient();    }    	non-compiled	[CE]  	146	None	replace
632	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1))  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1))  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
633	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString))  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1],  peekedString))  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
634	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1]))  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]  +  1]))  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
635	[BUG]  [BUGGY]  CheckLenient(stackSize);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(stackSize);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
636	[BUG]  [BUGGY]  CheckLenient(true);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(true);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(true);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
637	[BUG]  [BUGGY]  CheckLenient(stackSize,  1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(stackSize,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(stackSize,  1);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
638	[BUG]  [BUGGY]  CheckLenient(stackSize,  peeked);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(stackSize,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(stackSize,  peeked);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
639	[BUG]  [BUGGY]  CheckLenient(stackSize,  true);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(stackSize,  true);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(stackSize,  true);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
640	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
641	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
642	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
643	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
644	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
645	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
646	[BUG]  [BUGGY]  parent  ==  null  ||  parent  ==  null;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  parent  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  parent  ==  null;	  parent    ==    null    &&    parent    ==    null;    	non-compiled	[CE]  	141	None	replace
647	[BUG]  [BUGGY]  parent  ==  null  &&  peeked  ==  null;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  peeked  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  peeked  ==  null;	  parent    ==    null    &&    parent    ==    null;    	non-compiled	[CE]  	141	None	replace
648	[BUG]  [BUGGY]  parent!=  null;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null;	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
649	[BUG]  [BUGGY]  parent!=  null  &&  peeked  ==  null;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked  ==  null;	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
650	[BUG]  [BUGGY]  parent!=  null  &&  peeked  >=  null;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked  >=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked  >=  null;	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
651	[BUG]  [BUGGY]  parent!=  null  ||  parent  ==  null;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  ||  parent  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  ||  parent  ==  null;	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
652	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  	39	None	replace
653	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
654	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
655	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIn	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
656	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
657	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  +  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
658	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
659	[BUG]  [BUGGY]  try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
660	[BUG]  [BUGGY]  while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(stackSize  >  1)  {  try  {  clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
661	[BUG]  [BUGGY]  try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
662	[BUG]  [BUGGY]  try  {  clearChar();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearChar();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearChar();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
663	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(stackSize  ==  1)  {  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(stackSize  ==  1)  {  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
664	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
665	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathNames[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
666	[BUG]  [BUGGY]  pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathSize[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
667	[BUG]  [BUGGY]  while(ioe.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(ioe.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(ioe.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
668	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
669	[BUG]  [BUGGY]  try  {  }  catch(IOException  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(IOException  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(IOException  t)  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
670	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]))  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
671	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0]))  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
672	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[pos]))  {  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[pos]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[pos]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
673	[BUG]  [BUGGY]  safeMultiply(pathNames,  stack[stackSize]))  {  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  stack[stackSize]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  stack[stackSize]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
674	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]))  {  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[1]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
675	[BUG]  [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
676	[BUG]  [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
677	[BUG]  [BUGGY]  BucketTree  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  BucketTree  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	BucketTree  <  NUMBER_CHAR_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
678	[BUG]  [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
679	[BUG]  [BUGGY]  while(t.next())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.next())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.next())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
680	[BUG]  [BUGGY]  While(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  While(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	While(t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
681	[BUG]  [BUGGY]  safeNumber(2)  {  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(2)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(2)  {	  safeNumber(1)    {    	non-compiled	[CE]  	133	None	replace
682	[BUG]  [BUGGY]  safeNumber(0)  {  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(0)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(0)  {	  safeNumber(1)    {    	non-compiled	[CE]  	133	None	replace
683	[BUG]  [BUGGY]  safeNumber(stackSize)  {  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(stackSize)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(stackSize)  {	  safeNumber(1)    {    	non-compiled	[CE]  	133	None	replace
684	[BUG]  [BUGGY]  allowNegated(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(stackSize);	  allowNegated();    	non-compiled	[CE]  	56	None	replace
685	[BUG]  [BUGGY]  enableNegated();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegated();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegated();	  allowNegated();    	non-compiled	[CE]  	56	None	replace
686	[BUG]  [BUGGY]  letNegated();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNegated();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNegated();	  allowNegated();    	non-compiled	[CE]  	56	None	replace
687	[BUG]  [BUGGY]  allowNegated(stackSize  -  1);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(stackSize  -  1);	  allowNegated();    	non-compiled	[CE]  	56	None	replace
688	[BUG]  [BUGGY]  checkLenient(pathIndices,  stackSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathIndices,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathIndices,  stackSize);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
689	[BUG]  [BUGGY]  checkLenient(pathNames,  stackSize);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  stackSize);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
690	[BUG]  [BUGGY]  checkLenient(stackSize,  peeredString);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  peeredString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  peeredString);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
691	[BUG]  [BUGGY]  checkLenient(stackSize,  piekedString);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  piekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  piekedString);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
692	[BUG]  [BUGGY]  try  {  return  peekedLong();  }  catch(Throwable  e)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLong();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLong();  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	44	None	replace
693	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
694	[BUG]  [BUGGY]  parent  ==  null  ||  peeked)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
695	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
696	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IllegalArgumentException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(IllegalArgumentException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IllegalArgumentException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
697	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ".);  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
698	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( ". ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
699	[BUG]  [BUGGY]  enableNegatives(true);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegatives(true);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegatives(true);	  allowNegatives(false);    	non-compiled	[CE]  	140	None	replace
700	[BUG]  [BUGGY]  allowNegatives(false,  peekedLong);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  peekedLong);	  allowNegatives(false);    	non-compiled	[CE]  	140	None	replace
701	[BUG]  [BUGGY]  while(ioe.hasNext())  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(ioe.hasNext())  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(ioe.hasNext())  {  try  {  break;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
702	[BUG]  [BUGGY]  try  {  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
703	[BUG]  [BUGGY]  try  {  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
704	[BUG]  [BUGGY]  try  {  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
705	[BUG]  [BUGGY]  parent  ==  if(stackSize  ==  1)  {  parent  ==  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  if(stackSize  ==  1)  {  parent  ==  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  if(stackSize  ==  1)  {  parent  ==  checkLenient();  }	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
706	[BUG]  [BUGGY]  parent  ==  if(lenient)  {  parent  ==  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  if(lenient)  {  parent  ==  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  if(lenient)  {  parent  ==  checkLenient();  }	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
707	[BUG]  [BUGGY]  parent  ==  if(!lenient)  {  parent  ==  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  if(!lenient)  {  parent  ==  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  if(!lenient)  {  parent  ==  checkLenient();  }	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
708	[BUG]  [BUGGY]  parent  ==  null?  parent.intValue()  :  0;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null?  parent.intValue()  :  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null?  parent.intValue()  :  0;	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
709	[BUG]  [BUGGY]  checkLenient(1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(1);	  checkLenient(0);    	non-compiled	[CE]  	144	None	replace
710	[BUG]  [BUGGY]  checkLenient(stackSize,  1);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  1);	  checkLenient(0);    	non-compiled	[CE]  	144	None	replace
711	[BUG]  [BUGGY]  checkLenient(stackSize  -  1);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize  -  1);	  checkLenient(0);    	non-compiled	[CE]  	144	None	replace
712	[BUG]  [BUGGY]  safeToInsert(PEEKED_SINGLE_QUOTED,  peekedString);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeToInsert(PEEKED_SINGLE_QUOTED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeToInsert(PEEKED_SINGLE_QUOTED,  peekedString);	  safePeek();    	non-compiled	[CE]  	25	None	replace
713	[BUG]  [BUGGY]  safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED_NAME);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED_NAME);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED_NAME);	  safePeek();    	non-compiled	[CE]  	25	None	replace
714	[BUG]  [BUGGY]  safeToInsert(PEEKED_BUFFERED,  peekedString);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeToInsert(PEEKED_BUFFERED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeToInsert(PEEKED_BUFFERED,  peekedString);	  safePeek();    	non-compiled	[CE]  	25	None	replace
715	[BUG]  [BUGGY]  safeToInsert(PEEKED_SINGLE_QUOTED);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeToInsert(PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeToInsert(PEEKED_SINGLE_QUOTED);	  safePeek();    	non-compiled	[CE]  	25	None	replace
716	[BUG]  [BUGGY]  safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString,  peekedString,  PEEKED_SINGLE_QUOTED);	  safePeek();    	non-compiled	[CE]  	25	None	replace
717	[BUG]  [BUGGY]  parent  ==  peeked;  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  peeked;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  peeked;	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
718	[BUG]  [BUGGY]  reader  ==  null;  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader  ==  null;	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
719	[BUG]  [BUGGY]  parent  ==  '[';  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  '[';  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  '[';	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
720	[BUG]  [BUGGY]  bucket(1)  {  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  if(stackSize  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
721	[BUG]  [BUGGY]  bucket(1)  {  if(stackSize  ==  1)  {  return  peekLenient();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  if(stackSize  ==  1)  {  return  peekLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  if(stackSize  ==  1)  {  return  peekLenient();  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
722	[BUG]  [BUGGY]  bucket(1)  {  result  =  checkLenient();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  result  =  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  result  =  checkLenient();  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
723	[BUG]  [BUGGY]  BucketIterator  it  =  peekedStrings.iterator();  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  BucketIterator  it  =  peekedStrings.iterator();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	BucketIterator  it  =  peekedStrings.iterator();	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
724	[BUG]  [BUGGY]  BucketIterator  iterator  =  peekedStrings.iterator();  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  BucketIterator  iterator  =  peekedStrings.iterator();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	BucketIterator  iterator  =  peekedStrings.iterator();	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
725	[BUG]  [BUGGY]  c  =  stack.peek();  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  c  =  stack.peek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	c  =  stack.peek();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
726	[BUG]  [BUGGY]  flipPeek();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipPeek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipPeek();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
727	[BUG]  [BUGGY]  pokePeek();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pokePeek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pokePeek();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
728	[BUG]  [BUGGY]  c  =  peekStackSize();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  c  =  peekStackSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	c  =  peekStackSize();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
729	[BUG]  [BUGGY]  flipToPeek();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipToPeek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipToPeek();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
730	[BUG]  [BUGGY]  checkLenient(stackSize,  peek);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  peek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  peek);	  checkLenient(peek,    stackSize);    	non-compiled	[CE]  	143	None	replace
731	[BUG]  [BUGGY]  checkLenient(peek,  stackSize  -  1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peek,  stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peek,  stackSize  -  1);	  checkLenient(peek,    stackSize);    	non-compiled	[CE]  	143	None	replace
732	[BUG]  [BUGGY]  checkLenient(pos,  stackSize);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos,  stackSize);	  checkLenient(peek,    stackSize);    	non-compiled	[CE]  	143	None	replace
733	[BUG]  [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]);    }    	non-compiled	[CE]  	194	None	replace
734	[BUG]  [BUGGY]  reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]);    }    	non-compiled	[CE]  	194	None	replace
735	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]);  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[0]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]);    }    	non-compiled	[CE]  	194	None	replace
736	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]);    }    	non-compiled	[CE]  	194	None	replace
737	[BUG]  [BUGGY]  checkLenient(peekSize,  peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekSize,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekSize,  peekedString);	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
738	[BUG]  [BUGGY]  pendString(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(stackSize);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
739	[BUG]  [BUGGY]  pendString(PEEKED_SINGLE_QUOTED);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(PEEKED_SINGLE_QUOTED);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
740	[BUG]  [BUGGY]  pendString(peek);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peek);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
741	[BUG]  [BUGGY]  pendString(PEEKED_BUFFERED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(PEEKED_BUFFERED);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
742	[BUG]  [BUGGY]  pendString(PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(PEEKED_DOUBLE_QUOTED);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
743	[BUG]  [BUGGY]  checkLenient(doPeek);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(doPeek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(doPeek);	  checkLenient(peek);    	non-compiled	[CE]  	31	None	replace
744	[BUG]  [BUGGY]  checkLenient(stack);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stack);	  checkLenient(peek);    	non-compiled	[CE]  	31	None	replace
745	[BUG]  [BUGGY]  bucketStack.push(pathNames,  peekedLong);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(pathNames,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(pathNames,  peekedLong);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
746	[BUG]  [BUGGY]  bucketStack.push(peekedString,  pathNames[0]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  pathNames[0]);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
747	[BUG]  [BUGGY]  bucketStack.push(peekedString,  pathNames[0],  peekedLong);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  pathNames[0],  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  pathNames[0],  peekedLong);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
748	[BUG]  [BUGGY]  bucketStack.push(peekedString,  bufferSize);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  bufferSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  bufferSize);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
749	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[stackSize]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
750	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[1]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
751	[BUG]  [BUGGY]  safeMultiply(pathNames[stackSize]));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[stackSize]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
752	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0]));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
753	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString[stackSize]));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString[stackSize]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
754	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathSize[pos]));  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathSize[pos]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathSize[pos]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
755	[BUG]  [BUGGY]  safeNumberIfNull(pathNames[0],  pathNames[1]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames[0],  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames[0],  pathNames[1]);	  safeNumberIfNull(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	107	None	replace
756	[BUG]  [BUGGY]  safeNumberIfNull(pathNames[0],  pathNames[1],  peekedString)  {  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames[0],  pathNames[1],  peekedString)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames[0],  pathNames[1],  peekedString)  {	  safeNumberIfNull(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	107	None	replace
757	[BUG]  [BUGGY]  bucketStack.push(stackSize());  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize());  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize());	  bucketStack.push(peekedString());    	non-compiled	[CE]  	74	None	replace
758	[BUG]  [BUGGY]  try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekedLenient();  }  catch(IOException  ioe)  {  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	40	None	replace
759	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(IOException  ioe)  {  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	40	None	replace
760	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Exception  ioe)  {  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	40	None	replace
761	[BUG]  [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked();  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked();  }  catch(IOException  ioe)  {  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	40	None	replace
762	[BUG]  [BUGGY]  pendInt(pos  -  1))  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(pos  -  1))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(pos  -  1))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
763	[BUG]  [BUGGY]  pendInt(peekSize  -  1))  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekSize  -  1))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekSize  -  1))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
764	[BUG]  [BUGGY]  pendInt(peekedLong  -  1))  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong  -  1))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong  -  1))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
765	[BUG]  [BUGGY]  pendInt(peekNumber  -  1))  {  checkLenient();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekNumber  -  1))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekNumber  -  1))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
766	[BUG]  [BUGGY]  parent!=  null  &&  peeked!=  null;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked!=  null;	  parent!=    null    &&    parent!=    null;    	non-compiled	[CE]  	139	None	replace
767	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i];    	non-compiled	[CE]  	164	None	replace
768	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[0];  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[0];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[0];  }	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i];    	non-compiled	[CE]  	164	None	replace
769	[BUG]  [BUGGY]  try  {  checkStandard();  }  catch(Throwable  ioe)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkStandard();  }  catch(Throwable  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkStandard();  }  catch(Throwable  ioe)  {  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    }    	non-compiled	[CE]  	38	None	replace
770	[BUG]  [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Throwable  ioe)  {  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    }    	non-compiled	[CE]  	38	None	replace
771	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
772	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
773	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
774	[BUG]  [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
775	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
776	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathNames.length);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathNames.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathNames.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
777	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(peekedString,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(peekedString,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(peekedString,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
778	[BUG]  [BUGGY]  try  {  checkLenient(e);  }  catch(Throwable  e)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(e);  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(e);  }  catch(Throwable  e)  {  }	  try    {    checkLenient();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	43	None	replace
779	[BUG]  [BUGGY]  try  {  }  catch(NullPointerException  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(NullPointerException  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(NullPointerException  t)  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
780	[BUG]  [BUGGY]  try  {  }  catch(JsonStringException  t)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringException  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringException  t)  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
781	[BUG]  [BUGGY]  try  {  }  catch(JsonNull  t)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNull  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNull  t)  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
782	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos]))  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
783	[BUG]  [BUGGY]  safeMultiply(pathNames[pos]))  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos]))  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize]))    {    	non-compiled	[CE]  	103	None	replace
784	[BUG]  [BUGGY]  validateSingleQuoted();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  validateSingleQuoted();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	validateSingleQuoted();	  allowNegated();    	non-compiled	[CE]  	56	None	replace
785	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  peekedString.length();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent  ==  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent  ==  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
786	[BUG]  [BUGGY]  Parent!=  null  &&  parent  ==  peekedString.length();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent!=  null  &&  parent  ==  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent!=  null  &&  parent  ==  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
787	[BUG]  [BUGGY]  parent!=  null  ||  parent  ==  peekedString.length();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  ||  parent  ==  peekedString.length();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  ||  parent  ==  peekedString.length();	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
788	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos])  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
789	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0])  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[0])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
790	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  	90	None	replace
791	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  	90	None	replace
792	[BUG]  [BUGGY]  bucket  <  0)  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  0)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  0)  {  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
793	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
794	[BUG]  [BUGGY]  Parent  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
795	[BUG]  [BUGGY]  bucketStack.push(new  Long(min_INCOMPLETE_INTEGER,  peekedLong));  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(min_INCOMPLETE_INTEGER,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(min_INCOMPLETE_INTEGER,  peekedLong));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
796	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackNumber(),  peekedLong));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackNumber(),  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackNumber(),  peekedLong));	  bucketStack.push(new    Long(peekNumber(),    peekedLong));    	non-compiled	[CE]  	172	None	replace
797	[BUG]  [BUGGY]  pendIndices(in,  stack,  pathNames[0]);  break;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  pathNames[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  pathNames[0]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
798	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
799	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  	195	None	replace
800	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
801	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  peekedString[1],  peekedString[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  peekedString[1],  peekedString[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  peekedString[1],  peekedString[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
802	[BUG]  [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
803	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
804	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[peekedSize]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	167	None	replace
805	[BUG]  [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  peekedString,  pathNames[peekedLong]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	167	None	replace
806	[BUG]  [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[pos]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices(in,  stack,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices(in,  stack,  peekedString,  pathNames[pos]);	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	167	None	replace
807	[BUG]  [BUGGY]  flipFloor();  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipFloor();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipFloor();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
808	[BUG]  [BUGGY]  flip();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flip();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flip();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
809	[BUG]  [BUGGY]  bucketNumber();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketNumber();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketNumber();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
810	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
811	[BUG]  [BUGGY]  pendIndices.add(pathIndex,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndex,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndex,  pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
812	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathNames.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i];  }	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i];    	non-compiled	[CE]  	164	None	replace
813	[BUG]  [BUGGY]  pendInt(peekedLong,  stack)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  stack)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  stack)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  	5	None	replace
814	[BUG]  [BUGGY]  pendInt(peek,  peekedLong)  {  checkLenient();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peek,  peekedLong)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peek,  peekedLong)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  	5	None	replace
815	[BUG]  [BUGGY]  pendInt(peekedLong,  peekSize)  {  checkLenient();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  peekSize)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  peekSize)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  	5	None	replace
816	[BUG]  [BUGGY]  try  {  t.printStackTrace();  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  t.printStackTrace();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  t.printStackTrace();  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	98	None	replace
817	[BUG]  [BUGGY]  try  {  t.release();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  t.release();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  t.release();  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	98	None	replace
818	[BUG]  [BUGGY]  allowNegatives(2);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(2);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(2);	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  	121	None	replace
819	[BUG]  [BUGGY]  checkLenient(pathNames,  pathNames);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  pathNames);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
820	[BUG]  [BUGGY]  checkLenient(pathNames,  bufferSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  bufferSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  bufferSize);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
821	[BUG]  [BUGGY]  checkLenient(pathNames,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  PEEKED_SINGLE_QUOTED);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
822	[BUG]  [BUGGY]  checkLenient(peekedString,  str);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  str);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  str);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
823	[BUG]  [BUGGY]  checkLenient(peekedString,  stack);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  stack);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
824	[BUG]  [BUGGY]  bucketStack.push(0);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(0);	  bucketStack.push(peekedLong);    	non-compiled	[CE]  	78	None	replace
825	[BUG]  [BUGGY]  bucketStack.pop();  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.pop();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.pop();	  bucketStack.push(peekedLong);    	non-compiled	[CE]  	78	None	replace
826	[BUG]  [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||!lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[stackSize]);  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]);    }    	non-compiled	[CE]  	194	None	replace
827	[BUG]  [BUGGY]  try  {  return  checkLenient(pathNames);  }  catch(Throwable  e)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient(pathNames);  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient(pathNames);  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	44	None	replace
828	[BUG]  [BUGGY]  safeSegment();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeSegment();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeSegment();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
829	[BUG]  [BUGGY]  safeState();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeState();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeState();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
830	[BUG]  [BUGGY]  pendString(pathNames,  stack);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(pathNames,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(pathNames,  stack);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  	191	None	replace
831	[BUG]  [BUGGY]  pendString(stack,  pathNames);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(stack,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(stack,  pathNames);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  	191	None	replace
832	[BUG]  [BUGGY]  pendString(peek,  pathNames);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peek,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peek,  pathNames);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  	191	None	replace
833	[BUG]  [BUGGY]  pendString(pathNames,  peekedLong);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(pathNames,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(pathNames,  peekedLong);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  	191	None	replace
834	[BUG]  [BUGGY]  safeNumberIfNull(pathNames,  pathNames[pos])  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames,  pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames,  pathNames[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  	111	None	replace
835	[BUG]  [BUGGY]  safeNumberIfNull(pathNames,  stack[pos])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberIfNull(pathNames,  stack[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberIfNull(pathNames,  stack[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  	111	None	replace
836	[BUG]  [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
837	[BUG]  [BUGGY]  try  {  break;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
838	[BUG]  [BUGGY]  allowPeekNegatives();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowPeekNegatives();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowPeekNegatives();	  allowNegatives();    	non-compiled	[CE]  	57	None	replace
839	[BUG]  [BUGGY]  allowNegatives()  &&  peekSize  >  1;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives()  &&  peekSize  >  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives()  &&  peekSize  >  1;	  allowNegatives();    	non-compiled	[CE]  	57	None	replace
840	[BUG]  [BUGGY]  allowNegatives()  &&  peekSize  ==  2;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives()  &&  peekSize  ==  2;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives()  &&  peekSize  ==  2;	  allowNegatives();    	non-compiled	[CE]  	57	None	replace
841	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
842	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
843	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[4],  pathIndices[3]  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[4],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[4],  pathIndices[3]	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
844	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2]  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2]	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
845	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3])  {	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
846	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[3]	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
847	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
848	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Throwable  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
849	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
850	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  6];  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  6];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  6];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
851	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  2];  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  2];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  2];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
852	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  3];  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  3];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  3];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
853	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
854	[BUG]  [BUGGY]  try  {  }  catch(JsonNull.createJsonNull())  {  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNull.createJsonNull())  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNull.createJsonNull())  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
855	[BUG]  [BUGGY]  try  {  }  catch(JsonNull.createJsonNull());  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNull.createJsonNull());  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNull.createJsonNull());	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
856	[BUG]  [BUGGY]  try  {  }  catch(NullPointerException  t)  {  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(NullPointerException  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(NullPointerException  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
857	[BUG]  [BUGGY]  try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
858	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t);  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( "JsonMapping  exception: "  +  t);  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
859	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
860	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( "Can't  consume  the  first  character  in  a  literal  value. ");  }  catch(Throwable  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( "Can't  consume  the  first  character  in  a  literal  value. ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( "Can't  consume  the  first  character  in  a  literal  value. ");  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
861	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[1]);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathNames[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
862	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathIndices[1]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathIndices[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack[0],  pathIndices[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
863	[BUG]  [BUGGY]  bucketStack.push(new  Integer(stackSize  -  1));  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(stackSize  -  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(stackSize  -  1));	  bucketStack.push(new    Integer(PEEKED_BUFFERED));    	non-compiled	[CE]  	171	None	replace
864	[BUG]  [BUGGY]  Parent!=  null  &&  parent  ==  null;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent!=  null  &&  parent  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent!=  null  &&  parent  ==  null;	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
865	[BUG]  [BUGGY]  safeThan  <  =  0;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeThan  <  =  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeThan  <  =  0;	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
866	[BUG]  [BUGGY]  safeNumberForPeek();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForPeek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForPeek();	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
867	[BUG]  [BUGGY]  safeNumberForPeek(1)  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForPeek(1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForPeek(1)  {	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
868	[BUG]  [BUGGY]  safeNegate();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNegate();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNegate();	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	63	None	replace
869	[BUG]  [BUGGY]  safe(JsonNull.valueOf(stackSize));  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(JsonNull.valueOf(stackSize));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(JsonNull.valueOf(stackSize));	  safeNumber();    	non-compiled	[CE]  	24	None	replace
870	[BUG]  [BUGGY]  safe(JsonNull.createJsonNull());  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(JsonNull.createJsonNull());  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(JsonNull.createJsonNull());	  safeNumber();    	non-compiled	[CE]  	24	None	replace
871	[BUG]  [BUGGY]  safe(JsonNull.NULL_VALUE);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(JsonNull.NULL_VALUE);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(JsonNull.NULL_VALUE);	  safeNumber();    	non-compiled	[CE]  	24	None	replace
872	[BUG]  [BUGGY]  safe(JsonNull.valueOf(stackSize  -  1));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safe(JsonNull.valueOf(stackSize  -  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safe(JsonNull.valueOf(stackSize  -  1));	  safeNumber();    	non-compiled	[CE]  	24	None	replace
873	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
874	[BUG]  [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
875	[BUG]  [BUGGY]  try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Throwable  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
876	[BUG]  [BUGGY]  checkLenient(pathNames,  buffer);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  buffer);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  buffer);	  checkLenient(peeked);    	non-compiled	[CE]  	33	None	replace
877	[BUG]  [BUGGY]  letNonLenient();  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNonLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNonLenient();	  allowNonLenient();    	non-compiled	[CE]  	60	None	replace
878	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  >  1)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  >  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  >  1)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
879	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  ==  0)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  ==  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  ==  0)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
880	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  ==  1)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  ==  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  ==  1)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
881	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  ==  2)  {  checkLenient();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  ==  2)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  ==  2)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
882	[BUG]  [BUGGY]  bucketStack.push(peekedString,  stack);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  stack);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  	77	None	replace
883	[BUG]  [BUGGY]  bucketStack.push(peekedString,  bufferedSize);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  bufferedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  bufferedSize);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  	77	None	replace
884	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
885	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
886	[BUG]  [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(IOException  ioe)  {  }	  try    {    break;    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	42	None	replace
887	[BUG]  [BUGGY]  try  {  return;  }  catch(IOException  ioe)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return;  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return;  }  catch(IOException  ioe)  {  }	  try    {    break;    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	42	None	replace
888	[BUG]  [BUGGY]  if(lenient  ||  peekedLong!=  null)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  ||  peekedLong!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  ||  peekedLong!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
889	[BUG]  [BUGGY]  if(!lenient  &&  peekedLong.equals(pathNames[0]))  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedLong.equals(pathNames[0]))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedLong.equals(pathNames[0]))  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
890	[BUG]  [BUGGY]  if(!lenient  &&  peekedNumber!=  null)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedNumber!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedNumber!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
891	[BUG]  [BUGGY]  checkLenient(paths,  stackSize);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(paths,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(paths,  stackSize);	  checkLenient(peek,    stackSize);    	non-compiled	[CE]  	143	None	replace
892	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	61	None	replace
893	[BUG]  [BUGGY]  luate(stackSize  -  1,  1);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize  -  1,  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize  -  1,  1);	  luate();    	non-compiled	[CE]  	23	None	replace
894	[BUG]  [BUGGY]  rehash();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  rehash();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	rehash();	  luate();    	non-compiled	[CE]  	23	None	replace
895	[BUG]  [BUGGY]  pendInt(1))  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(1))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(1))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
896	[BUG]  [BUGGY]  pendInt(peek))  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peek))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peek))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
897	[BUG]  [BUGGY]  CheckLenient(peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
898	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
899	[BUG]  [BUGGY]  CheckLenient(stackSize  -  1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(stackSize  -  1);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
900	[BUG]  [BUGGY]  CheckLenient(pos,  peekedString);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(pos,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(pos,  peekedString);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
901	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  	14	None	replace
902	[BUG]  [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  	14	None	replace
903	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathNames[3]);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathNames[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  	14	None	replace
904	[BUG]  [BUGGY]  try  {  }  catch(Throwable  ioe)  {  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  ioe)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  ioe)  {	  try    {    checkLenient();    }    catch(Throwable    ioe)    {    }    	non-compiled	[CE]  	38	None	replace
905	[BUG]  [BUGGY]  parent!=  null  &&  pathNames[pos].equals(pathIndices[pos]))  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  pathNames[pos].equals(pathIndices[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  pathNames[pos].equals(pathIndices[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  	51	None	replace
906	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent.equals(pathNames[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  	51	None	replace
907	[BUG]  [BUGGY]  parent!=  null  &&  stack.equals(pathIndices[pos]))  {  checkLenient();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  stack.equals(pathIndices[pos]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  stack.equals(pathIndices[pos]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  	51	None	replace
908	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
909	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
910	[BUG]  [BUGGY]  pendIndices.add(pathIndex[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndex[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndex[0],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
911	[BUG]  [BUGGY]  bucketStack.push(new  Integer(pos,  PEEKED_SINGLE_QUOTED));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(pos,  PEEKED_SINGLE_QUOTED));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(pos,  PEEKED_SINGLE_QUOTED));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  	176	None	replace
912	[BUG]  [BUGGY]  bucketStack.push(new  Integer(peekSize,  pos));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(peekSize,  pos));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(peekSize,  pos));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  	176	None	replace
913	[BUG]  [BUGGY]  bucket  <  0)  {  checkLenient();  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  0)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
914	[BUG]  [BUGGY]  bucket  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  =  NUMBER_CHAR_QUOTED)  {  checkLenient();  }	  bucketTree    <    NUMBER_CHAR_QUOTED)    {    checkLenient();    }    	non-compiled	[CE]  	93	None	replace
915	[BUG]  [BUGGY]  try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
916	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  init();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
917	[BUG]  [BUGGY]  try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearCharacters();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
918	[BUG]  [BUGGY]  try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
919	[BUG]  [BUGGY]  try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
920	[BUG]  [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peekLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
921	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
922	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[peekedStrings.size()  ]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[peekedStrings.size()  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[peekedStrings.size()  ]);	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  	114	None	replace
923	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ])+  1;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ])+  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathIndexes.size()  ])+  1;	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  	114	None	replace
924	[BUG]  [BUGGY]  allowIndices(pathNames[pos]));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames[pos]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames[pos]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	52	None	replace
925	[BUG]  [BUGGY]  allowIndices(peekedLong,  pathNames[pos]));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(peekedLong,  pathNames[pos]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(peekedLong,  pathNames[pos]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	52	None	replace
926	[BUG]  [BUGGY]  allowIndices(peekedLong,  pathNames[0]));  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(peekedLong,  pathNames[0]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(peekedLong,  pathNames[0]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	52	None	replace
927	[BUG]  [BUGGY]  allowIndices(pathNames[stackSize]));  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	52	None	replace
928	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  2]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  2]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  2]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    ]);    	non-compiled	[CE]  	82	None	replace
929	[BUG]  [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
930	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  peekedString[1],  peekedString[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  peekedString[1],  peekedString[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  peekedString[1],  peekedString[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
931	[BUG]  [BUGGY]  pendInt(pos,  peekedLong);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(pos,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(pos,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
932	[BUG]  [BUGGY]  pendInt(peekedSize,  peekedLong);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedSize,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedSize,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
933	[BUG]  [BUGGY]  pendFloor(peekedLong,  stack);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendFloor(peekedLong,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendFloor(peekedLong,  stack);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
934	[BUG]  [BUGGY]  bucketStack.push(peekedString,  bufferedLong);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  bufferedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  bufferedLong);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
935	[BUG]  [BUGGY]  bucketStack.push(peekedLong,  pathNames);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedLong,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedLong,  pathNames);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
936	[BUG]  [BUGGY]  bucketStack.push(peekedString,  peekedLong  +  1);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  peekedLong  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  peekedLong  +  1);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
937	[BUG]  [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
938	[BUG]  [BUGGY]  try  {  Thread.sleep(1);  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.sleep(1);  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.sleep(1);  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
939	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
940	[BUG]  [BUGGY]  try  {  return  flushLenient();  }  catch(Throwable  e)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  flushLenient();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  flushLenient();  }  catch(Throwable  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  	46	None	replace
941	[BUG]  [BUGGY]  piedLong  =  stack[pos];  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  =  stack[pos];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  =  stack[pos];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  	149	None	replace
942	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_SINGLE_QUOTED)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_SINGLE_QUOTED)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  PEEKED_SINGLE_QUOTED)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
943	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  STackSize)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  STackSize)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  STackSize)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
944	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  STACKSIZE)  {  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  STACKSIZE)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  STACKSIZE)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
945	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_FALSE)  {  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_FALSE)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  PEEKED_FALSE)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
946	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[1]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathNames[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
947	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[1]);  break;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack[0],  pathNames[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
948	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length()  ]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length()  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length()  ]);	  [Delete]    	non-compiled	[CE]  	55	None	replace
949	[BUG]  [BUGGY]  ParentKeys.checkNotNull(peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  ParentKeys.checkNotNull(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	ParentKeys.checkNotNull(peekedString);	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
950	[BUG]  [BUGGY]  ParentKeys.checkNotNull(peekedString,  pathNames);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  ParentKeys.checkNotNull(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	ParentKeys.checkNotNull(peekedString,  pathNames);	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
951	[BUG]  [BUGGY]  ParentKeys.checkLength(peekedString,  pathNames);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  ParentKeys.checkLength(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	ParentKeys.checkLength(peekedString,  pathNames);	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
952	[BUG]  [BUGGY]  try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.createJsonMappingException( " ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
953	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
954	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( ", ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( ", ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( ", ");  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
955	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(NullPointerException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
956	[BUG]  [BUGGY]  checkLenient(pos  +  1);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos  +  1);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
957	[BUG]  [BUGGY]  checkLenient(pos  +  stackSize);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos  +  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos  +  stackSize);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
958	[BUG]  [BUGGY]  checkLenient(pos  +  1,  stackSize);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos  +  1,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos  +  1,  stackSize);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
959	[BUG]  [BUGGY]  allowNegated(true,  peekSize);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(true,  peekSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(true,  peekSize);	  allowNegated(true);    	non-compiled	[CE]  	59	None	replace
960	[BUG]  [BUGGY]  allowNegated(true,  peekedSize);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(true,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(true,  peekedSize);	  allowNegated(true);    	non-compiled	[CE]  	59	None	replace
961	[BUG]  [BUGGY]  bucketStack.push(new  Long(stackNumber()  -  1,  peekedLong));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(stackNumber()  -  1,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(stackNumber()  -  1,  peekedLong));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  	175	None	replace
962	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  pathNames.length));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  1,  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  1,  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  	175	None	replace
963	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekSize()  -  1,  peekedLong));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekSize()  -  1,  peekedLong));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekSize()  -  1,  peekedLong));	  bucketStack.push(new    Long(peekNumber()    -    1,    peekedLong));    	non-compiled	[CE]  	175	None	replace
964	[BUG]  [BUGGY]  checkLenient(pathNames,  peek);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  peek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  peek);	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
965	[BUG]  [BUGGY]  checkLenient(pathNames,  peekSize);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  peekSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  peekSize);	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
966	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(pathIndices,  peekedSize);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  	115	None	replace
967	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedLong);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(pathIndices,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(pathIndices,  peekedLong);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  	115	None	replace
968	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString,  pathIndices);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(peekedString,  pathIndices);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(peekedString,  pathIndices);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  	115	None	replace
969	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos])  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  	104	None	replace
970	[BUG]  [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[0])  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames,  peekedString,  pathNames[0])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames,  peekedString,  pathNames[0])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  	104	None	replace
971	[BUG]  [BUGGY]  parent  ==  null  ||  lenient  <  pathNames.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient  <  pathNames.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient  <  pathNames.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	193	None	replace
972	[BUG]  [BUGGY]  safeToInt(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeToInt(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeToInt(stackSize);	  safely();    	non-compiled	[CE]  	26	None	replace
973	[BUG]  [BUGGY]  safeToInt();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeToInt();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeToInt();	  safely();    	non-compiled	[CE]  	26	None	replace
974	[BUG]  [BUGGY]  bucket(1)  {  checkLenient(stackSize);  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  checkLenient(stackSize);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  checkLenient(stackSize);  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
975	[BUG]  [BUGGY]  bucket(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  throw  new  IllegalArgumentException( " ");  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
976	[BUG]  [BUGGY]  bucket(1)  {  super.doPeek();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  super.doPeek();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  super.doPeek();  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
977	[BUG]  [BUGGY]  bucket(1)  {  checkLenient(0);  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  checkLenient(0);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  checkLenient(0);  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
978	[BUG]  [BUGGY]  safeMultiply(pathNames[pos]).return;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  	105	None	replace
979	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  pathNames[0]).return;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  pathNames[0]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  pathNames[0]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  	105	None	replace
980	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[0]).return;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[0]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[0]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  	105	None	replace
981	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
982	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[5]  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[5]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[5]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
983	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3],  pathIndices[4]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
984	[BUG]  [BUGGY]  Parent  ==  null  ||  lenient)  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  ==  null  ||  lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  ==  null  ||  lenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    }    else    {    System.arraycopy(pathNames,    0,    pathIndices,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	199	None	replace
985	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	185	None	replace
986	[BUG]  [BUGGY]  readIndices(in,  pathNames,  stack[stackSize]);  break;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  pathNames,  stack[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  pathNames,  stack[stackSize]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	185	None	replace
987	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  break;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	185	None	replace
988	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1)];  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  *  1)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
989	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2)];  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
990	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2  +  1)];  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2  +  1)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  2  +  1)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
991	[BUG]  [BUGGY]  pendSize  =  stack.size();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendSize  =  stack.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendSize  =  stack.size();	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	69	None	replace
992	[BUG]  [BUGGY]  pendSize  =  stack.size()  -  1;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendSize  =  stack.size()  -  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendSize  =  stack.size()  -  1;	  if(stackSize    ==    1)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	69	None	replace
993	[BUG]  [BUGGY]  luate(pathNames,  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  0);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
994	[BUG]  [BUGGY]  luate(pathNames,  STRICT_NULL);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_NULL);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_NULL);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
995	[BUG]  [BUGGY]  luate(pathNames,  STRICT_MODULE);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_MODULE);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_MODULE);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
996	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_DOUBLE_QUOTED;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_DOUBLE_QUOTED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_DOUBLE_QUOTED;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
997	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient(stackSize):  null;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient(stackSize):  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient(stackSize):  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
998	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_SINGLE_QUOTED;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_SINGLE_QUOTED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  checkLenient()  :  PEEKED_SINGLE_QUOTED;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
999	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkStackSize()  :  null;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  checkStackSize()  :  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  checkStackSize()  :  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
1000	[BUG]  [BUGGY]  pendInt(peek,  peekedLong,  PEEKED_BUFFERED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peek,  peekedLong,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peek,  peekedLong,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1001	[BUG]  [BUGGY]  pendInt(peek,  0,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peek,  0,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peek,  0,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1002	[BUG]  [BUGGY]  allowIndices(pathIndices)  {  checkLenient();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathIndices)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathIndices)  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
1003	[BUG]  [BUGGY]  allowIndices(pathNames,  int[])  {  checkLenient();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  int[])  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  int[])  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
1004	[BUG]  [BUGGY]  allowIndices(pathNames)  {  checkLenient();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames)  {  checkLenient();  }	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
1005	[BUG]  [BUGGY]  safeNumber(pathNames);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  	108	None	replace
1006	[BUG]  [BUGGY]  safeNumber(peek);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(peek);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(peek);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  	108	None	replace
1007	[BUG]  [BUGGY]  luate(pathNames,  pos,  SINGLE_QUOTED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  pos,  SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  pos,  SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
1008	[BUG]  [BUGGY]  luate(pathNames,  str,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  str,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  str,  PEEKED_SINGLE_QUOTED);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
1009	[BUG]  [BUGGY]  luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peeked);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  pos,  PEEKED_SINGLE_QUOTED,  peeked);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
1010	[BUG]  [BUGGY]  try  {  break;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
1011	[BUG]  [BUGGY]  try  {  clear();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
1012	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(NumberException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(NumberException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(NumberException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1013	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1014	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);  break;  [CE]  illegal  start  of  expression  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1015	[BUG]  [BUGGY]  checkLenient(result);  [CE]  illegal  start  of  expression  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(result);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(result);	  checkLenient(peek);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1016	[BUG]  [BUGGY]  checkLenient(peek,  stack);  [CE]  illegal  start  of  expression  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peek,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peek,  stack);	  checkLenient(peek);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1017	[BUG]  [BUGGY]  try  {  }  catch(JsonNullException  e)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNullException  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNullException  e)  {  }	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  	106	None	replace
1018	[BUG]  [BUGGY]  try  {  }  catch(JsonStringException  e)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringException  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringException  e)  {  }	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  	106	None	replace
1019	[BUG]  [BUGGY]  while(t!=  null  &&  peeked.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t!=  null  &&  peeked.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t!=  null  &&  peeked.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1020	[BUG]  [BUGGY]  while(t!=  null  &&  t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t!=  null  &&  t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t!=  null  &&  t.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1021	[BUG]  [BUGGY]  while(t!=  null)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t!=  null)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t!=  null)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1022	[BUG]  [BUGGY]  while(t!=  null  &&  peek.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t!=  null  &&  peek.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t!=  null  &&  peek.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1023	[BUG]  [BUGGY]  while(t!=  null  &&  peeks.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t!=  null  &&  peeks.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t!=  null  &&  peeks.hasNext())  {  try  {  checkLenient();  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1024	[BUG]  [BUGGY]  try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.clear();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
1025	[BUG]  [BUGGY]  try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearPeek();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
1026	[BUG]  [BUGGY]  try  {  exit();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  exit();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  exit();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
1027	[BUG]  [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  init();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  init();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
1028	[BUG]  [BUGGY]  Parent  ==  null  &&  parent  ==  null;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  ==  null  &&  parent  ==  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  ==  null  &&  parent  ==  null;	  parent    ==    null    &&    parent    ==    null;    	non-compiled	[CE]  	141	None	replace
1029	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
1030	[BUG]  [BUGGY]  try  {  break;  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
1031	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  stack,  pathNames[stackSize]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	8	None	replace
1032	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack[0],  pathNames[stackSize]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	8	None	replace
1033	[BUG]  [BUGGY]  return  checkLenient();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  return  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	return  checkLenient();	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	40	None	replace
1034	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
1035	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
1036	[BUG]  [BUGGY]  readIndices(in,  peekedString,  pathNames[pos]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  peekedString,  pathNames[pos]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
1037	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	166	None	replace
1038	[BUG]  [BUGGY]  bucket(stackSize  -  1)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(stackSize  -  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(stackSize  -  1)  {  checkLenient();  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  	1	None	replace
1039	[BUG]  [BUGGY]  bucket(0)  {  checkLenient(stackSize);  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(0)  {  checkLenient(stackSize);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(0)  {  checkLenient(stackSize);  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  	1	None	replace
1040	[BUG]  [BUGGY]  bucket(stackSize  -  1,  1)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(stackSize  -  1,  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(stackSize  -  1,  1)  {  checkLenient();  }	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  	1	None	replace
1041	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1042	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1043	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3])  {	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1044	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1045	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1046	[BUG]  [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pied(null,  pathNames[0],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1047	[BUG]  [BUGGY]  luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  peekedString);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
1048	[BUG]  [BUGGY]  luate(pathNames,  NUMBER_CHAR_SIGN,  peekedString);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  NUMBER_CHAR_SIGN,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  NUMBER_CHAR_SIGN,  peekedString);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
1049	[BUG]  [BUGGY]  luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  NUMBER_CHAR_EXP_SIGN,  MIN_INCOMPLETE_INTEGER);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
1050	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
1051	[BUG]  [BUGGY]  pos  =  stackSize();  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos  =  stackSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos  =  stackSize();	  bucket();    	non-compiled	[CE]  	21	None	replace
1052	[BUG]  [BUGGY]  pos--;  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos--;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos--;	  bucket();    	non-compiled	[CE]  	21	None	replace
1053	[BUG]  [BUGGY]  pos  =  stack.size();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos  =  stack.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos  =  stack.size();	  bucket();    	non-compiled	[CE]  	21	None	replace
1054	[BUG]  [BUGGY]  pos  =  stackSize  -  1;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos  =  stackSize  -  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos  =  stackSize  -  1;	  bucket();    	non-compiled	[CE]  	21	None	replace
1055	[BUG]  [BUGGY]  pos  =  peekSize();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos  =  peekSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos  =  peekSize();	  bucket();    	non-compiled	[CE]  	21	None	replace
1056	[BUG]  [BUGGY]  initLenient();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  initLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	initLenient();	  readLenient();    	non-compiled	[CE]  	2	None	replace
1057	[BUG]  [BUGGY]  readLenient(0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(0);	  readLenient();    	non-compiled	[CE]  	2	None	replace
1058	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  return  result;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames,  peekedString[stackSize]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
1059	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  return  result;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekedSize]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
1060	[BUG]  [BUGGY]  readIndices(in,  pathNames,  stack[stackSize]);  return  result;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  pathNames,  stack[stackSize]);  return  result;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  pathNames,  stack[stackSize]);  return  result;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    return    result;    	non-compiled	[CE]  	168	None	replace
1061	[BUG]  [BUGGY]  pendString(pathNames);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(pathNames);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
1062	[BUG]  [BUGGY]  checkLenient(peekedString,  peekedLong);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  peekedLong);	  checkLenient(peekedString);    	non-compiled	[CE]  	32	None	replace
1063	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  	91	None	replace
1064	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  	91	None	replace
1065	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  }	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	86	None	replace
1066	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	86	None	replace
1067	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  >  1)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  >  1)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  >  1)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1068	[BUG]  [BUGGY]  if(lenient  ||  peeked.length  >  0)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient  ||  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient  ||  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1069	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  >  2)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  >  2)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  >  2)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1070	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  ==  0)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  ==  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  ==  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1071	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peekedString);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peekedString);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
1072	[BUG]  [BUGGY]  try  {  break;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	70	None	replace
1073	[BUG]  [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  IllegalArgumentException( " ");  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	70	None	replace
1074	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  	96	None	replace
1075	[BUG]  [BUGGY]  bucket  <  0  ||  clearTreeTree();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket  <  0  ||  clearTreeTree();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket  <  0  ||  clearTreeTree();	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  	96	None	replace
1076	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize(1);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize(1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  ||  stackSize(1);	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  	96	None	replace
1077	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0]));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[0]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
1078	[BUG]  [BUGGY]  safeMultiply(pathNames[pos]));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
1079	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1)  {  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1)  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	109	None	replace
1080	[BUG]  [BUGGY]  int[]  pathIndices  =  pathNames.split( ": ");  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  pathNames.split( ": ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  pathNames.split( ": ");	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  	85	None	replace
1081	[BUG]  [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
1082	[BUG]  [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
1083	[BUG]  [BUGGY]  safeNumber(peekedString,  pathNames[0],  pathNames[1])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(peekedString,  pathNames[0],  pathNames[1])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(peekedString,  pathNames[0],  pathNames[1])  {	  safeNumberIfNull(peekedString,    pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	112	None	replace
1084	[BUG]  [BUGGY]  sweepIndices();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  sweepIndices();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	sweepIndices();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1085	[BUG]  [BUGGY]  pushLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pushLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pushLenient();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1086	[BUG]  [BUGGY]  snapLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  snapLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	snapLenient();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1087	[BUG]  [BUGGY]  scanLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  scanLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	scanLenient();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1088	[BUG]  [BUGGY]  sweepFloat();  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  sweepFloat();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	sweepFloat();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1089	[BUG]  [BUGGY]  sweepLenient(0);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  sweepLenient(0);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	sweepLenient(0);	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1090	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_DOUBLE_QUOTED);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(PEEKED_DOUBLE_QUOTED);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
1091	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
1092	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_SINGLE_QUOTED);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(PEEKED_SINGLE_QUOTED);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
1093	[BUG]  [BUGGY]  bucketStack.push(peedString());  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peedString());  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peedString());	  bucketStack.push(peekedString());    	non-compiled	[CE]  	74	None	replace
1094	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedLong);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_SINGLE_QUOTED,  peekedLong);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
1095	[BUG]  [BUGGY]  parent  ==  null  ||  peekedLenient)  {  checkLenient();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedLenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedLenient)  {  checkLenient();	  parent    ==    null    ||    lenient)    {    checkLenient();    	non-compiled	[CE]  	125	None	replace
1096	[BUG]  [BUGGY]  try  {  clearStack();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearStack();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearStack();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
1097	[BUG]  [BUGGY]  try  {  init();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  init();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  init();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
1098	[BUG]  [BUGGY]  try  {  clearState();  }  catch(Throwable  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clearState();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clearState();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
1099	[BUG]  [BUGGY]  quickPeek();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  quickPeek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	quickPeek();	  safePeek();    	non-compiled	[CE]  	25	None	replace
1100	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(NullPointerException  ioe)  {  }	  try    {    checkLenient();    }    catch(JsonNullException    ioe)    {    }    	non-compiled	[CE]  	41	None	replace
1101	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  peekStack();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent  ==  peekStack();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent  ==  peekStack();	  parent!=    null    &&    parent    ==    peekLenient();    	non-compiled	[CE]  	119	None	replace
1102	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  peekStandard();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent  ==  peekStandard();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent  ==  peekStandard();	  parent!=    null    &&    parent    ==    peekLenient();    	non-compiled	[CE]  	119	None	replace
1103	[BUG]  [BUGGY]  enableNegatives(false);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegatives(false);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegatives(false);	  allowNegatives(true);    	non-compiled	[CE]  	138	None	replace
1104	[BUG]  [BUGGY]  allowNegatives(false,  false);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  false);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  false);	  allowNegatives(true);    	non-compiled	[CE]  	138	None	replace
1105	[BUG]  [BUGGY]  allowNegatives(false,  true);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  true);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  true);	  allowNegatives(true);    	non-compiled	[CE]  	138	None	replace
1106	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	92	None	replace
1107	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[4],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	92	None	replace
1108	[BUG]  [BUGGY]  try  {  return  null;  }  catch(Throwable  t)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  null;  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  null;  }  catch(Throwable  t)  {  }	  try    {    break;    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	20	None	replace
1109	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1))  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]  -  1))  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
1110	[BUG]  [BUGGY]  safeNumber(pathNames[0],  pathNames[1]))  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames[0],  pathNames[1]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames[0],  pathNames[1]))  {	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
1111	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  pathNames.length)+  1);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekNumber()  -  pathNames.length)+  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekNumber()  -  pathNames.length)+  1);	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
1112	[BUG]  [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(lenient)  {  try  {  checkLenient();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1113	[BUG]  [BUGGY]  try  {  break;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1114	[BUG]  [BUGGY]  try  {  clear();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1115	[BUG]  [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(Throwable  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1116	[BUG]  [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient();  }  catch(Exception  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient();  }  catch(Exception  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	16	None	replace
1117	[BUG]  [BUGGY]  try  {  return  flushLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  flushLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  flushLenient();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	16	None	replace
1118	[BUG]  [BUGGY]  bucketStack.push(peeredString,  peekedLong);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peeredString,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peeredString,  peekedLong);	  bucketStack.push(peekedString);    	non-compiled	[CE]  	73	None	replace
1119	[BUG]  [BUGGY]  readIndices(int,  peekedString,  pathNames[pos]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  peekedString,  pathNames[pos]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
1120	[BUG]  [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[peekedSize]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  stack,  peekedString,  pathNames[peekedSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  stack,  peekedString,  pathNames[peekedSize]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
1121	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[1]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
1122	[BUG]  [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[0],  peekedString,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[0],  peekedString,  pathNames[0]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
1123	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
1124	[BUG]  [BUGGY]  Parent!=  null)  {  checkLenient();  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent!=  null)  {  checkLenient();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1125	[BUG]  [BUGGY]  parent!=  null)  {  checkLenient(stackSize);  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null)  {  checkLenient(stackSize);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null)  {  checkLenient(stackSize);  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1126	[BUG]  [BUGGY]  parent!=  null)  {  checkLenient(parent);  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null)  {  checkLenient(parent);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null)  {  checkLenient(parent);  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1127	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  pathNames[pos]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  pathNames[pos]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  	49	None	replace
1128	[BUG]  [BUGGY]  allowIndices(in,  pathNames[pos]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  pathNames[pos]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  	49	None	replace
1129	[BUG]  [BUGGY]  checkLenient(indices);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(indices);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(indices);	  checkLenient(peeks);    	non-compiled	[CE]  	154	None	replace
1130	[BUG]  [BUGGY]  checkLenient(pathNames,  stack);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  stack);	  checkLenient(peeks);    	non-compiled	[CE]  	154	None	replace
1131	[BUG]  [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ])+  1;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ])+  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathNames  =  stack.toArray(new  String[pathNames.size()  ])+  1;	  int[]    pathNames    =    stack.toArray(new    String[pathNames.size()    ]);    	non-compiled	[CE]  	161	None	replace
1132	[BUG]  [BUGGY]  allowNegatives(false)  {  checkIndices();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false)  {  checkIndices();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false)  {  checkIndices();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  	118	None	replace
1133	[BUG]  [BUGGY]  enableNegatives(false)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableNegatives(false)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableNegatives(false)  {  checkLenient();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  	118	None	replace
1134	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1  +  1]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1  +  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1  +  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
1135	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1],  peekedString);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1],  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1],  peekedString);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
1136	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1])+  1;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1])+  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  1])+  1;	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
1137	[BUG]  [BUGGY]  allowIndices(pathNames,  peekedLong,  pathNames[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames,  peekedLong,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames,  peekedLong,  pathNames[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1138	[BUG]  [BUGGY]  allowIndices(peekedLong,  pathNames[pos]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(peekedLong,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(peekedLong,  pathNames[pos]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1139	[BUG]  [BUGGY]  allowIndices(peekedLong,  pathNames[0]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(peekedLong,  pathNames[0]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(peekedLong,  pathNames[0]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1140	[BUG]  [BUGGY]  allowIndices(pathNames[pos]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathNames[pos]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1141	[BUG]  [BUGGY]  pendIndices.add(pathNames[pos]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathNames[pos]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	29	None	replace
1142	[BUG]  [BUGGY]  pendIndices.add(in,  pathNames[stackSize]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(in,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(in,  pathNames[stackSize]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	29	None	replace
1143	[BUG]  [BUGGY]  parent!=  null  &&  pathNames[0].equals(pathIndices[0]))  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  pathNames[0].equals(pathIndices[0]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  pathNames[0].equals(pathIndices[0]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  	50	None	replace
1144	[BUG]  [BUGGY]  Parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
1145	[BUG]  [BUGGY]  parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peekedString)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
1146	[BUG]  [BUGGY]  reset();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reset();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reset();	  read();    	non-compiled	[CE]  	157	None	replace
1147	[BUG]  [BUGGY]  init();  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  init();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	init();	  read();    	non-compiled	[CE]  	157	None	replace
1148	[BUG]  [BUGGY]  parent  ==  if(lenient)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  if(lenient)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  if(lenient)  {  checkLenient();  }	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1149	[BUG]  [BUGGY]  parent!=  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  checkLenient();	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1150	[BUG]  [BUGGY]  parent  ==  if(lenient)  {  parent!=  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  if(lenient)  {  parent!=  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  if(lenient)  {  parent!=  checkLenient();  }	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1151	[BUG]  [BUGGY]  catch(IOException  ioe)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	catch(IOException  ioe)  {  }	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	127	None	replace
1152	[BUG]  [BUGGY]  try  {  }  catch(ThrowsException  ioe)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(ThrowsException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(ThrowsException  ioe)  {  }	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	127	None	replace
1153	[BUG]  [BUGGY]  try  {  }  catch(JsonNullException  ioe)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonNullException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonNullException  ioe)  {  }	  try    {    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	127	None	replace
1154	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  PEEKED_BUFFERED);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingName(peekedString,  PEEKED_BUFFERED);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1155	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  pathNames);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingName(peekedString,  pathNames);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1156	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(peekedString,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(peekedString,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingClass(peekedString,  PEEKED_BUFFERED);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1157	[BUG]  [BUGGY]  aughtExceptionHandler.handleMismatch(peekedString,  PEEKED_BUFFERED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMismatch(peekedString,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMismatch(peekedString,  PEEKED_BUFFERED);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1158	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingException( " ");	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1159	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  pathNames[pos]);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingName(peekedString,  pathNames[pos]);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1160	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingName(peekedString);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1161	[BUG]  [BUGGY]  allowIndices(in,  peekedString);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedString);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1162	[BUG]  [BUGGY]  allowIndices(in,  stack);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  stack);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1163	[BUG]  [BUGGY]  allowIndices(in,  pathNames);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  pathNames);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1164	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  PEEKED_SINGLE_QUOTED);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1165	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  MIN_INCOMPLETE_INTEGER);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1166	[BUG]  [BUGGY]  allowIndices(in,  peekedLong,  PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  peekedLong,  PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  peekedLong,  PEEKED_DOUBLE_QUOTED);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1167	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos]).return;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  	105	None	replace
1168	[BUG]  [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]).return;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]).return;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]).return;	  safeMultiply(stack,    peekedString,    pathNames[stackSize]).return;    	non-compiled	[CE]  	105	None	replace
1169	[BUG]  [BUGGY]  try  {  return  peeked.next();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked.next();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked.next();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	192	None	replace
1170	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
1171	[BUG]  [BUGGY]  try  {  throw  new  JsonStringException( " ");  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonStringException( " ");  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonStringException( " ");  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
1172	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	152	None	replace
1173	[BUG]  [BUGGY]  pendInt(peekedLong,  stack,  PEEKED_BUFFERED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedLong,  stack,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedLong,  stack,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1174	[BUG]  [BUGGY]  pendInt(peekedString,  pathNames,  PEEKED_BUFFERED);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedString,  pathNames,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedString,  pathNames,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1175	[BUG]  [BUGGY]  pendInt(peekedString,  stack,  PEEKED_BUFFERED);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekedString,  stack,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekedString,  stack,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1176	[BUG]  [BUGGY]  pendInt(peeked,  stack,  PEEKED_BUFFERED);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  stack,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  stack,  PEEKED_BUFFERED);	  pendInt(stackSize,    peekedLong,    PEEKED_BUFFERED);    	non-compiled	[CE]  	6	None	replace
1177	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
1178	[BUG]  [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
1179	[BUG]  [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	30	None	replace
1180	[BUG]  [BUGGY]  parent!=  null  &&  stack.equals(pathIndices[0]))  {  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  stack.equals(pathIndices[0]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  stack.equals(pathIndices[0]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[0]))    {    checkLenient();    	non-compiled	[CE]  	50	None	replace
1181	[BUG]  [BUGGY]  luate(stackSize,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize,  NUMBER_CHAR_DECIMAL);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
1182	[BUG]  [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_DECIMAL);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_NUMBER_CHAR_DECIMAL);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_NUMBER_CHAR_DECIMAL);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
1183	[BUG]  [BUGGY]  luate(pathNames,  STackSize);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STackSize);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
1184	[BUG]  [BUGGY]  luate(pathNames,  STRICT_PREFIX);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STRICT_PREFIX);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STRICT_PREFIX);	  luate(pathNames,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	129	None	replace
1185	[BUG]  [BUGGY]  try  {  return  peeked.next();  }  catch(Exception  e)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked.next();  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked.next();  }  catch(Exception  e)  {  }	  try    {    return    checkLenient();    }    catch(Exception    e)    {    }    	non-compiled	[CE]  	46	None	replace
1186	[BUG]  [BUGGY]  allowNegated(peeked);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegated(peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegated(peeked);	  allowNegated();    	non-compiled	[CE]  	56	None	replace
1187	[BUG]  [BUGGY]  Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
1188	[BUG]  [BUGGY]  Integer[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Integer[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Integer[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  1,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    1,    pathIndices.length);    	non-compiled	[CE]  	160	None	replace
1189	[BUG]  [BUGGY]  bucket(1);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1);	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
1190	[BUG]  [BUGGY]  int  bucket  =  checkLenient();  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  bucket  =  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  bucket  =  checkLenient();	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
1191	[BUG]  [BUGGY]  int  bucket  =  stack.size()  -  1;  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  bucket  =  stack.size()  -  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  bucket  =  stack.size()  -  1;	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
1192	[BUG]  [BUGGY]  int  bucket  =  stack.size();  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int  bucket  =  stack.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int  bucket  =  stack.size();	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
1193	[BUG]  [BUGGY]  bucket(1)  {  return  peeked;  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucket(1)  {  return  peeked;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucket(1)  {  return  peeked;  }	  bucket(1)    {    checkLenient();    }    	non-compiled	[CE]  	7	None	replace
1194	[BUG]  [BUGGY]  try  {  clear();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	70	None	replace
1195	[BUG]  [BUGGY]  allowNegatives(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1)  {  throw  new  IllegalArgumentException( " ");  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  	121	None	replace
1196	[BUG]  [BUGGY]  allowNegatives(1)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(1)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(1)  {  }	  allowNegatives(1)    {    checkLenient();    }    	non-compiled	[CE]  	121	None	replace
1197	[BUG]  [BUGGY]  allowIndices(in,  stack,  peekedLong);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  stack,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  stack,  peekedLong);	  allowIndices(in,    peekedLong);    	non-compiled	[CE]  	53	None	replace
1198	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(IllegalArgumentException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( " ");  }  catch(IllegalArgumentException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( " ");  }  catch(IllegalArgumentException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	135	None	replace
1199	[BUG]  [BUGGY]  readLenient(peekedString);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(peekedString);	  readLenient();    	non-compiled	[CE]  	2	None	replace
1200	[BUG]  [BUGGY]  readLenient(peekedString,  pathNames[pos]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readLenient(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readLenient(peekedString,  pathNames[pos]);	  readLenient();    	non-compiled	[CE]  	2	None	replace
1201	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
1202	[BUG]  [BUGGY]  try  {  return  pos;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  pos;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  pos;  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
1203	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    break;    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	177	None	replace
1204	[BUG]  [BUGGY]  allowIndices(pathIndices);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(pathIndices);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(pathIndices);	  allowIndices(int[])    {    checkLenient();    }    	non-compiled	[CE]  	54	None	replace
1205	[BUG]  [BUGGY]  checkLenient(peedString,  pathNames);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peedString,  pathNames);	  checkLenient(peekedString);    	non-compiled	[CE]  	32	None	replace
1206	[BUG]  [BUGGY]  checkLenient(peedString,  peekedSize);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peedString,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peedString,  peekedSize);	  checkLenient(peekedString);    	non-compiled	[CE]  	32	None	replace
1207	[BUG]  [BUGGY]  parent  ==  null  ||  peeks.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeks.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeks.length  <  pathIndices.length)  {  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient    <    pathIndices.length)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	193	None	replace
1208	[BUG]  [BUGGY]  tries  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  tries  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	tries  {  checkLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1209	[BUG]  [BUGGY]  tries  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  tries  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	tries  {  checkLenient();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1210	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(IOException  ex)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(IOException  ex)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(IOException  ex)  {  throw  new  JsonMappingException( " ");  }	  if(lenient)    {    try    {    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	134	None	replace
1211	[BUG]  [BUGGY]  readIndices(int,  pathIndices,  stack,  pathNames[stackSize]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(int,  pathIndices,  stack,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(int,  pathIndices,  stack,  pathNames[stackSize]);	  readIndices(int,    stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	198	None	replace
1212	[BUG]  [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize])  {  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
1213	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos--])  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos--])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos--])  {	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    {    	non-compiled	[CE]  	102	None	replace
1214	[BUG]  [BUGGY]  pendInt(peeked,  stackSize)  {  checkLenient();  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  stackSize)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  stackSize)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  	5	None	replace
1215	[BUG]  [BUGGY]  pendInt(peeked,  stack.length)  {  checkLenient();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  stack.length)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  stack.length)  {  checkLenient();  }	  pendInt(stackSize,    peekedLong)    {    checkLenient();    }    	non-compiled	[CE]  	5	None	replace
1216	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	92	None	replace
1217	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	92	None	replace
1218	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1219	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1220	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1221	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[2],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1222	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1223	[BUG]  [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	CheckLenient(peekedString,  pathNames[0],  pathIndices[1],  pathNames[1],  pathNames[2],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3],  pathNames[3]);	  CheckLenient();    	non-compiled	[CE]  	22	None	replace
1224	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos]));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
1225	[BUG]  [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]));	  safeMultiply(stack,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	101	None	replace
1226	[BUG]  [BUGGY]  checkLenient(stackSize,  stackSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(stackSize,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(stackSize,  stackSize);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
1227	[BUG]  [BUGGY]  checkLenient(peekEdge,  stackSize);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekEdge,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekEdge,  stackSize);	  checkLenient(peekedString,    stackSize);    	non-compiled	[CE]  	37	None	replace
1228	[BUG]  [BUGGY]  try  {  return  doPeek();  }  catch(Throwable  t)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  doPeek();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  doPeek();  }  catch(Throwable  t)  {  }	  try    {    checkIndices();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	19	None	replace
1229	[BUG]  [BUGGY]  try  {  }  catch(RuntimeException  e)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(RuntimeException  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(RuntimeException  e)  {  }	  try    {    }    catch(Exception    e)    {    }    	non-compiled	[CE]  	106	None	replace
1230	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Throwable  e)  {  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(Throwable  e)  {  }	  try    {    break;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	47	None	replace
1231	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  }	  try    {    break;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	47	None	replace
1232	[BUG]  [BUGGY]  pendIndices.add(int,  stack,  peekedString,  pathNames[1]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(int,  stack,  peekedString,  pathNames[1]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(int,  stack,  peekedString,  pathNames[1]);  break;	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    break;    	non-compiled	[CE]  	12	None	replace
1233	[BUG]  [BUGGY]  try  {  checkLenient(pathNames);  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(pathNames);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(pathNames);  }  catch(Throwable  t)  {  }	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
1234	[BUG]  [BUGGY]  try  {  checkLenient(pathNames);  }  catch(IOException  ioe)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(pathNames);  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(pathNames);  }  catch(IOException  ioe)  {  }	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
1235	[BUG]  [BUGGY]  checkLenient(pathNames,  PEEKED_BUFFERED);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  PEEKED_BUFFERED);	  checkLenient(pathNames);    	non-compiled	[CE]  	142	None	replace
1236	[BUG]  [BUGGY]  try  {  break;  }  catch(Exception  ioe)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  break;  }  catch(Exception  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  break;  }  catch(Exception  ioe)  {  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    }    	non-compiled	[CE]  	39	None	replace
1237	[BUG]  [BUGGY]  while(t.hasNext())  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1238	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  break;  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  break;  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  break;  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1239	[BUG]  [BUGGY]  while(t.hasNext())  {  try  {  pos--;  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  while(t.hasNext())  {  try  {  pos--;  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	while(t.hasNext())  {  try  {  pos--;  }  catch(Throwable  t)  {  }	  while(t.hasNext())    {    try    {    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	15	None	replace
1240	[BUG]  [BUGGY]  letNegated(false);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  letNegated(false);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	letNegated(false);	  allowNegated(true);    	non-compiled	[CE]  	59	None	replace
1241	[BUG]  [BUGGY]  parent!=  null  &&!lenient)  {  checkLenient(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&!lenient)  {  checkLenient(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&!lenient)  {  checkLenient(stackSize);	  parent!=    null    &&!lenient)    {    checkLenient();    	non-compiled	[CE]  	147	None	replace
1242	[BUG]  [BUGGY]  reader!=  null  &&!lenient)  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader!=  null  &&!lenient)  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader!=  null  &&!lenient)  {  checkLenient();	  parent!=    null    &&!lenient)    {    checkLenient();    	non-compiled	[CE]  	147	None	replace
1243	[BUG]  [BUGGY]  safeNumber(peekedString,  pathNames[pos])  {  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(peekedString,  pathNames[pos])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(peekedString,  pathNames[pos])  {	  safeNumberIfNull(peekedString,    pathNames[pos])    {    	non-compiled	[CE]  	111	None	replace
1244	[BUG]  [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathIndices[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  	90	None	replace
1245	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathNames[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3],    	non-compiled	[CE]  	90	None	replace
1246	[BUG]  [BUGGY]  try  {  checkLenient();  }  catch(JsonMappingException  t)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient();  }  catch(JsonMappingException  t)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient();  }  catch(JsonMappingException  t)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Throwable    t)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
1247	[BUG]  [BUGGY]  pendIndices.add(indent,  stack,  peekedString,  pathNames[1]);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(indent,  stack,  peekedString,  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(indent,  stack,  peekedString,  pathNames[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
1248	[BUG]  [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[1]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peekedString,  stack[0],  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peekedString,  stack[0],  pathNames[1]);	  pendIndices.add(pathIndices[0],    stack,    peekedString,    pathNames[1]);    	non-compiled	[CE]  	28	None	replace
1249	[BUG]  [BUGGY]  validateNegatives(true)  {  checkLenient();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  validateNegatives(true)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	validateNegatives(true)  {  checkLenient();  }	  allowNegatives(true)    {    checkLenient();    }    	non-compiled	[CE]  	118	None	replace
1250	[BUG]  [BUGGY]  bucketStack.push(new  Long(peekSize  -  pathNames.length));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Long(peekSize  -  pathNames.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Long(peekSize  -  pathNames.length));	  bucketStack.push(new    Long(peekNumber()    -    pathNames.length));    	non-compiled	[CE]  	174	None	replace
1251	[BUG]  [BUGGY]  try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.pop();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	178	None	replace
1252	[BUG]  [BUGGY]  bucketStack.push(peekedString,  pathNames[pos]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  pathNames[pos]);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
1253	[BUG]  [BUGGY]  bucketStack.push(peedString,  pathNames[peekedLong]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peedString,  pathNames[peekedLong]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peedString,  pathNames[peekedLong]);	  bucketStack.push(peekedString,    peekedLong);    	non-compiled	[CE]  	76	None	replace
1254	[BUG]  [BUGGY]  pendString(peedString,  pathNames,  stack);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(peedString,  pathNames,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(peedString,  pathNames,  stack);	  pendString(peekedString,    pathNames);    	non-compiled	[CE]  	191	None	replace
1255	[BUG]  [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1,  peekedString);  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1,  peekedString);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.from(stackSize  -  1,  peekedString);  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
1256	[BUG]  [BUGGY]  try  {  return  JsonMappingException.from(stackSize,  1);  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.from(stackSize,  1);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.from(stackSize,  1);  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
1257	[BUG]  [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1);  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.from(stackSize  -  1);  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
1258	[BUG]  [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1,  peeked);  }  catch(Throwable  t)  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  JsonMappingException.from(stackSize  -  1,  peeked);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  JsonMappingException.from(stackSize  -  1,  peeked);  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
1259	[BUG]  [BUGGY]  try  {  throw  new  JsonMappingException( "Failed  to  parse  the  first  character. ");  }  catch(Throwable  t)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  throw  new  JsonMappingException( "Failed  to  parse  the  first  character. ");  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  throw  new  JsonMappingException( "Failed  to  parse  the  first  character. ");  }  catch(Throwable  t)  {  }	  try    {    throw    new    JsonMappingException(   "   ");    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	179	None	replace
1260	[BUG]  [BUGGY]  try  {  pos--;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  pos--;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  pos--;  }  catch(NullPointerException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(NullPointerException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	151	None	replace
1261	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  ]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  ]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    ]);    	non-compiled	[CE]  	82	None	replace
1262	[BUG]  [BUGGY]  luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peeked);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  PEEKED_DOUBLE_QUOTED,  peeked);	  luate(pathNames,    PEEKED_DOUBLE_QUOTED);    	non-compiled	[CE]  	130	None	replace
1263	[BUG]  [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(pathNames[pos],  peekedString,  pathNames[stackSize]);	  safeMultiply(stack,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	100	None	replace
1264	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
1265	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.size();  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.size();    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	163	None	replace
1266	[BUG]  [BUGGY]  luate(stackSize  -  1));  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(stackSize  -  1));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(stackSize  -  1));	  luate();    	non-compiled	[CE]  	23	None	replace
1267	[BUG]  [BUGGY]  flipPeek(stackSize  -  1,  peeked);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipPeek(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipPeek(stackSize  -  1,  peeked);	  bucket();    	non-compiled	[CE]  	21	None	replace
1268	[BUG]  [BUGGY]  pos  =  stack.size()  +  stack.size();  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pos  =  stack.size()  +  stack.size();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pos  =  stack.size()  +  stack.size();	  bucket();    	non-compiled	[CE]  	21	None	replace
1269	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
1270	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	88	None	replace
1271	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathSizes.size()  ]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathSizes.size()  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathSizes.size()  ]);	  int[]    pathIndices    =    stack.toArray(new    String[pathIndexes.size()    ]);    	non-compiled	[CE]  	114	None	replace
1272	[BUG]  [BUGGY]  parent!=  null  &&  parent.testPeek(peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.testPeek(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.testPeek(peekedString);	  parent!=    null    &&    parent!=    null;    	non-compiled	[CE]  	139	None	replace
1273	[BUG]  [BUGGY]  parent!=  null  &&  peeked.length  >  0;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peeked.length  >  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peeked.length  >  0;	  parent!=    null    &&    parent!=    null;    	non-compiled	[CE]  	139	None	replace
1274	[BUG]  [BUGGY]  pendIndices(in,  stack,  pathNames[pos]);  break;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices(in,  stack,  pathNames[pos]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices(in,  stack,  pathNames[pos]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
1275	[BUG]  [BUGGY]  pokedIndices(in,  stack,  pathNames[0]);  break;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pokedIndices(in,  stack,  pathNames[0]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pokedIndices(in,  stack,  pathNames[0]);  break;	  pendIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	187	None	replace
1276	[BUG]  [BUGGY]  enableIndices(in,  stack,  pathNames[stackSize]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  enableIndices(in,  stack,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	enableIndices(in,  stack,  pathNames[stackSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  	49	None	replace
1277	[BUG]  [BUGGY]  allowIndices(in,  pos,  pathNames[stackSize]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(in,  pos,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(in,  pos,  pathNames[stackSize]);	  allowIndices(in,    peekedLong,    pathNames[stackSize]);    	non-compiled	[CE]  	49	None	replace
1278	[BUG]  [BUGGY]  pendIndices.add(peedString,  pathNames[pos]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(peedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(peedString,  pathNames[pos]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	29	None	replace
1279	[BUG]  [BUGGY]  pendIndices.add(PeekedString,  pathNames[stackSize]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(PeekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(PeekedString,  pathNames[stackSize]);	  pendIndices.add(peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	29	None	replace
1280	[BUG]  [BUGGY]  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Exception  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	61	None	replace
1281	[BUG]  [BUGGY]  safeSequence();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeSequence();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeSequence();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
1282	[BUG]  [BUGGY]  safeNegated();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNegated();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNegated();	  safeCheckLenient();    	non-compiled	[CE]  	113	None	replace
1283	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos++]);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathNames[pos++]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathNames[pos++]);	  parent!=    null    &&    parent.equals(peekedString);    	non-compiled	[CE]  	188	None	replace
1284	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  int[stackSize]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  int[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  int[stackSize]);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  	115	None	replace
1285	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(PEEKED_DOUBLE_QUOTED);	  int[]    pathIndices    =    stack.toArray(pathIndices);    	non-compiled	[CE]  	115	None	replace
1286	[BUG]  [BUGGY]  bucketStack.push(peekedString,  bufferedString);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedString,  bufferedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedString,  bufferedString);	  bucketStack.push(peekedString,    peekedString);    	non-compiled	[CE]  	77	None	replace
1287	[BUG]  [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
1288	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
1289	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathTypes[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathTypes[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathTypes[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	10	None	replace
1290	[BUG]  [BUGGY]  exit(stackSize  -  1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  exit(stackSize  -  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	exit(stackSize  -  1);	  safeNumber();    	non-compiled	[CE]  	24	None	replace
1291	[BUG]  [BUGGY]  exit(stackSize  -  1,  peeked);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  exit(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	exit(stackSize  -  1,  peeked);	  safeNumber();    	non-compiled	[CE]  	24	None	replace
1292	[BUG]  [BUGGY]  exit(stackSize);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  exit(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	exit(stackSize);	  safeNumber();    	non-compiled	[CE]  	24	None	replace
1293	[BUG]  [BUGGY]  safeStandardNumber();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeStandardNumber();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeStandardNumber();	  safeNumber();    	non-compiled	[CE]  	24	None	replace
1294	[BUG]  [BUGGY]  reader  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  reader  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	reader  ==  null  ||  lenient)  {  checkLenient();  throw  new  JsonMappingException( " ");  }	  parent    ==    null    ||    lenient)    {    checkLenient();    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
1295	[BUG]  [BUGGY]  allowNegatives()  &&  peeked.length  >  1;  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives()  &&  peeked.length  >  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives()  &&  peeked.length  >  1;	  allowNegatives();    	non-compiled	[CE]  	57	None	replace
1296	[BUG]  [BUGGY]  allowNegatives()  &&  peeked.length  >  1)  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives()  &&  peeked.length  >  1)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives()  &&  peeked.length  >  1)  {	  allowNegatives();    	non-compiled	[CE]  	57	None	replace
1297	[BUG]  [BUGGY]  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Exception  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    checkLenient();    }    catch(Exception    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	67	None	replace
1298	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.split( ": ".);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.split( ": ".);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.split( ": ".);	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  	85	None	replace
1299	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.split( ":. ");  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.split( ":. ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.split( ":. ");	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  	85	None	replace
1300	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.split( ".: ");  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.split( ".: ");  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.split( ".: ");	  int[]    pathIndices    =    peekedString.split(   ":   ");    	non-compiled	[CE]  	85	None	replace
1301	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(null,  peeked);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  parent.replaceChild(null,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  parent.replaceChild(null,  peeked);	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1302	[BUG]  [BUGGY]  parent  ==  parent.replaceChild(null,  peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  parent.replaceChild(null,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  parent.replaceChild(null,  peekedString);	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1303	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent  ==  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent  ==  checkLenient();	  parent    ==    checkLenient();    	non-compiled	[CE]  	120	None	replace
1304	[BUG]  [BUGGY]  try  {  return  checkLenient(t);  }  catch(Throwable  t)  {  }  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  checkLenient(t);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  checkLenient(t);  }  catch(Throwable  t)  {  }	  try    {    checkLenient(t);    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	98	None	replace
1305	[BUG]  [BUGGY]  parent!=  null  &&  peekedString.length()  >  1;  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peekedString.length()  >  1;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peekedString.length()  >  1;	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
1306	[BUG]  [BUGGY]  parent!=  null  &&  peekedString.length()  >  2;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  peekedString.length()  >  2;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  peekedString.length()  >  2;	  parent!=    null    &&    parent    ==    peekedString.length();    	non-compiled	[CE]  	189	None	replace
1307	[BUG]  [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1308	[BUG]  [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[pos]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(PeekedLong,  peekedString,  pathNames[pos]);	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]);    	non-compiled	[CE]  	48	None	replace
1309	[BUG]  [BUGGY]  Parent  <?>  parent!=  null  &&!lenient)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  <?>  parent!=  null  &&!lenient)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  <?>  parent!=  null  &&!lenient)  {  checkLenient();  }	  parent!=    null    &&!lenient)    {    checkLenient();    }    	non-compiled	[CE]  	145	None	replace
1310	[BUG]  [BUGGY]  parent!=  null  &&!lenient  &&  peeked.size()  >  0)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&!lenient  &&  peeked.size()  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&!lenient  &&  peeked.size()  >  0)  {  checkLenient();  }	  parent!=    null    &&!lenient)    {    checkLenient();    }    	non-compiled	[CE]  	145	None	replace
1311	[BUG]  [BUGGY]  allowNegatives(false,  PEEKED_SINGLE_QUOTED);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  PEEKED_SINGLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  PEEKED_SINGLE_QUOTED);	  allowNegatives(false);    	non-compiled	[CE]  	140	None	replace
1312	[BUG]  [BUGGY]  allowNegatives(false,  PEEKED_BUFFERED);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  PEEKED_BUFFERED);	  allowNegatives(false);    	non-compiled	[CE]  	140	None	replace
1313	[BUG]  [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3],    pathIndices[3]);    	non-compiled	[CE]  	13	None	replace
1314	[BUG]  [BUGGY]  try  {  return  peeked.next();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  peeked.next();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  peeked.next();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	16	None	replace
1315	[BUG]  [BUGGY]  try  {  return  getLenient();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  getLenient();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  getLenient();  }  catch(Throwable  t)  {  }	  try    {    return    checkLenient();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	16	None	replace
1316	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  -  1]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  pathIndices[i]	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i]    	non-compiled	[CE]  	162	None	replace
1317	[BUG]  [BUGGY]  if(!lenient  &&  peekedLong!=  null  &&  peeked.length  >  0)  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedLong!=  null  &&  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedLong!=  null  &&  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
1318	[BUG]  [BUGGY]  if(!lenient  &&  peekedLong!=  null  &&  peekedString.length()  >  0)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peekedLong!=  null  &&  peekedString.length()  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peekedLong!=  null  &&  peekedString.length()  >  0)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
1319	[BUG]  [BUGGY]  &&  peekedLong!=  null)  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  &&  peekedLong!=  null)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	&&  peekedLong!=  null)  {  checkLenient();  }	  if(!lenient    &&    peekedLong!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	181	None	replace
1320	[BUG]  [BUGGY]  parent!=  null  &&  parent.containsKey(peekedString);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.containsKey(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.containsKey(peekedString);	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1321	[BUG]  [BUGGY]  parent!=  null  &&  parent.containsKey(peekedString,  pathNames[pos]))  {  checkLenient();  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.containsKey(peekedString,  pathNames[pos]))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.containsKey(peekedString,  pathNames[pos]))  {  checkLenient();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1322	[BUG]  [BUGGY]  parent!=  null  &&  parent.containsKey(pathNames[pos]))  {  checkLenient();  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.containsKey(pathNames[pos]))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.containsKey(pathNames[pos]))  {  checkLenient();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1323	[BUG]  [BUGGY]  parent!=  null  &&  parent.containsKey(stackSize  -  1,  peekedString))  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.containsKey(stackSize  -  1,  peekedString))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.containsKey(stackSize  -  1,  peekedString))  {  checkLenient();  }	  parent!=    null)    {    checkLenient();    }    	non-compiled	[CE]  	117	None	replace
1324	[BUG]  [BUGGY]  readIndices(in,  stack,  pathNames[pos]);  break;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  pathNames[pos]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  pathNames[pos]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	185	None	replace
1325	[BUG]  [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  break;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  break;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	readIndices(in,  stack,  peekedString,  pathNames[peekedLong]);  break;	  readIndices(in,    stack,    peekedString,    pathNames[stackSize]);    break;    	non-compiled	[CE]  	185	None	replace
1326	[BUG]  [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  11];  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  new  int[pathNames.length  -  1  +  11];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  new  int[pathNames.length  -  1  +  11];	  int[]    pathIndices    =    new    int[pathNames.length    -    1];    	non-compiled	[CE]  	83	None	replace
1327	[BUG]  [BUGGY]  checkLenient(pathIndices,  stack);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathIndices,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathIndices,  stack);	  checkLenient(peek);    	non-compiled	[CE]  	31	None	replace
1328	[BUG]  [BUGGY]  pendInt(peekSize,  peekedLong);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peekSize,  peekedLong);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peekSize,  peekedLong);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
1329	[BUG]  [BUGGY]  pendInt(peeked,  stackSize);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(peeked,  stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(peeked,  stackSize);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
1330	[BUG]  [BUGGY]  pendInt(stackSize,  peekedLong,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(stackSize,  peekedLong,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(stackSize,  peekedLong,  MIN_INCOMPLETE_INTEGER);	  pendInt(stackSize,    peekedLong);    	non-compiled	[CE]  	4	None	replace
1331	[BUG]  [BUGGY]  bucketStack.push(peekedLong,  peekedString);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peekedLong,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peekedLong,  peekedString);	  bucketStack.push(peekedLong);    	non-compiled	[CE]  	78	None	replace
1332	[BUG]  [BUGGY]  safeNumber(pathNames[0],  pathNames[1]);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames[0],  pathNames[1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames[0],  pathNames[1]);	  safeNumberIfNull(pathNames[0],    pathNames[1])    {    	non-compiled	[CE]  	107	None	replace
1333	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_BUFFERED)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  PEEKED_BUFFERED)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  PEEKED_BUFFERED)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
1334	[BUG]  [BUGGY]  try  {  }  catch(Throwable  e,  STRICT_MODULE_QUOTED)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(Throwable  e,  STRICT_MODULE_QUOTED)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(Throwable  e,  STRICT_MODULE_QUOTED)  {  }	  try    {    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	45	None	replace
1335	[BUG]  [BUGGY]  luate(PEEKED_SINGLE_QUOTED,  pathNames);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(PEEKED_SINGLE_QUOTED,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(PEEKED_SINGLE_QUOTED,  pathNames);	  luate(pathNames,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	131	None	replace
1336	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  -  1]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  -  1]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size  -  1]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
1337	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  3]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  -  3]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    -    1]);    	non-compiled	[CE]  	81	None	replace
1338	[BUG]  [BUGGY]  pendInt(pos--))  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendInt(pos--))  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendInt(pos--))  {  checkLenient();  }	  pendInt(stackSize    -    1))    {    checkLenient();    }    	non-compiled	[CE]  	3	None	replace
1339	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(IOException  ioe)  {  }	  try    {    break;    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	42	None	replace
1340	[BUG]  [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(InterruptedException  ioe)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  Thread.currentThread().interrupt();  }  catch(InterruptedException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  Thread.currentThread().interrupt();  }  catch(InterruptedException  ioe)  {  }	  try    {    break;    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  	42	None	replace
1341	[BUG]  [BUGGY]  try  {  clear();  }  catch(Throwable  e)  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(Throwable  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(Throwable  e)  {  }	  try    {    checkLenient();    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	43	None	replace
1342	[BUG]  [BUGGY]  checkLenient(peer);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peer);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peer);	  checkLenient(peeked);    	non-compiled	[CE]  	33	None	replace
1343	[BUG]  [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowIndices(PeekedLong,  peekedString,  pathNames[stackSize]));	  allowIndices(peekedLong,    peekedString,    pathNames[stackSize]));    	non-compiled	[CE]  	52	None	replace
1344	[BUG]  [BUGGY]  checkLenient(pathNames,  stack,  peekedSize);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pathNames,  stack,  peekedSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pathNames,  stack,  peekedSize);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
1345	[BUG]  [BUGGY]  checkLenient(peekedString,  pathNames[peekedSize]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  pathNames[peekedSize]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  pathNames[peekedSize]);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
1346	[BUG]  [BUGGY]  checkLenient(peekedString,  pathNames[pos]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peekedString,  pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peekedString,  pathNames[pos]);	  checkLenient(peekedString,    peekedSize);    	non-compiled	[CE]  	36	None	replace
1347	[BUG]  [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]));  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberForSideEquals(pathNames[0],  pathNames[1]));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberForSideEquals(pathNames[0],  pathNames[1]));	  safeNumberForSideEquals(pathNames[0],    pathNames[1]))    {    	non-compiled	[CE]  	110	None	replace
1348	[BUG]  [BUGGY]  safeSecond();  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeSecond();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeSecond();	  safePeek();    	non-compiled	[CE]  	25	None	replace
1349	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathStackSize[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
1350	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathString[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
1351	[BUG]  [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendIndices.add(pathIndices[0],  pathNames[1],  pathIndices[2],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
1352	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	11	None	replace
1353	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[4],  pathIndices[3]);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathNames[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  	14	None	replace
1354	[BUG]  [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathState[4],  pathIndices[3]);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathState[4],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendIndices.add(pathIndices[0],  pathIndices[1],  pathIndices[2],  pathState[4],  pathIndices[3]);	  pendIndices.add(pathIndices[0],    pathIndices[1],    pathIndices[2],    pathIndices[4],    pathIndices[3]);    	non-compiled	[CE]  	14	None	replace
1355	[BUG]  [BUGGY]  PendString(peekedString,  pathNames);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendString(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendString(peekedString,  pathNames);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
1356	[BUG]  [BUGGY]  pendString(pathNames[pos]);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  pendString(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	pendString(pathNames[pos]);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
1357	[BUG]  [BUGGY]  PendString(peekedString);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  PendString(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	PendString(peekedString);	  pendString(peekedString);    	non-compiled	[CE]  	190	None	replace
1358	[BUG]  [BUGGY]  try  {  checkLenient(stackSize);  }  catch(IOException  ioe)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(stackSize);  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(stackSize);  }  catch(IOException  ioe)  {  }	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
1359	[BUG]  [BUGGY]  try  {  checkLenient(peekSize);  }  catch(IOException  ioe)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(peekSize);  }  catch(IOException  ioe)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(peekSize);  }  catch(IOException  ioe)  {  }	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
1360	[BUG]  [BUGGY]  try  {  checkLenient(peekSize);  }  catch(Throwable  t)  {  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(peekSize);  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(peekSize);  }  catch(Throwable  t)  {  }	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
1361	[BUG]  [BUGGY]  try  {  checkLenient(stackSize);  }  catch(Exception  e)  {  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(stackSize);  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(stackSize);  }  catch(Exception  e)  {  }	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
1362	[BUG]  [BUGGY]  try  {  checkLenient(peekSize);  }  catch(Exception  e)  {  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(peekSize);  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(peekSize);  }  catch(Exception  e)  {  }	  checkLenient(peekSize);    	non-compiled	[CE]  	35	None	replace
1363	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  4]);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  4]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  4]);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1]);    	non-compiled	[CE]  	84	None	replace
1364	[BUG]  [BUGGY]  bucketStack.push(peedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peedString);	  bucketStack.push(peekedString);    	non-compiled	[CE]  	73	None	replace
1365	[BUG]  [BUGGY]  bucketStack.push(peeredString);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(peeredString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(peeredString);	  bucketStack.push(peekedString);    	non-compiled	[CE]  	73	None	replace
1366	[BUG]  [BUGGY]  try  {  return  getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  return  getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  return  getLenient();  }  catch(IOException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    return    checkLenient();    }    catch(IOException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
1367	[BUG]  [BUGGY]  bucketStack.push(new  Integer(PEEKED_BUFFERED,  stackSize));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(new  Integer(PEEKED_BUFFERED,  stackSize));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(new  Integer(PEEKED_BUFFERED,  stackSize));	  bucketStack.push(new    Integer(PEEKED_BUFFERED,    pos));    	non-compiled	[CE]  	176	None	replace
1368	[BUG]  [BUGGY]  try  {  stack.clear();  }  catch(Throwable  t)  {  }  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.clear();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.clear();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
1369	[BUG]  [BUGGY]  try  {  stack.pop();  }  catch(Throwable  t)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  stack.pop();  }  catch(Throwable  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  stack.pop();  }  catch(Throwable  t)  {  }	  try    {    clear();    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	180	None	replace
1370	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	86	None	replace
1371	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	86	None	replace
1372	[BUG]  [BUGGY]  checkLenient(pos,  stack);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos,  stack);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos,  stack);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
1373	[BUG]  [BUGGY]  checkLenient(pos,  stack.length);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(pos,  stack.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(pos,  stack.length);	  checkLenient(pos);    	non-compiled	[CE]  	153	None	replace
1374	[BUG]  [BUGGY]  safeMultiply(peekedString,  pathNames[pos--])  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(peekedString,  pathNames[pos--])  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(peekedString,  pathNames[pos--])	  safeMultiply(stack,    peekedString,    pathNames[stackSize])    	non-compiled	[CE]  	104	None	replace
1375	[BUG]  [BUGGY]  luate(PEEKED_SINGLE_QUOTED,  pos);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(PEEKED_SINGLE_QUOTED,  pos);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(PEEKED_SINGLE_QUOTED,  pos);	  luate(pathNames,    pos,    PEEKED_SINGLE_QUOTED);    	non-compiled	[CE]  	132	None	replace
1376	[BUG]  [BUGGY]  Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Integer  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
1377	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[peekNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[peekNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[peekNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  0,  pathIndices.length);	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    System.arraycopy(pathIndices,    0,    pathIndices,    0,    pathIndices.length);    	non-compiled	[CE]  	159	None	replace
1378	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(peekedString))  {  }  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(peekedString))  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(peekedString))  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
1379	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames[pos]))  {  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames[pos]))  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames[pos]))  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
1380	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
1381	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames))  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames))  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().encodeAsString(pathNames))  {  }	  try    {    }    catch(Throwable    t)    {    }    	non-compiled	[CE]  	18	None	replace
1382	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
1383	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  >  2)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  stack.size()  >  2)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  stack.size()  >  2)  {  checkLenient();  }	  if(!lenient    &&    stack.size()    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	183	None	replace
1384	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.values().toArray(new  String[pathNames.size()  ]);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.values().toArray(new  String[pathNames.size()  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.values().toArray(new  String[pathNames.size()  ]);	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  	1	None	replace
1385	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.values().toArray(new  int[pathIndices.size()  ]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.values().toArray(new  int[pathIndices.size()  ]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.values().toArray(new  int[pathIndices.size()  ]);	  bucket(0)    {    checkLenient();    }    	non-compiled	[CE]  	1	None	replace
1386	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stack.size()  >  0;  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED  ||  stack.size()  >  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED  ||  stack.size()  >  0;	  bucketTree    <    NUMBER_CHAR_QUOTED    ||    clearTreeTree();    	non-compiled	[CE]  	96	None	replace
1387	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  	91	None	replace
1388	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[5])  {	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[3])    {    	non-compiled	[CE]  	91	None	replace
1389	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(peekedString);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent.equals(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent.equals(peekedString);	  parent    ==    null    &&    parent    ==    null;    	non-compiled	[CE]  	141	None	replace
1390	[BUG]  [BUGGY]  parent  ==  null  &&  parent.testPeek(peekedString);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  &&  parent.testPeek(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  &&  parent.testPeek(peekedString);	  parent    ==    null    &&    parent    ==    null;    	non-compiled	[CE]  	141	None	replace
1391	[BUG]  [BUGGY]  try  {  checkLenient(pathNames);  }  catch(Exception  e)  {  }  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  checkLenient(pathNames);  }  catch(Exception  e)  {  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  checkLenient(pathNames);  }  catch(Exception  e)  {  }	  checkLenient(peeks);    	non-compiled	[CE]  	154	None	replace
1392	[BUG]  [BUGGY]  flipPeek(stackSize);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipPeek(stackSize);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipPeek(stackSize);	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1393	[BUG]  [BUGGY]  peekLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  peekLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	peekLenient();	  sweepLenient();    	non-compiled	[CE]  	27	None	replace
1394	[BUG]  [BUGGY]  checkLenient(peek,  stackSize  +  1);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  checkLenient(peek,  stackSize  +  1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	checkLenient(peek,  stackSize  +  1);	  checkLenient(peek,    stackSize);    	non-compiled	[CE]  	143	None	replace
1395	[BUG]  [BUGGY]  parent  ==  null  ||  stack.size()  ==  1)  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  stack.size()  ==  1)  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  stack.size()  ==  1)  {  return  PEEKED_BUFFERED;  }	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1396	[BUG]  [BUGGY]  parent  ==  null  ||  stack.size()  ==  0)  {  return  PEEKED_BUFFERED;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  stack.size()  ==  0)  {  return  PEEKED_BUFFERED;  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  stack.size()  ==  0)  {  return  PEEKED_BUFFERED;  }	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1397	[BUG]  [BUGGY]  parent  ==  PEEKED_BUFFERED;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  PEEKED_BUFFERED;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  PEEKED_BUFFERED;	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1398	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(peekedString,  pathNames);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingClass(peekedString,  pathNames);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1399	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingDecimal(PEEKED_BUFFERED,  peekedString);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingDecimal(PEEKED_BUFFERED,  peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingDecimal(PEEKED_BUFFERED,  peekedString);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1400	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingDependency(peekedString,  pathNames);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  aughtExceptionHandler.handleMissingDependency(peekedString,  pathNames);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	aughtExceptionHandler.handleMissingDependency(peekedString,  pathNames);	  if(stackSize    ==    1)    {    return    PEEKED_BUFFERED;    }    	non-compiled	[CE]  	80	None	replace
1401	[BUG]  [BUGGY]  bucketStack.push(stackSize  -  1,  peeked);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketStack.push(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketStack.push(stackSize  -  1,  peeked);	  bucketStack.push(peek);    	non-compiled	[CE]  	155	None	replace
1402	[BUG]  [BUGGY]  bucketTree  <  =  checkLenient();  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  =  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  =  checkLenient();	  bucketTree    <    NUMBER_CHAR_SINGLE_QUOTED)    {    checkLenient();    	non-compiled	[CE]  	97	None	replace
1403	[BUG]  [BUGGY]  safeNumberFor(pathIndices,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathIndices,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathIndices,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]);	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]);    	non-compiled	[CE]  	89	None	replace
1404	[BUG]  [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekStackSize  :  null;  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  bucketTree  <  NUMBER_CHAR_QUOTED?  peekStackSize  :  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	bucketTree  <  NUMBER_CHAR_QUOTED?  peekStackSize  :  null;	  bucketTree    <    NUMBER_CHAR_QUOTED?    checkLenient()    :    null;    	non-compiled	[CE]  	95	None	replace
1405	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_BUFFERED);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(PEEKED_BUFFERED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(PEEKED_BUFFERED);	  parent!=    null    &&    parent    ==    null;    	non-compiled	[CE]  	137	None	replace
1406	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  pos,  pathIndices.length);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  pos,  pathIndices.length);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  System.arraycopy(pathIndices,  0,  pathIndices,  pos,  pathIndices.length);	  [Delete]    	non-compiled	[CE]  	55	None	replace
1407	[BUG]  [BUGGY]  try  {  row();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  row();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  row();  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    clear();    }    catch(IOException    ioe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
1408	[BUG]  [BUGGY]  safePeek(peekedString);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safePeek(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safePeek(peekedString);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  	108	None	replace
1409	[BUG]  [BUGGY]  safeNumber(pathNames[pos]);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(pathNames[pos]);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(pathNames[pos]);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  	108	None	replace
1410	[BUG]  [BUGGY]  safeAdd(peekedString);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeAdd(peekedString);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeAdd(peekedString);	  safeNumberIfNull(peekedString);    	non-compiled	[CE]  	108	None	replace
1411	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  >  0  &&  peeked.length  >  0)  {  checkLenient();  }  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  >  0  &&  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  >  0  &&  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1412	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  >  0  &&  peeked.charAt(0)!=  '-')  {  checkLenient();  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  >  0  &&  peeked.charAt(0)!=  '-')  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  >  0  &&  peeked.charAt(0)!=  '-')  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1413	[BUG]  [BUGGY]  if(!lenient  &&  peeked.length  >  0  ||  peeked.length  >  0)  {  checkLenient();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  if(!lenient  &&  peeked.length  >  0  ||  peeked.length  >  0)  {  checkLenient();  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	if(!lenient  &&  peeked.length  >  0  ||  peeked.length  >  0)  {  checkLenient();  }	  if(!lenient    &&    peeked.length    >    0)    {    checkLenient();    }    	non-compiled	[CE]  	182	None	replace
1414	[BUG]  [BUGGY]  luate(pathNames,  STACKSIGN);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  luate(pathNames,  STACKSIGN);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	luate(pathNames,  STACKSIGN);	  luate(pathNames,    NUMBER_CHAR_EXP_SIGN);    	non-compiled	[CE]  	128	None	replace
1415	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  PEEKED_  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  PEEKED_  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.size()  ]);  for(int  i  =  0,  len  =  pathIndices.length;  i  <  len;  ++i)  {  pathIndices[i]  =  PEEKED_	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.size()    ]);    for(int    i    =    0,    len    =    pathIndices.length;    i    <    len;    ++i)    {    pathIndices[i]    =    pathIndices[i];    	non-compiled	[CE]  	164	None	replace
1416	[BUG]  [BUGGY]  safeMultiply(stackSize  -  1,  peeked);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize  -  1,  peeked);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize  -  1,  peeked);	  safely();    	non-compiled	[CE]  	26	None	replace
1417	[BUG]  [BUGGY]  safeMultiply(stackSize  -  1,  peeked.length));  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeMultiply(stackSize  -  1,  peeked.length));  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeMultiply(stackSize  -  1,  peeked.length));	  safely();    	non-compiled	[CE]  	26	None	replace
1418	[BUG]  [BUGGY]  piedLong  -=  pathIndices[pos];  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  piedLong  -=  pathIndices[pos];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	piedLong  -=  pathIndices[pos];	  piedLong    =    peekIndices[pos];    	non-compiled	[CE]  	149	None	replace
1419	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  checkLenient(stackSize);  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  checkLenient(stackSize);  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  checkLenient(stackSize);  }	  parent    ==    null    ||    lenient)    {    checkLenient();    }    	non-compiled	[CE]  	123	None	replace
1420	[BUG]  [BUGGY]  safeNumber(1);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumber(1);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumber(1);	  safeNumber(1)    {    	non-compiled	[CE]  	133	None	replace
1421	[BUG]  [BUGGY]  try  {  clear();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  clear();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  clear();  }  catch(JsonMappingException  ioe)  {  throw  new  JsonMappingException( " ");  }	  try    {    checkLenient();    }    catch(JsonMappingException    ioe)    {    throw    new    JsonMappingException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
1422	[BUG]  [BUGGY]  Parent  ==  null  &&  parent!=  null;  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  Parent  ==  null  &&  parent!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	Parent  ==  null  &&  parent!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  	136	None	replace
1423	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[4],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
1424	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
1425	[BUG]  [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]!=  null;  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]!=  null;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[2],  pathIndices[3]!=  null;	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
1426	[BUG]  [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	safeNumberFor(peekedString,  pathNames[0],  pathIndices[1],  pathIndices[2],  pathIndices[3],  pathIndices[3],  pathIndices[3]	  safeNumberFor(peekedString,    pathNames[0],    pathIndices[1],    pathIndices[1],    pathIndices[2],    pathIndices[2],    pathIndices[2],    pathIndices[3]    	non-compiled	[CE]  	87	None	replace
1427	[BUG]  [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  6)];  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  6)];  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	int[]  pathIndices  =  stack.toArray(new  String[pathNames.length  +  6)];	  int[]    pathIndices    =    stack.toArray(new    String[pathNames.length    +    1)];    	non-compiled	[CE]  	116	None	replace
1428	[BUG]  [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[pos]));  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[pos]));  }  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  lenient)  {  throw  new  JsonMappingException( " ".equals(pathNames[pos]));  }	  parent    ==    null    ||    lenient)    {    throw    new    JsonMappingException(   "   ".equals(pathNames[stackSize]));    }    	non-compiled	[CE]  	195	None	replace
1429	[BUG]  [BUGGY]  flipBounds();  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  flipBounds();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	flipBounds();	  bucketPeek();    	non-compiled	[CE]  	156	None	replace
1430	[BUG]  [BUGGY]  allowNegatives(false,  PEEKED_DOUBLE_QUOTED);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  allowNegatives(false,  PEEKED_DOUBLE_QUOTED);  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	allowNegatives(false,  PEEKED_DOUBLE_QUOTED);	  allowNegatives(true);    	non-compiled	[CE]  	138	None	replace
1431	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance(),  t)  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
1432	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[0]))  {  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[0]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[0]))  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
1433	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[i]))  {  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[i]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[i]))  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
1434	[BUG]  [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[pos]))  {  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[pos]))  {  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	try  {  }  catch(JsonStringEncoder.getInstance().quoteAsString(pathNames[pos]))  {	  try    {    }    catch(Throwable    t)    {    	non-compiled	[CE]  	99	None	replace
1435	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(pathIndices[pos++]))  {  checkLenient();  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent!=  null  &&  parent.equals(pathIndices[pos++]))  {  checkLenient();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent!=  null  &&  parent.equals(pathIndices[pos++]))  {  checkLenient();	  parent!=    null    &&    parent.equals(pathIndices[pos]))    {    checkLenient();    	non-compiled	[CE]  	51	None	replace
1436	[BUG]  [BUGGY]  parent  ==  null  ||  peeked.length()  ==  0;  [CE]  [FE]              MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  null  ||  peeked.length()  ==  0;  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  null  ||  peeked.length()  ==  0;	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
1437	[BUG]  [BUGGY]  parent  ==  peeked?  null  :  parent.peek();  [CE]  [FE]                MalformedJsonException      [CONTEXT]      }  return  peeked  =  PEEKED_DOUBLE_QUOTED;  case  '[':  return  peeked  =  PEEKED_BEGIN_ARRAY;  case  '{':  return  peeked  =  PEEKED_BEGIN_OBJECT;  default:  pos--;  //  Don't  consume  the  first  character  in  a  literal  value.  }  if  (stackSize  ==  1)  {      [BUGGY]  parent  ==  peeked?  null  :  parent.peek();  [BUGGY]      }  int  result  =  peekKeyword();  if  (result  !=  PEEKED_NONE)  {  return  result;  }  result  =  peekNumber();  if  (result  !=  PEEKED_NONE)  {  return  result;  [CLASS]  JsonReader  1  [METHOD]  doPeek  [RETURN_TYPE]  int  [VARIABLES]  boolean  lenient  Reader  in  int[]  pathIndices  stack  String  peekedString  String[]  pathNames  long  MIN_INCOMPLETE_INTEGER  peekedLong  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  limit  lineNumber  lineStart  p  peekStack  peeked  peekedNumberLength  pos  result  stackSize  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.3651483716701107	586	586	3	replace	parent  ==  peeked?  null  :  parent.peek();	  parent    ==    null;    	non-compiled	[CE]  	150	None	replace
