bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                      MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
8	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
9	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
10	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
11	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  0);  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  0);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
12	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }	      	non-compiled	[CE]  	7	None	replace
14	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  [FE]                      MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	      	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [CE]  [FE]                        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }	      	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [CE]  [FE]                          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }	      	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [CE]  [FE]                            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }	      	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString(  [CE]  [FE]                              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString(  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString(	      	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  [CE]  [FE]                                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {	      	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
23	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
26	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	6	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                      MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
32	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
35	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
36	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
37	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
38	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
39	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
42	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
43	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
44	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  false)to  accept  malformed  JSON. ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
45	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
46	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
47	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
48	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
49	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
50	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
55	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	9	None	replace
56	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
58	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  0);  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  0);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
59	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
60	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
61	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
62	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
63	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
64	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
65	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  if(!lenient)  {  throwOnEof;  }  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throwOnEof;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throwOnEof;  }	      	non-compiled	[CE]  	7	None	replace
68	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [CE]  [FE]                      MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));	      	non-compiled	[CE]  	7	None	replace
69	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	      	non-compiled	[CE]  	7	None	replace
70	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	      	non-compiled	[CE]  	7	None	replace
71	[BUG]  [BUGGY]  if(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }	      	non-compiled	[CE]  	7	None	replace
72	[BUG]  [BUGGY]  in.skipChildren();  [CE]  [FE]                              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  in.skipChildren();  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.skipChildren();	      	non-compiled	[CE]  	7	None	replace
73	[BUG]  [BUGGY]  if(!lenient)  {  throwOnEof  =  true;  }  [CE]  [FE]                                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throwOnEof  =  true;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throwOnEof  =  true;  }	      	non-compiled	[CE]  	7	None	replace
74	[BUG]  [BUGGY]  in.close();  [CE]  [FE]                    MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  in.close();  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.close();	      	non-compiled	[CE]  	7	None	replace
75	[BUG]  [BUGGY]  int  lineNumber  =  stack.size();  [CE]  [FE]                      MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  int  lineNumber  =  stack.size();  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.size();	      	non-compiled	[CE]  	7	None	replace
76	[BUG]  [BUGGY]  if(!lenient)  {  throw  onEof();  }  [CE]  [FE]                        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throw  onEof();  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throw  onEof();  }	      	non-compiled	[CE]  	7	None	replace
77	[BUG]  [BUGGY]  if(!lenient)  {  throw  onEof  =  true;  }  [CE]  [FE]                          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throw  onEof  =  true;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throw  onEof  =  true;  }	      	non-compiled	[CE]  	7	None	replace
78	[BUG]  [BUGGY]  if(!lenient)  {  throw  onEof;  }  [CE]  [FE]                            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  if(!lenient)  {  throw  onEof;  }  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throw  onEof;  }	      	non-compiled	[CE]  	7	None	replace
79	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	5	None	replace
80	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
81	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
82	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	8	None	replace
83	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
85	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
86	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
87	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
88	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [CE]  [FE]        MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
89	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
90	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
91	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);  [CE]  [FE]          MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
92	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	11	None	replace
93	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [CE]  [FE]            MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
94	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
95	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                MalformedJsonException    [CONTEXT]    private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {    [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]    }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	3	None	replace
